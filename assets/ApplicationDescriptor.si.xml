<!-- 
/** 
 * [SIMINOV FRAMEWORK]
 * Copyright [2013] [Siminov Software Solution LLP|support@siminov.com]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 **/

-->

<!-- Design of ApplicationDescriptor.si.xml -->
 
<?xml version="1.0" encoding="UTF-8"?>

<siminov>
    
	<!-- General Application Description Properties -->
	
		<!-- Mandatory Field -->
	<property name="name">application_name</property>	
	
		<!-- Optional Field -->
	<property name="description">application_description</property>
	
		<!-- Mandatory Field (Default is 0.0) -->
	<property name="version">application_version</property>


	
	<!-- Siminov Framework Performance Properties -->
	
		<!-- Optional Field (Default is true)-->
	<property name="load_initially">true/false</property>


	
	<!-- Database Descriptors Used By Application (zero-to-many) -->	
		<!-- Optional Field's -->
	<database-descriptors>
		<database-descriptor>full_path_of_database_descriptor_file</database-descriptor>
	</database-descriptors>
		

   	<!-- Services -->
    <service-descriptors>
  		
  			<!-- Service -->
        <service-descriptor>full_path_of_service</service-descriptor>
    
    </service-descriptors>

    
	
    <!-- Sync Handlers -->
    	<!-- Sync Handler -->
    <sync-descriptors>
        
        <sync-descriptor>
            
           		<!-- Mandatory Field -->
     		<property name="name">name_of_sync_handler</property>
			
     			<!-- Optional Field -->
     		<property name="sync_interval">sync_interval_in_millisecond</property>
     				
     			<!-- Optional Field -->
     				<!-- Default: SCREEN -->
			<property name="type">INTERVAL|SCREEN</property>
			
     		<!-- Services -->
     			<!-- Service -->
     		<services>
     		    
     		    <service>name_of_service.name_of_api</service>
     		    
     		</services>
        </sync-descriptor>
        
    </sync-descriptors>
    

    <!-- Authentication -->
    <authentication-descriptor>
        
        	<!-- Mandatory Field -->
        <property name="type">type_of_authentication</property>
		
    </authentication-descriptor>

    
    <!-- Push Notification -->
    <notification-descriptor>
        
        	<!-- Optional Field -->
        <property name="name_of_property">value_of_property</property>

    </notification-descriptor>
    
	
	<adapter-descriptors>
        
        <!-- Adapter Paths -->
	    <adapter-descriptor>adapter_path</adapter-descriptor>
	    	        
    </adapter-descriptors>
		
	
	<!-- Library Descriptors Used By Application (zero-to-many) -->
		<!-- Optional Field's -->
	<libraries>
	 	<library>full_path_of_library_descriptor_file</library>   
	</libraries>
	
	
	<!-- Event Handlers Implemented By Application (zero-to-many) -->
	
		<!-- Optional Field's -->
	<event-handlers>
		<event-handler>full_java_class_path_of_event_handler/javascript_class_path_of_event_handler (ISiminovHandler/IDatabaseHandler)</event-handler>
	</event-handlers>

</siminov>




<!-- 

ApplicationDescriptor.si.xml is the one who connects application to SIMINOV. It contains properties which defines the behaviour of application.

Application Descriptor Elements: 
	
	i. General Properties About Application.
		
		-> name* : Name of application. It is mandatory field. If any resources created by application then it will be under folder named on it.
		
		-> description: Description of application. It is optional field.

		-> version: Version of application. It is mandatory field. Default is 0.0.
		

		
	ii. Framework Performance Properties.
	
		-> load_initially: true/false: ORM(Object Relational Mapping) to be done at start of application or at the time of need. 
							It is optional field. By default its false, means mapping is done when its required. 
							
		
		
	iii. Database Descriptor Paths Used In Application 
			- Path of all database descriptor's used in application.
			- Every database descriptor have its own database object.


	
	iv. Event Handlers Implemented By Application.
		- SIMINOV FRAMEWORK provides two type of event handlers
	
			-> ISiminovEvents: It contains events associated with life cycle of SIMINOV.
				such as (coreInitialized, firstTimeSiminovInitialized, coreStoped).
	
		
			-> IDatabaseEvents: It contains events associated with database operations.
				such as (databaseCreated, databaseDroped, tableCreated, tableDroped, indexCreated).

		- Application can have implementation of this two event listeners.


			Note*: 
				-> Event Handler can be define in both Native and Web.
				
				-> Native Event Handler: If you want to handle Event in Native then define Event Handler using Java. 
						Specify full Java class path and name in ApplicationDescriptor.si.xml.
				
				-> Web Event Handler: If you want to handle Event in Web then define Event Handler using JavaScript.
						Specify only JavaScript Function name in ApplicationDescriptor.si.xml.
				
				-> Both (Native/Web) Event Handler: If you want to handle Event in both Native and Web then define Event Handler in both Java and JavaScript.
						Specify full Java class path and name in ApplicationDescriptor.si.xml, no need to define for JavaScript because Siminov will automatically accume same name for it.
				


	i. Adapter: Adapter allows Web and Native to work together that normally could not because of incompatible Technologies. Adapter basically maps Javascript to Native and vice-versa.
	
		-> name* : Name of Adapter. It is mandatory field.
		
		-> description: Description about Adapter. It is Optional field.
		
		-> type: Type of Adapter. It is Mandatory field. 
			
			i. WEB-TO-NATIVE: It says this adapter maps JavaScript functions to Native functions.
			ii. NATIVE-TO-WEB: It says this adapter maps Native functions to JavaScript functions.
			
		-> map_to: Name of Class (Web/Native) mapped to this adapter. It is not mandatory field.
		
		-> cache:  true/false: It says that adapter mapped to Class needs to be cached or not. It is Optional field. Default is false.
		

		i.> i. Hander: Handler is one which handle request from WEB-TO-NATIVE or NATIVE-TO-WEB. 
		
			-> name* : Name of Handler. It is Mandatory field.
			
			-> description: Description about handler. It is Optional field.
			
			-> map_to*: Name of handler function which handles request from WEB-TO-NATIVE or NATIVE-TO-WEB.
			
			
			i.> i.> i. Parameter: Parameters are bacially arguments passed to handler.
			
						-> name* : Name of Parameter. It is Mandatory field.
						
						-> description: Description about Parameter. It is Optional field.
						
						-> type* : Type of Parameter. It is Mandatory field.

		
			i.> i.> ii. Return: Return defines about data returned from handler.
			
						-> type* : Type of Returned Data. It is Mandatory field.
						
						-> description: Description about Return Data.



	Note*: Adapter can be define in HybridDescriptor.si.xml file or can be defined in seprate xml file.
		
		-> If you define Adapter in HybridDescriptor.si.xml file then define it in adapters TAG.
		
		-> If you define Adapter in seprate xml file then specify Adapter file path in HybridDescriptor.si.xml file.
		
							
							

-->



