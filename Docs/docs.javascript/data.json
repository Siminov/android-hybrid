{
    "project": {
        "name": "Siminov Hybrid",
        "description": "Siminov Hybrid JavaScript APIs Documentation",
        "version": "2.0",
        "url": "https://github.com/Siminov/hybrid/",
        "logo": "resources/siminov-logo.gif"
    },
    "files": {
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "modules": {
                "Adapter": 1
            },
            "classes": {
                "Adapter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Array.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Array.js",
            "modules": {
                "Collection": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Dictionary.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Dictionary.js",
            "modules": {},
            "classes": {
                "Dictionary": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/String.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/String.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/StringBuilder.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/StringBuilder.js",
            "modules": {},
            "classes": {
                "StringBuilder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "modules": {
                "Connection": 1
            },
            "classes": {
                "ConnectionRequest": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionResponse.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionResponse.js",
            "modules": {},
            "classes": {
                "ConnectionResponse": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js",
            "modules": {
                "Design": 1,
                "Impl": 1
            },
            "classes": {
                "IAverage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js",
            "modules": {},
            "classes": {
                "IAverageClause": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "modules": {},
            "classes": {
                "ICount": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js",
            "modules": {},
            "classes": {
                "ICountClause": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDelete.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDelete.js",
            "modules": {},
            "classes": {
                "IDelete": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js",
            "modules": {},
            "classes": {
                "IDeleteClause": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "modules": {},
            "classes": {
                "IGroupConcat": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js",
            "modules": {},
            "classes": {
                "IGroupConcatClause": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js",
            "modules": {},
            "classes": {
                "IMax": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js",
            "modules": {},
            "classes": {
                "IMaxClause": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js",
            "modules": {},
            "classes": {
                "IMin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js",
            "modules": {},
            "classes": {
                "IMinClause": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "modules": {},
            "classes": {
                "ISelect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js",
            "modules": {},
            "classes": {
                "ISelectClause": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js",
            "modules": {},
            "classes": {
                "ISum": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js",
            "modules": {},
            "classes": {
                "ISumClause": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js",
            "modules": {},
            "classes": {
                "ITotal": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js",
            "modules": {},
            "classes": {
                "ITotalClause": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "modules": {},
            "classes": {
                "Clause": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "modules": {},
            "classes": {
                "Database": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "modules": {},
            "classes": {
                "Select": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Transaction.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Transaction.js",
            "modules": {},
            "classes": {
                "Transaction": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/EventHandler.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/EventHandler.js",
            "modules": {},
            "classes": {
                "EventHandler": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/IDatabaseEvents.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/IDatabaseEvents.js",
            "modules": {
                "Database": 1
            },
            "classes": {
                "IDatabaseEvents": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/INotificationEvents.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/INotificationEvents.js",
            "modules": {
                "Events": 1
            },
            "classes": {
                "INotificationEvents": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISiminovEvents.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISiminovEvents.js",
            "modules": {},
            "classes": {
                "ISiminovEvents": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISyncEvents.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISyncEvents.js",
            "modules": {},
            "classes": {
                "ISyncEvents": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/DatabaseException.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/DatabaseException.js",
            "modules": {
                "Exception": 1
            },
            "classes": {
                "DatabaseException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/DeploymentException.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/DeploymentException.js",
            "modules": {},
            "classes": {
                "DeploymentException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/NotificationException.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/NotificationException.js",
            "modules": {},
            "classes": {
                "NotificationException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/ServiceException.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/ServiceException.js",
            "modules": {},
            "classes": {
                "ServiceException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovException.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovException.js",
            "modules": {},
            "classes": {
                "SiminovException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovExceptionHandler.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovExceptionHandler.js",
            "modules": {},
            "classes": {
                "SiminovExceptionHandler": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SyncException.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SyncException.js",
            "modules": {},
            "classes": {
                "SyncException": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js",
            "modules": {
                "Function": 1
            },
            "classes": {
                "Function": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Log/Log.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Log/Log.js",
            "modules": {
                "Log": 1
            },
            "classes": {
                "Log": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "modules": {
                "Model": 1
            },
            "classes": {
                "AdapterDescriptor.Handler": 1,
                "AdapterDescriptor.Handler.Parameter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "modules": {},
            "classes": {
                "ApplicationDescriptor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "modules": {},
            "classes": {
                "DatabaseDescriptor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "modules": {},
            "classes": {
                "EntityDescriptor": 1,
                "EntityDescriptor.Attribute": 1,
                "EntityDescriptor.Index": 1,
                "EntityDescriptor.Relationship": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/HybridSiminovDatas.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/HybridSiminovDatas.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "modules": {},
            "classes": {
                "LibraryDescriptor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/NotificationDescriptor.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/NotificationDescriptor.js",
            "modules": {},
            "classes": {
                "NotificationDescriptor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "modules": {},
            "classes": {
                "ServiceDescriptor": 1,
                "ServiceDescriptor.Request": 1,
                "ServiceDescriptor.Request.QueryParameter": 1,
                "ServiceDescriptor.Request.HeaderParameter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "modules": {},
            "classes": {
                "SyncDescriptor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Message.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Message.js",
            "modules": {
                "Notification": 1
            },
            "classes": {
                "Message": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/NotificationManager.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/NotificationManager.js",
            "modules": {},
            "classes": {
                "NotificationManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Registration.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Registration.js",
            "modules": {},
            "classes": {
                "Registration": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/ReaderWriter/SIDatasHelper.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/ReaderWriter/SIDatasHelper.js",
            "modules": {
                "Parser": 1
            },
            "classes": {
                "SIDatasHelper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "modules": {
                "Resource": 1
            },
            "classes": {
                "Resources": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IResource.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IResource.js",
            "modules": {
                "Service": 1
            },
            "classes": {
                "IResource": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js",
            "modules": {},
            "classes": {
                "IService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js",
            "modules": {},
            "classes": {
                "IServiceEvents": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "modules": {},
            "classes": {
                "Service": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/ServiceEventHandler.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/ServiceEventHandler.js",
            "modules": {},
            "classes": {
                "ServiceEventHandler": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/ServiceHandler.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/ServiceHandler.js",
            "modules": {},
            "classes": {
                "ServiceHandler": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncHandler.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncHandler.js",
            "modules": {
                "Sync": 1
            },
            "classes": {
                "SyncHandler": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncRequest.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncRequest.js",
            "modules": {},
            "classes": {
                "SyncRequest": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Utils/Utils.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Utils/Utils.js",
            "modules": {
                "Utils": 1
            },
            "classes": {
                "Utils": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Callback.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Callback.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "modules": {},
            "classes": {
                "Constants": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Import.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Import.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Siminov-build.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Siminov-build.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Siminov.js": {
            "name": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Siminov.js",
            "modules": {},
            "classes": {
                "Siminov": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Adapter": {
            "name": "Adapter",
            "submodules": {},
            "elements": {},
            "classes": {
                "Adapter": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 81,
            "description": "It is one which describes properties required to map Hybrid TO Native and vice-versa.",
            "is_constructor": 1
        },
        "Collection": {
            "name": "Collection",
            "submodules": {},
            "elements": {},
            "classes": {
                "Dictionary": 1,
                "StringBuilder": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/StringBuilder.js",
            "line": 49,
            "description": "A Collection represents a group of objects, know as its elements.\nSiminov Collection (SI Collection) is a set of classes and interfaces that implement commonly reusable collection data structures.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "value",
                    "description": "Array of characters.",
                    "type": "String"
                }
            ]
        },
        "Connection": {
            "name": "Connection",
            "submodules": {},
            "elements": {},
            "classes": {
                "ConnectionRequest": 1,
                "ConnectionResponse": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionResponse.js",
            "line": 48,
            "description": "It is one which describes properties required to describe connection information.",
            "is_constructor": 1
        },
        "Database": {
            "name": "Database",
            "submodules": {
                "Impl": 1
            },
            "elements": {},
            "classes": {
                "IAverage": 1,
                "IAverageClause": 1,
                "ICount": 1,
                "ICountClause": 1,
                "IDelete": 1,
                "IDeleteClause": 1,
                "IGroupConcat": 1,
                "IGroupConcatClause": 1,
                "IMax": 1,
                "IMaxClause": 1,
                "IMin": 1,
                "IMinClause": 1,
                "ISelect": 1,
                "ISelectClause": 1,
                "ISum": 1,
                "ISumClause": 1,
                "ITotal": 1,
                "ITotalClause": 1,
                "Clause": 1,
                "Database": 1,
                "Select": 1,
                "Transaction": 1,
                "IDatabaseEvents": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/IDatabaseEvents.js",
            "line": 46,
            "description": "Exposes methods which deal with events associated with database operation's.\nIt has methods such as (databaseCreated, databaseDroped, tableCreated, tableDroped, indexCreated).",
            "is_constructor": 1,
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Select"
                }
            ]
        },
        "Design": {
            "name": "Design",
            "submodules": {},
            "elements": {},
            "classes": {
                "IResource": 1,
                "IService": 1,
                "IServiceEvents": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "Service",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js",
            "line": 58,
            "description": "Design contain all interfaces required by database layer to deal with database.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "resource",
                    "description": "Resource class object.",
                    "type": "Resource"
                }
            ]
        },
        "Impl": {
            "name": "Impl",
            "submodules": {},
            "elements": {},
            "classes": {
                "IAverage": 1,
                "IAverageClause": 1,
                "ICount": 1,
                "ICountClause": 1,
                "IDelete": 1,
                "IDeleteClause": 1,
                "IGroupConcat": 1,
                "IGroupConcatClause": 1,
                "IMax": 1,
                "IMaxClause": 1,
                "IMin": 1,
                "IMinClause": 1,
                "ISelect": 1,
                "ISelectClause": 1,
                "ISum": 1,
                "ISumClause": 1,
                "ITotal": 1,
                "ITotalClause": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "Database",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js",
            "line": 56,
            "description": "Exposes API's to get average value of all non-NULL X within a group. \nString and BLOB values that do not look like numbers are interpreted as 0.\nThe result of avg() is always a floating point value as long as at there is at least one non-NULL input even if all inputs are integers.\nThe result of avg() is NULL if and only if there are no non-NULL inputs.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "select",
                    "description": "Select class object.",
                    "type": "Select"
                }
            ]
        },
        "Events": {
            "name": "Events",
            "submodules": {},
            "elements": {},
            "classes": {
                "EventHandler": 1,
                "INotificationEvents": 1,
                "ISiminovEvents": 1,
                "ISyncEvents": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISyncEvents.js",
            "line": 46,
            "description": "It contain all Events triggered by Siminov Framework.",
            "is_constructor": 1
        },
        "Exception": {
            "name": "Exception",
            "submodules": {},
            "elements": {},
            "classes": {
                "DatabaseException": 1,
                "DeploymentException": 1,
                "NotificationException": 1,
                "ServiceException": 1,
                "SiminovException": 1,
                "SiminovExceptionHandler": 1,
                "SyncException": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SyncException.js",
            "line": 47,
            "description": "It contain Siminov defined exceptions.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "className",
                    "description": "Name of Class",
                    "type": "String"
                },
                {
                    "name": "methodName",
                    "description": "Name of Method",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "Message",
                    "type": "String"
                }
            ]
        },
        "Function": {
            "name": "Function",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js",
            "line": 20,
            "description": "It provide Util class needed by Siminov Framework."
        },
        "Utils": {
            "name": "Utils",
            "submodules": {},
            "elements": {},
            "classes": {
                "Function": 1,
                "Utils": 1,
                "Constants": 1,
                "Siminov": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Siminov.js",
            "line": 223,
            "description": "Exposes utility api's to framework/application",
            "is_constructor": 1
        },
        "Log": {
            "name": "Log",
            "submodules": {},
            "elements": {},
            "classes": {
                "Log": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Log/Log.js",
            "line": 47,
            "description": "It provide Siminov Log features.",
            "is_constructor": 1
        },
        "Model": {
            "name": "Model",
            "submodules": {},
            "elements": {},
            "classes": {
                "ApplicationDescriptor": 1,
                "AdapterDescriptor.Handler": 1,
                "AdapterDescriptor.Handler.Parameter": 1,
                "DatabaseDescriptor": 1,
                "EntityDescriptor": 1,
                "EntityDescriptor.Attribute": 1,
                "EntityDescriptor.Index": 1,
                "EntityDescriptor.Relationship": 1,
                "LibraryDescriptor": 1,
                "NotificationDescriptor": 1,
                "ServiceDescriptor": 1,
                "ServiceDescriptor.Request": 1,
                "ServiceDescriptor.Request.QueryParameter": 1,
                "ServiceDescriptor.Request.HeaderParameter": 1,
                "SyncDescriptor": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "line": 48,
            "description": "It contain all Models as per required by Siminov Framework.",
            "is_constructor": 1
        },
        "Notification": {
            "name": "Notification",
            "submodules": {},
            "elements": {},
            "classes": {
                "Message": 1,
                "NotificationManager": 1,
                "Registration": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Registration.js",
            "line": 46,
            "description": "It contain all Classes related to push notification.",
            "is_constructor": 1
        },
        "Parser": {
            "name": "Parser",
            "submodules": {},
            "elements": {},
            "classes": {
                "SIDatasHelper": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/ReaderWriter/SIDatasHelper.js",
            "line": 49,
            "description": "It contain all parser classes required by  Siminov Framework.",
            "is_constructor": 1
        },
        "Resource": {
            "name": "Resource",
            "submodules": {},
            "elements": {},
            "classes": {
                "Resources": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 73,
            "description": "It contain all class related to Siminov Framework resource.",
            "is_constructor": 1
        },
        "Service": {
            "name": "Service",
            "submodules": {
                "Design": 1
            },
            "elements": {},
            "classes": {
                "IResource": 1,
                "IService": 1,
                "IServiceEvents": 1,
                "Service": 1,
                "ServiceEventHandler": 1,
                "ServiceHandler": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/ServiceHandler.js",
            "line": 53,
            "description": "Exposes classes which deal with services.\nService is a client-side communication component that process and handles any hybrid service request. It performs long running operations in the background.\nA Service is a group of APIs which deals on one particular hybrid service.",
            "is_constructor": 1
        },
        "Sync": {
            "name": "Sync",
            "submodules": {},
            "elements": {},
            "classes": {
                "SyncHandler": 1,
                "SyncRequest": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncRequest.js",
            "line": 55,
            "description": "Exposes classes which deal with services.\nIt allows app to automatically checks for updates in the background, using battery and your data plan. \n\nYou can customise how often it does these checks by adjusting the Refresh Interval. If you don't framework to update regularly, you should set this value to zero to\nconserve both your battery and your data use.",
            "is_constructor": 1
        }
    },
    "classes": {
        "Adapter": {
            "name": "Adapter",
            "shortname": "Adapter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Adapter",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 81,
            "description": "Handle Request between NATIVE-TO-HYBRID and HYBRID-TO-NATIVE.\nExposes method to GET and SET information about request."
        },
        "Dictionary": {
            "name": "Dictionary",
            "shortname": "Dictionary",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Collection",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Dictionary.js",
            "line": 51,
            "description": "Dictionary maps keys to values. A Dictionary cannot contain duplicate keys; each key can map to at most on value."
        },
        "StringBuilder": {
            "name": "StringBuilder",
            "shortname": "StringBuilder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Collection",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/StringBuilder.js",
            "line": 49,
            "description": "A mutable sequence of characters.\nThe principal operations on a StringBuilder are the append methods.\nThe append method always adds these characters at the end of the builder;"
        },
        "ConnectionRequest": {
            "name": "ConnectionRequest",
            "shortname": "ConnectionRequest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Connection",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 49,
            "description": "It contains connection request information.\nExposes method to GET and SET connection request details."
        },
        "ConnectionResponse": {
            "name": "ConnectionResponse",
            "shortname": "ConnectionResponse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Connection",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionResponse.js",
            "line": 48,
            "description": "It contains connection response information.\nExposes method to GET and SET connection response details."
        },
        "IAverage": {
            "name": "IAverage",
            "shortname": "IAverage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js",
            "line": 57,
            "description": "Exposes API's to get average value of all non-NULL X within a group. \nString and BLOB values that do not look like numbers are interpreted as 0.\nThe result of avg() is always a floating point value as long as at there is at least one non-NULL input even if all inputs are integers.\nThe result of avg() is NULL if and only if there are no non-NULL inputs."
        },
        "IAverageClause": {
            "name": "IAverageClause",
            "shortname": "IAverageClause",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js",
            "line": 56,
            "description": "Exposes API's to provide condition on where clause to calculate average."
        },
        "ICount": {
            "name": "ICount",
            "shortname": "ICount",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "line": 57,
            "description": "Exposes API's to get count of the number of times that X is not NULL in a group.\nThe count(*) function (with no arguments) returns the total number of rows in the group."
        },
        "ICountClause": {
            "name": "ICountClause",
            "shortname": "ICountClause",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js",
            "line": 56,
            "description": "Exposes API's to provide condition on where clause to calculate count."
        },
        "IDelete": {
            "name": "IDelete",
            "shortname": "IDelete",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDelete.js",
            "line": 58,
            "description": "Exposes API's to delete tuples from table."
        },
        "IDeleteClause": {
            "name": "IDeleteClause",
            "shortname": "IDeleteClause",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js",
            "line": 56,
            "description": "Exposes API's to provide condition on where clause to delete tuple from table."
        },
        "IGroupConcat": {
            "name": "IGroupConcat",
            "shortname": "IGroupConcat",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "line": 58,
            "description": "Exposes API's to get group concat that returns a string which is the concatenation of all non-NULL values of X.\nIf parameter Y is present then it is used as the separator between instances of X. A comma (\",\") is used as the separator if Y is omitted.\nThe order of the concatenated elements is arbitrary."
        },
        "IGroupConcatClause": {
            "name": "IGroupConcatClause",
            "shortname": "IGroupConcatClause",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js",
            "line": 55,
            "description": "Exposes API's to provide condition on where clause to calculate group concat."
        },
        "IMax": {
            "name": "IMax",
            "shortname": "IMax",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js",
            "line": 56,
            "description": "Exposes API's to returns the maximum value of all values in the group.\nThe maximum value is the value that would be returned last in an ORDER BY on the same column. \nAggregate max() returns NULL if and only if there are no non-NULL values in the group."
        },
        "IMaxClause": {
            "name": "IMaxClause",
            "shortname": "IMaxClause",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js",
            "line": 56,
            "description": "Exposes API's to provide condition on where clause to calculate maximum."
        },
        "IMin": {
            "name": "IMin",
            "shortname": "IMin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js",
            "line": 58,
            "description": "Exposes API's to returns the minimum non-NULL value of all values in the group.\nThe minimum value is the first non-NULL value that would appear in an ORDER BY of the column.\nAggregate min() returns NULL if and only if there are no non-NULL values in the group."
        },
        "IMinClause": {
            "name": "IMinClause",
            "shortname": "IMinClause",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js",
            "line": 57,
            "description": "Exposes API's to provide condition on where clause to calculate minimum."
        },
        "ISelect": {
            "name": "ISelect",
            "shortname": "ISelect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 56,
            "description": "Exposes API's to get tuples from table based on information provided."
        },
        "ISelectClause": {
            "name": "ISelectClause",
            "shortname": "ISelectClause",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js",
            "line": 54,
            "description": "Exposes API's to provide condition on where clause to get tuples from table.."
        },
        "ISum": {
            "name": "ISum",
            "shortname": "ISum",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js",
            "line": 55,
            "description": "Exposes API's to return sum of all non-NULL values in the group.\nIf there are no non-NULL input rows then sum() returns NULL but total() returns 0.0.\nNULL is not normally a helpful result for the sum of no rows but the SQL standard requires it and most other SQL database engines implement sum() that way so SQLite does it in the same way in order to be compatible.\nThe result of sum() is an integer value if all non-NULL inputs are integers."
        },
        "ISumClause": {
            "name": "ISumClause",
            "shortname": "ISumClause",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js",
            "line": 57,
            "description": "Exposes API's to provide condition on where clause to calculate sum."
        },
        "ITotal": {
            "name": "ITotal",
            "shortname": "ITotal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js",
            "line": 55,
            "description": "Exposes API's to return total of all non-NULL values in the group.\nThe non-standard total() function is provided as a convenient way to work around this design problem in the SQL language.\nThe result of total() is always a floating point value."
        },
        "ITotalClause": {
            "name": "ITotalClause",
            "shortname": "ITotalClause",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "submodule": "Impl",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js",
            "line": 56,
            "description": "Exposes API's to provide condition on where clause to calculate total."
        },
        "Clause": {
            "name": "Clause",
            "shortname": "Clause",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 50,
            "description": "Exposes API to deal with conditions used in query."
        },
        "Database": {
            "name": "Database",
            "shortname": "Database",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 77,
            "description": "Exposes methods to deal with database.\nIt has methods to create, delete, and perform other common database management tasks."
        },
        "Select": {
            "name": "Select",
            "shortname": "Select",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 51,
            "description": "Exposes API to deal with conditions and other constraints used in query."
        },
        "Transaction": {
            "name": "Transaction",
            "shortname": "Transaction",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Transaction.js",
            "line": 50,
            "description": "A transaction is a sequence of operations performed as a single logical unit of work.\nIt exposes methods to add request to a transaction"
        },
        "EventHandler": {
            "name": "EventHandler",
            "shortname": "EventHandler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Events",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/EventHandler.js",
            "line": 54,
            "description": "Any event triggered by Siminov is first handled by this function later it will deliver to appropriate Event APIs."
        },
        "IDatabaseEvents": {
            "name": "IDatabaseEvents",
            "shortname": "IDatabaseEvents",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Database",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/IDatabaseEvents.js",
            "line": 46,
            "description": "Exposes methods which deal with events associated with database operation's.\nIt has methods such as (databaseCreated, databaseDroped, tableCreated, tableDroped, indexCreated)."
        },
        "INotificationEvents": {
            "name": "INotificationEvents",
            "shortname": "INotificationEvents",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Events",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/INotificationEvents.js",
            "line": 47,
            "description": "It is a blue print for class which handles notification events"
        },
        "ISiminovEvents": {
            "name": "ISiminovEvents",
            "shortname": "ISiminovEvents",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Events",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISiminovEvents.js",
            "line": 47,
            "description": "Exposes events to deal with life cycle of SIMINOV FRAMEWORK.\nIt has methods such as (onFirstTimeSiminovInitialized, onSiminovInitialized, onSiminovStopped)."
        },
        "ISyncEvents": {
            "name": "ISyncEvents",
            "shortname": "ISyncEvents",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Events",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISyncEvents.js",
            "line": 46,
            "description": "It is a blue print for class which handles sync events"
        },
        "DatabaseException": {
            "name": "DatabaseException",
            "shortname": "DatabaseException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Exception",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/DatabaseException.js",
            "line": 48,
            "description": "This is general exception, which is thrown through Database APIs, if any exception occur while performing any database request."
        },
        "DeploymentException": {
            "name": "DeploymentException",
            "shortname": "DeploymentException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Exception",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/DeploymentException.js",
            "line": 46,
            "description": "This is general exception, which is thrown through Deployment APIs, if any exception occur while deploying application."
        },
        "NotificationException": {
            "name": "NotificationException",
            "shortname": "NotificationException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Exception",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/NotificationException.js",
            "line": 47,
            "description": "This is general exception, which is thrown through Notification APIs, if any exception occur while processing notification."
        },
        "ServiceException": {
            "name": "ServiceException",
            "shortname": "ServiceException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Exception",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/ServiceException.js",
            "line": 48,
            "description": "This is general exception, which is thrown through Service APIs, if any exception occur while processing service request."
        },
        "SiminovException": {
            "name": "SiminovException",
            "shortname": "SiminovException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Exception",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovException.js",
            "line": 49,
            "description": "This is general exception, which is thrown through Siminov APIs, if any exception occur while performing any tasks."
        },
        "SiminovExceptionHandler": {
            "name": "SiminovExceptionHandler",
            "shortname": "SiminovExceptionHandler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Exception",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovExceptionHandler.js",
            "line": 49,
            "description": "Any exception thrown from NATIVE-TO-HYBRID is handled and show to user."
        },
        "SyncException": {
            "name": "SyncException",
            "shortname": "SyncException",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Exception",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SyncException.js",
            "line": 47,
            "description": "This is general exception, which is thrown through Sync APIs, if any exception occur while processing sync request."
        },
        "Function": {
            "name": "Function",
            "shortname": "Function",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Utils",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js",
            "line": 183,
            "description": "It provide APIs to deal with class."
        },
        "Log": {
            "name": "Log",
            "shortname": "Log",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Log",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Log/Log.js",
            "line": 47,
            "description": "Log Siminov Messages."
        },
        "ApplicationDescriptor": {
            "name": "ApplicationDescriptor",
            "shortname": "ApplicationDescriptor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 50,
            "description": "Exposes methods to GET and SET Application Descriptor information as per define in ApplicationDescriptor.xml file by application.\n\t\t\n\tExample:\n\t\t<siminov>\n\t\t\n\t\t\t<property name=\"name\">SIMINOV HYBRID SAMPLE</property>\t\n\t\t\t<property name=\"description\">Siminov Hybrid Sample Application</property>\n\t\t\t<property name=\"version\">0.9</property>\n\t\t\n\t\t\t<!-- DATABASE-DESCRIPTORS -->\n\t\t\t<database-descriptors>\n\t\t\t\t<database-descriptor>DatabaseDescriptor.xml</database-descriptor>\n\t\t\t</database-descriptors>\n\t\t\n\t\t\t<!-- SIMINOV EVENTS -->\n\t\t \t<event-handlers>\n\t\t\t    <event-handler>siminov.hybrid.sample.events.SiminovEventHandler</event-handler>\n\t\t\t    <event-handler>siminov.hybrid.sample.events.DatabaseEventHandler</event-handler>\n\t\t\t</event-handlers>\n\t\t\t\t\n\t\t</siminov>"
        },
        "AdapterDescriptor.Handler": {
            "name": "AdapterDescriptor.Handler",
            "shortname": "AdapterDescriptor.Handler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 294,
            "description": "Exposes methods to GET and SET Adapter Descriptor Handler information as per define in AdapterDescriptor.xml file or in standalone adapter xml file in application."
        },
        "AdapterDescriptor.Handler.Parameter": {
            "name": "AdapterDescriptor.Handler.Parameter",
            "shortname": "AdapterDescriptor.Handler.Parameter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 425,
            "description": "Exposes methods to GET and SET Parameter information as per define in AdapterDescriptor.xml file or in standalone adapter xml file in application."
        },
        "DatabaseDescriptor": {
            "name": "DatabaseDescriptor",
            "shortname": "DatabaseDescriptor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 49,
            "description": "Exposes methods to GET and SET Database Descriptor information as per define in DatabaseDescriptor.xml file by application.\n\t\n\t\t\n\tExample:\n\n\t\t<database-descriptor>\n\n\t\t\t<!-- General Database Descriptor Properties -->\n\n\t\t\t\t<!-- Mandatory Field -->\n\t\t\t<property name=\"database_name\">name_of_database_file</property>\n\n\t\t\t\t<!-- Optional Field (Default is sqlite)-->\n\t\t\t<property name=\"type\">type_of_database</property>\n\n\t\t\t\t<!-- Mandatory Field -->\n\t\t\t<property name=\"version\">database_version</property>\n\n\t\t\t\t<!-- Optional Field -->\n\t\t\t<property name=\"description\">database_description</property>\n\n\t\t\t\t<!-- Optional Field (Default is false) -->\n\t\t\t<property name=\"transaction_safe\">true/false</property>\n\n\t\t\t\t<!-- Optional Field (Default is false) -->\n\t\t\t<property name=\"external_storage\">true/false</property>\n\n\n\n\t\t\t<!-- Entity Descriptor Paths Needed Under This Database Descriptor -->\n\n\t\t\t\t<!-- Optional Field -->\n\t\t\t<entity-descriptors>\n\t\t\t\t<entity-descriptor>full_path_of_entity_descriptor_file</entity-descriptor>\n\t\t\t</entity-descriptors>\n\n\t\t</database-descriptor>"
        },
        "EntityDescriptor": {
            "name": "EntityDescriptor",
            "shortname": "EntityDescriptor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 49,
            "description": "Exposes methods to GET and SET Entity Descriptor information as per define in EntityDescriptor.xml file by application.\n\t\t\n\tExample:\n\n\n\t\t<!-- Design Of EntityDescriptor.xml -->\n\n\t\t<entity-descriptor>\n\n\t\t\t<!-- General Properties Of Table And Class -->\n\n\t\t\t\t<!-- Mandatory Field -->\n\t\t\t\t\t<!-- NAME OF TABLE -->\n\t\t\t<property name=\"table_name\">name_of_table</property>\n\n\t\t\t\t<!-- Mandatory Field -->\n\t\t\t\t\t<!-- MAPPED CLASS NAME -->\n\t\t\t<property name=\"class_name\">mapped_class_name/mapped_javascript_class_name</property>\n\n\n\t\t\t\t<!-- Optional Field -->\n\t\t\t<attributes>\n\n\t\t\t\t<!-- Column Properties Required Under This Table -->\n\n\t\t\t\t\t<!-- Optional Field -->\n\t\t\t\t<attribute>\n\n\t\t\t\t\t\t<!-- Mandatory Field -->\n\t\t\t\t\t\t\t<!-- COLUMN_NAME: Mandatory Field -->\n\t\t\t\t\t<property name=\"column_name\">column_name_of_table</property>\n\n\t\t\t\t\t\t<!-- Mandatory Field -->\n\t\t\t\t\t\t\t<!-- VARIABLE_NAME: Mandatory Field -->\n\t\t\t\t\t<property name=\"variable_name\">class_variable_name</property>\n\n\t\t\t\t\t\t<!-- Mandatory Field -->\n\t\t\t\t\t<property name=\"type\">variable_data_type</property>\n\n\t\t\t\t\t\t<!-- Optional Field (Default is false) -->\n\t\t\t\t\t<property name=\"primary_key\">true/false</property>\n\n\t\t\t\t\t\t<!-- Optional Field (Default is false) -->\n\t\t\t\t\t<property name=\"not_null\">true/false</property>\n\n\t\t\t\t\t\t<!-- Optional Field (Default is false) -->\n\t\t\t\t\t<property name=\"unique\">true/false</property>\n\n\t\t\t\t\t\t<!-- Optional Field -->\n\t\t\t\t\t<property name=\"check\">condition_to_be_checked (Eg: variable_name 'condition' value; variable_name > 0)</property>\n\n\t\t\t\t\t\t<!-- Optional Field -->\n\t\t\t\t\t<property name=\"default\">default_value_of_column (Eg: 0.1)</property>\n\n\t\t\t\t</attribute>\n\n\t\t\t</attributes>\n\n\n\t\t\t\t<!-- Optional Field -->\n\t\t\t<indexes>\n\n\t\t\t\t<!-- Index Properties -->\n\t\t\t\t<index>\n\n\t\t\t\t\t\t<!-- Mandatory Field -->\n\t\t\t\t\t\t\t<!-- NAME OF INDEX -->\n\t\t\t\t\t<property name=\"name\">name_of_index</property>\n\n\t\t\t\t\t\t<!-- Mandatory Field -->\n\t\t\t\t\t\t\t<!-- UNIQUE: Optional Field (Default is false) -->\n\t\t\t\t\t<property name=\"unique\">true/false</property>\n\n\t\t\t\t\t\t<!-- Optional Field -->\n\t\t\t\t\t\t\t<!-- Name of the column -->\n\t\t\t\t\t<property name=\"column\">column_name_needs_to_add</property>\n\n\t\t\t\t</index>\n\n\t\t\t</indexes>\n\n\n\t\t\t<!-- Map Relationship Properties -->\n\n\t\t\t\t<!-- Optional Field's -->\n\t\t\t<relationships>\n\n\t\t\t\t<relationship>\n\n\t\t\t\t\t\t<!-- Mandatory Field -->\n\t\t\t\t\t\t\t<!-- Type of Relationship -->\n\t\t\t\t\t<property name=\"type\">one-to-one|one-to-many|many-to-one|many-to-many</property>\n\n\t\t\t\t\t\t<!-- Mandatory Field -->\n\t\t\t\t\t\t\t<!-- REFER -->\n\t\t\t\t\t<property name=\"refer\">class_variable_name</property>\n\n\t\t\t\t\t\t<!-- Mandatory Field -->\n\t\t\t\t\t\t\t<!-- REFER TO -->\n\t\t\t\t\t<property name=\"refer_to\">mapped_class_name/mapped_javascript_class_name</property>\n\n\t\t\t\t\t\t<!-- Optional Field -->\n\t\t\t\t\t<property name=\"on_update\">cascade/restrict/no_action/set_null/set_default</property>\n\n\t\t\t\t\t\t<!-- Optional Field -->\n\t\t\t\t\t<property name=\"on_delete\">cascade/restrict/no_action/set_null/set_default</property>\n\n\t\t\t\t\t\t<!-- Optional Field (Default is false) -->\n\t\t\t\t\t<property name=\"load\">true/false</property>\n\n\t\t\t\t</relationship>\n\n\t\t\t</relationships>\n\n\t\t</entity-descriptor>"
        },
        "EntityDescriptor.Attribute": {
            "name": "EntityDescriptor.Attribute",
            "shortname": "EntityDescriptor.Attribute",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 285,
            "description": "Exposes methods to GET and SET Column information as per define in EntityDescriptor.xml file by application.\n\n\t Example:\n\t\n\t\t <attribute>\n\t\t\t <property name=\"variable_name\">title</property>\n\t\t\t <property name=\"column_name\">TITLE</property>\n\t\t\t <property name=\"type\">TEXT</property>\n\t\t\t <property name=\"primary_key\">true</property>\n\t\t\t <property name=\"not_null\">true</property>\n\t\t\t <property name=\"unique\">true</property>\n\t\t </attribute>"
        },
        "EntityDescriptor.Index": {
            "name": "EntityDescriptor.Index",
            "shortname": "EntityDescriptor.Index",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 530,
            "description": "Exposes methods to GET and SET Index information as per define in EntityDescriptor.xml file by application.\n\n\tExample:\n\t\t<index>\n\t\t\t<property name=\"name\">BOOK_INDEX_BASED_ON_AUTHOR</property>\n\t\t\t<property name=\"unique\">true</property>\n\t\t\t<property name=\"column\">AUTHOR</property>\n\t\t</index>",
            "is_constructor": 1
        },
        "EntityDescriptor.Relationship": {
            "name": "EntityDescriptor.Relationship",
            "shortname": "EntityDescriptor.Relationship",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 615,
            "description": "Contains relationship details.\n\n\t<relationship>\n\n\t\t\t<!-- Mandatory Field -->\n\t\t\t\t<!-- Type of Relationship -->\n\t\t<property name=\"type\">one-to-one|one-to-many|many-to-one|many-to-many</property>\n\n\t\t\t<!-- Mandatory Field -->\n\t\t\t\t<!-- REFER -->\n\t\t<property name=\"refer\">class_variable_name</property>\n\n\t\t\t<!-- Mandatory Field -->\n\t\t\t\t<!-- REFER TO -->\n\t\t<property name=\"refer_to\">mapped_class_name/mapped_javascript_class_name</property>\n\n\t\t\t<!-- Optional Field -->\n\t\t<property name=\"on_update\">cascade/restrict/no_action/set_null/set_default</property>\n\n\t\t\t<!-- Optional Field -->\n\t\t<property name=\"on_delete\">cascade/restrict/no_action/set_null/set_default</property>\n\n\t\t\t<!-- Optional Field (Default is false) -->\n\t\t<property name=\"load\">true/false</property>\n\n\t</relationship>"
        },
        "LibraryDescriptor": {
            "name": "LibraryDescriptor",
            "shortname": "LibraryDescriptor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 52,
            "description": "Exposes methods to GET and SET Library Descriptor information as per define in LibraryDescriptor.xml file by application.\n\t\t\n\tExample:\n\n\t\t<!-- DESIGN OF LibraryDescriptor.xml -->\n\n\t\t<library-descriptor>\n\n\t\t\t<!-- General Properties Of Library -->\n\n\t\t\t<!-- Mandatory Field -->\n\t\t\t<property name=\"name\">name_of_library</property>\n\n\t\t\t<!-- Optional Field -->\n\t\t\t<property name=\"description\">description_of_library</property>\n\n\n\n\t\t\t<!-- Entity Descriptor Needed Under This Library Descriptor -->\n\n\t\t\t<!-- Optional Field -->\n\t\t\t\t<!-- Database Mappings -->\n\t\t\t<entity-descriptors>\n\t\t\t\t<entity-descriptor>name_of_database_descriptor.full_path_of_database_mapping_descriptor_file</entity-descriptor>\n\t\t\t</entity-descriptors>\n\n\n\t\t\t<!-- Service Descriptors -->\n\n\t\t\t<!-- Optional Field -->\n\t\t\t\t<!-- Service Descriptor -->\n\t\t\t<service-descriptors>\n\t\t\t\t<service-descriptor>full_path_of_service-descriptor_file</service-descriptor>\n\t\t\t</service-descriptors>\n\n\n\t\t\t<!-- Sync Descriptors -->\n\n\t\t\t<!-- Optional Field -->\n\t\t\t\t<!-- Sync Descriptor -->\n\t\t\t<sync-descriptors>\n\t\t\t\t<sync-descriptor>full_path_of_sync_descriptor_file</sync-descriptor>\n\t\t\t</sync-descriptors>\n\n\n\t\t\t<!-- Adapter Descriptors -->\n\n\t\t\t<!-- Optional Field -->\n\t\t\t\t<!-- Adapter Descriptor -->\n\t\t\t<adapter-descriptors>\n\t\t\t\t<adapter-descriptor>full_path_of_adapter_descriptor_file</adapter-descriptor>\n\t\t\t</adapter-descriptors>\n\n\n\t\t</library-descriptor>"
        },
        "NotificationDescriptor": {
            "name": "NotificationDescriptor",
            "shortname": "NotificationDescriptor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/NotificationDescriptor.js",
            "line": 48,
            "description": "Exposes methods to GET and SET Notification Descriptor information as per define in ApplicationDescriptor.xml file by application.\n\t\t\n\tExample:\n\t\t\n\t\t<siminov>\n\t\t    \n\t\t\t<!-- General Application Description Properties -->\n\t\t\t\n\t\t\t\t<!-- Mandatory Field -->\n\t\t\t<property name=\"name\">application_name</property>\t\n\t\t\t\n\t\t\t\t<!-- Optional Field -->\n\t\t\t<property name=\"description\">application_description</property>\n\t\t\t\n\t\t\t\t<!-- Mandatory Field (Default is 0.0) -->\n\t\t\t<property name=\"version\">application_version</property>\n\t\t\n\t\t\n\t\t\t\n\t\t\t<!-- Siminov Framework Performance Properties -->\n\t\t\t\n\t\t\t\t<!-- Optional Field (Default is true)-->\n\t\t\t<property name=\"load_initially\">true/false</property>\n\t\t\n\t\t\n\t\t\t\n\t\t\t<!-- Database Descriptors Used By Application (zero-to-many) -->\t\n\t\t\t\t<!-- Optional Field's -->\n\t\t\t<database-descriptors>\n\t\t\t\t<database-descriptor>full_path_of_database_descriptor_file</database-descriptor>\n\t\t\t</database-descriptors>\n\t\t\t\t\n\t\t\n\t\t   \t<!-- Services -->\n\t\t    <service-descriptors>\n\t\t  \t\t\n\t\t  \t\t\t<!-- Service -->\n\t\t        <service-descriptor>full_path_of_service</service-descriptor>\n\t\t    \n\t\t    </service-descriptors>\n\t\t\n\t\t    \n\t\t\t\n\t\t    <!-- Sync Handlers -->\n\t\t    \t<!-- Sync Handler -->\n\t\t    <sync-descriptors>\n\t\t        \n\t\t        <sync-descriptor>\n\t\t            \n\t\t           \t\t<!-- Mandatory Field -->\n\t\t     \t\t<property name=\"name\">name_of_sync_handler</property>\n\t\t\t\t\t\n\t\t     \t\t\t<!-- Optional Field -->\n\t\t     \t\t<property name=\"sync_interval\">sync_interval_in_millisecond</property>\n\t\t     \t\t\t\t\n\t\t     \t\t\t<!-- Optional Field -->\n\t\t     \t\t\t\t<!-- Default: SCREEN -->\n\t\t\t\t\t<property name=\"type\">INTERVAL|SCREEN</property>\n\t\t\t\t\t\n\t\t     \t\t<!-- Services -->\n\t\t     \t\t\t<!-- Service -->\n\t\t     \t\t<services>\n\t\t     \t\t    \n\t\t     \t\t    <service>name_of_service.name_of_api</service>\n\t\t     \t\t    \n\t\t     \t\t</services>\n\t\t        </sync-descriptor>\n\t\t        \n\t\t    </sync-descriptors>\n\t\t    \n\t\t\n\t\t    <!-- Push Notification -->\n\t\t    <notification-descriptor>\n\t\t        \n\t\t        \t<!-- Optional Field -->\n\t\t        <property name=\"name_of_property\">value_of_property</property>\n\t\t\n\t\t    </notification-descriptor>\n\t\t    \n\t\t\t\n\t\t\t<adapter-descriptors>\n\t\t        \n\t\t        <!-- Adapter Paths -->\n\t\t\t    <adapter-descriptor>adapter_path</adapter-descriptor>\n\t\t\t    \t        \n\t\t    </adapter-descriptors>\n\t\t\t\t\n\t\t\t\n\t\t\t<!-- Library Descriptors Used By Application (zero-to-many) -->\n\t\t\t\t<!-- Optional Field's -->\n\t\t\t<library-descriptors>\n\t\t\t \t<library-descriptor>full_path_of_library_descriptor_file</library-descriptor>   \n\t\t\t</library-descriptors>\n\t\t\t\n\t\t\t\n\t\t\t<!-- Event Handlers Implemented By Application (zero-to-many) -->\n\t\t\t\n\t\t\t\t<!-- Optional Field's -->\n\t\t\t<event-handlers>\n\t\t\t\t<event-handler>full_java_class_path_of_event_handler/javascript_class_path_of_event_handler (ISiminovHandler/IDatabaseHandler)</event-handler>\n\t\t\t</event-handlers>\n\t\t\n\t\t</siminov>"
        },
        "ServiceDescriptor": {
            "name": "ServiceDescriptor",
            "shortname": "ServiceDescriptor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 50,
            "description": "Exposes methods to GET and SET Service Descriptor information as per define in ServiceDescriptor.xml file by application.\n\t\t\n\tExample:\n\t\t\n\t\t<service-descriptor>\n\t\t    \n\t\t\t<!-- General Service Properties -->\n\t\t    \t<!-- Mandatory Field -->\n\t\t    <property name=\"name\">name_of_service</property>\n\t\t    \n\t\t    \t<!-- Optional Field -->\n\t\t    <property name=\"description\">description_of_service</property>\n\t\t    \n\t\t    \t<!-- Optional Field (DEFAULT: HTTP) -->\n\t\t    <property name=\"protocol\">HTTP|HTTPS</property>\n\t\t    \n\t\t    \t<!-- Mandatory Field -->\n\t\t    <property name=\"instance\">address_of_instance</property>\n\t\t    \n\t\t    \t<!-- Optional Field -->\n\t\t    <property name=\"port\">port_number</property>\n\t\t\n\t\t    \t<!-- Optional Field -->\n\t\t    <property name=\"context\">context_of_service</property>\n\t\t         \n\t\t\t<!-- Requests -->\n\t\t\t\t<!-- Request -->\n\t\t    <request>\n\t\t            \n\t\t\t\t<request>\n\t\t\n\t\t\t\t\t<!-- General Request Properties -->\n\t\t         \n\t\t\t        \t<!-- Mandatory Field -->\n\t\t\t       \t<property name=\"name\">name_of_request</property>\n\t\t         \n\t\t         \t\t<!-- Mandatory Field -->\n\t\t         \t<property name=\"type\">GET|HEAD|POST|PUT|DELETE|TRACE|OPTIONS|CONNECT|PATCH</property>\n\t\t\n\t\t         \t\t<!-- Mandatory Field -->\n\t\t         \t<property name=\"api\">full_request_path</property>\n\t\t\n\t\t         \t\t<!-- Mandatory Field -->\n\t\t         \t<property name=\"handler\">handler_of_request</property>\n\t\t         \t\n\t\t      \t\t\t<!-- Optional Field (DEFAULT: SYNC)-->\n\t\t      \t\t<property name=\"mode\">SYNC|ASYNC</property>\n\t\t\n\t\t      \t\t\n\t\t      \t\t\t\t\t\n\t\t      \t\t<!-- Query Parameters -->\n\t\t      \t\t\t<!-- Query Parameter -->\n\t\t      \t\t<query-parameters>\n\t\t          \n\t\t      \t\t\t<query-parameter>\n\t\t      \t\t\t    \n\t\t      \t\t\t    <!-- Mandatory Field -->\n\t\t      \t\t\t    <property name=\"name\">name_of_query_parameter</property>\n\t\t      \t\t\t    \n\t\t      \t\t\t    <!-- Mandatory Field -->\n\t\t      \t\t\t    <property name=\"value\">value_of_query_parameter</property>\n\t\t      \t\t\t    \n\t\t      \t\t\t</query-parameter>\n\t\t      \t\t\n\t\t      \t\t</query-parameters>\n\t\t      \n\t\t      \n\t\t      \t\t<!-- Header Parameters -->\n\t\t      \t\t\t<!-- Header Parameter -->\n\t\t      \t\t<header-parameters>\n\t\t          \n\t\t      \t\t\t<header-parameter>\n\t\t      \t\t\t    \n\t\t      \t\t\t    <!-- Mandatory Field -->\n\t\t      \t\t\t    <property name=\"name\">name_of_header_parameter</property>\n\t\t      \t\t\t    \n\t\t      \t\t\t    <!-- Mandatory Field -->\n\t\t      \t\t\t    <property name=\"value\">value_of_header_parameter</property>\n\t\t      \t\t\t    \n\t\t      \t\t\t</header-parameter>\n\t\t      \t\t\n\t\t        \t</header-parameters>\n\t\t\n\t\t      \t\t\n\t\t      \t\t<!-- Stream of Data Under Request Body -->\n\t\t      \t\t\t<!-- It is Optional Property -->\n\t\t      \t\t<data-stream>stream_of_data</data-stream>\t\n\t\t     \t\n\t\t     \t</request>\n\t\t    </requests>\n\t\t    \n\t\t</service-descriptor>"
        },
        "ServiceDescriptor.Request": {
            "name": "ServiceDescriptor.Request",
            "shortname": "ServiceDescriptor.Request",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 356,
            "description": "It exposes methods to Get and Set service request details as per defined in ServiceDescriptor.xml file by the application.\n\n\t<request>\n\n\t\t<!-- General Request Properties -->\n    \n       \t<!-- Mandatory Field -->\n      \t<property name=\"name\">name_of_request</property>\n    \n    \t\t<!-- Mandatory Field -->\n    \t<property name=\"type\">GET|HEAD|POST|PUT|DELETE|TRACE|OPTIONS|CONNECT|PATCH</property>\n\n    \t\t<!-- Mandatory Field -->\n    \t<property name=\"api\">full_request_path</property>\n\n    \t\t<!-- Mandatory Field -->\n    \t<property name=\"handler\">handler_of_request</property>\n    \t\n \t\t\t<!-- Optional Field (DEFAULT: SYNC)-->\n \t\t<property name=\"mode\">SYNC|ASYNC</property>\n\n \t\t\n \t\t\t\t\t\n \t\t<!-- Query Parameters -->\n \t\t\t<!-- Query Parameter -->\n \t\t<query-parameters>\n     \n \t\t\t<query-parameter>\n \t\t\t    \n \t\t\t    <!-- Mandatory Field -->\n \t\t\t    <property name=\"name\">name_of_query_parameter</property>\n \t\t\t    \n \t\t\t    <!-- Mandatory Field -->\n \t\t\t    <property name=\"value\">value_of_query_parameter</property>\n \t\t\t    \n \t\t\t</query-parameter>\n \t\t\n \t\t</query-parameters>\n \n \n \t\t<!-- Header Parameters -->\n \t\t\t<!-- Header Parameter -->\n \t\t<header-parameters>\n     \n \t\t\t<header-parameter>\n \t\t\t    \n \t\t\t    <!-- Mandatory Field -->\n \t\t\t    <property name=\"name\">name_of_header_parameter</property>\n \t\t\t    \n \t\t\t    <!-- Mandatory Field -->\n \t\t\t    <property name=\"value\">value_of_header_parameter</property>\n \t\t\t    \n \t\t\t</header-parameter>\n \t\t\n   \t</header-parameters>\n\n \t\t\n \t\t<!-- Stream of Data Under Request Body -->\n \t\t\t<!-- It is Optional Property -->\n \t\t<data-stream>stream_of_data</data-stream>\t\n\t\n\t</request>"
        },
        "ServiceDescriptor.Request.QueryParameter": {
            "name": "ServiceDescriptor.Request.QueryParameter",
            "shortname": "ServiceDescriptor.Request.QueryParameter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 652,
            "description": "It exposes methods to Get and Set request query parameter details as per defined in ServiceDescriptor.xml file by the application.\n \n\t<request>\n\n  \t\t<!-- Query Parameters -->\n  \t\t\t<!-- Query Parameter -->\n  \t\t<query-parameters>\n      \n  \t\t\t<query-parameter>\n  \t\t\t    \n  \t\t\t    <!-- Mandatory Field -->\n  \t\t\t    <property name=\"name\">name_of_query_parameter</property>\n  \t\t\t    \n  \t\t\t    <!-- Mandatory Field -->\n  \t\t\t    <property name=\"value\">value_of_query_parameter</property>\n  \t\t\t    \n  \t\t\t</query-parameter>\n  \t\t\n  \t\t</query-parameters>\n \t\n \t</request>"
        },
        "ServiceDescriptor.Request.HeaderParameter": {
            "name": "ServiceDescriptor.Request.HeaderParameter",
            "shortname": "ServiceDescriptor.Request.HeaderParameter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 785,
            "description": "It exposes methods to Get and Set request header parameter details as per defined in ServiceDescriptor.xml file by the application.\n \n\t<request>\n\n  \t\t<!-- Header Parameters -->\n  \t\t\t<!-- Header Parameter -->\n  \t\t<header-parameters>\n      \n  \t\t\t<header-parameter>\n  \t\t\t    \n  \t\t\t    <!-- Mandatory Field -->\n  \t\t\t    <property name=\"name\">name_of_header_parameter</property>\n  \t\t\t    \n  \t\t\t    <!-- Mandatory Field -->\n  \t\t\t    <property name=\"value\">value_of_header_parameter</property>\n  \t\t\t    \n  \t\t\t</header-parameter>\n  \t\t\n    \t</header-parameters> \t\n    \t\n \t</request>"
        },
        "SyncDescriptor": {
            "name": "SyncDescriptor",
            "shortname": "SyncDescriptor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Model",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "line": 48,
            "description": "Exposes methods to GET and SET Sync Descriptor information as per define in SyncDescriptor.xml file by application.\n\t\t\n\tExample:\n\t\t\n\t\t<sync-descriptor>\n\t\t            \n\t\t\t\t<!-- Mandatory Field -->\n\t\t\t<property name=\"name\">name_of_sync_handler</property>\n\t\t\t\t\t\n\t\t\t\t<!-- Optional Field -->\n\t\t\t<property name=\"sync_interval\">sync_interval_in_millisecond</property>\n\t\t     \t\t\t\t\n\t\t\t\t<!-- Optional Field -->\n\t\t\t\t\t<!-- Default: SCREEN -->\n\t\t\t<property name=\"type\">INTERVAL|SCREEN|INTERVAL-SCREEN</property>\n\t\t\t\t\t\n\t\t\t<!-- Services -->\n\t\t\t\t<!-- Service -->\n\t\t\t<services>\n\t\t     \t\t    \n\t\t\t    <service>name_of_service.name_of_api</service>\n\t\t     \t\t    \n\t\t\t</services>\n\t\t\n\t\t</sync-descriptor>"
        },
        "Message": {
            "name": "Message",
            "shortname": "Message",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Notification",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Message.js",
            "line": 46,
            "description": "It exposes APIs to Get and Set push notification"
        },
        "NotificationManager": {
            "name": "NotificationManager",
            "shortname": "NotificationManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Notification",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/NotificationManager.js",
            "line": 45,
            "description": "It exposes APIs to Get and Set push notification"
        },
        "Registration": {
            "name": "Registration",
            "shortname": "Registration",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Notification",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Registration.js",
            "line": 46,
            "description": "It exposes APIs to Get and Set push notification registration information"
        },
        "SIDatasHelper": {
            "name": "SIDatasHelper",
            "shortname": "SIDatasHelper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Parser",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/ReaderWriter/SIDatasHelper.js",
            "line": 49,
            "description": "Exposes APIs to deal with Models, it convert si datas to models or models to si datas."
        },
        "Resources": {
            "name": "Resources",
            "shortname": "Resources",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Resource",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 73,
            "description": "It handles and provides all resources needed by SIMINOV HYBRID."
        },
        "IResource": {
            "name": "IResource",
            "shortname": "IResource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Service",
            "submodule": "Design",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IResource.js",
            "line": 58,
            "description": "It exposes APIs to Get and Set service resources"
        },
        "IService": {
            "name": "IService",
            "shortname": "IService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Service",
            "submodule": "Design",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js",
            "line": 56,
            "description": "It exposes APIs to Get and Set service information"
        },
        "IServiceEvents": {
            "name": "IServiceEvents",
            "shortname": "IServiceEvents",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Service",
            "submodule": "Design",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js",
            "line": 58,
            "description": "It exposes APIs to handle service request events"
        },
        "Service": {
            "name": "Service",
            "shortname": "Service",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Service",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 53,
            "description": "It exposes APIs to Get and Set service information by extending IService"
        },
        "ServiceEventHandler": {
            "name": "ServiceEventHandler",
            "shortname": "ServiceEventHandler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Service",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/ServiceEventHandler.js",
            "line": 58,
            "description": "Any service event triggered by Siminov is first handled by this function later it will deliver to appropriate Service Event APIs."
        },
        "ServiceHandler": {
            "name": "ServiceHandler",
            "shortname": "ServiceHandler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Service",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/ServiceHandler.js",
            "line": 53,
            "description": "It exposes APIs to process service request"
        },
        "SyncHandler": {
            "name": "SyncHandler",
            "shortname": "SyncHandler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Sync",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncHandler.js",
            "line": 58,
            "description": "It exposes APIs to process sync request"
        },
        "SyncRequest": {
            "name": "SyncRequest",
            "shortname": "SyncRequest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Sync",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncRequest.js",
            "line": 55,
            "description": "It exposes APIs to Get and Set sync request information"
        },
        "Utils": {
            "name": "Utils",
            "shortname": "Utils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Utils",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Utils/Utils.js",
            "line": 47,
            "description": "Exposes utility api's to framework/application"
        },
        "Constants": {
            "name": "Constants",
            "shortname": "Constants",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Utils",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 41,
            "description": "It contain all contain variables requried by Siminov Framework.",
            "is_constructor": 1
        },
        "Siminov": {
            "name": "Siminov",
            "shortname": "Siminov",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Utils",
            "namespace": "",
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Siminov.js",
            "line": 223,
            "description": "It shudown's Siminov Framework asynchronous, and releases all resources acquired by Siminov.",
            "is_constructor": 1,
            "itemtype": "method",
            "static": 1,
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                }
            ]
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 107,
            "description": "Get Adapter Name.",
            "itemtype": "method",
            "name": "getAdapterName",
            "return": {
                "description": "Name of Adapter.",
                "type": "String"
            },
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 117,
            "description": "Set Adapter Name.",
            "itemtype": "method",
            "name": "setAdapterName",
            "params": [
                {
                    "name": "value",
                    "description": "Name of Adapter.",
                    "type": "String"
                }
            ],
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 128,
            "description": "Get Handler Name.",
            "itemtype": "method",
            "name": "getHandlerName",
            "return": {
                "description": "Name of Handler.",
                "type": "String"
            },
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 138,
            "description": "Set Handler Name.",
            "itemtype": "method",
            "name": "setHandlerName",
            "params": [
                {
                    "name": "value",
                    "description": "Name of Handler",
                    "type": "String"
                }
            ],
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 157,
            "description": "Add Adapter Parameter.",
            "itemtype": "method",
            "name": "addParameter",
            "params": [
                {
                    "name": "parameter",
                    "description": "Parameter.",
                    "type": "String"
                }
            ],
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 167,
            "description": "Get All Parameters.",
            "itemtype": "method",
            "name": "getParameters",
            "return": {
                "description": "All Parameters.",
                "type": "Array"
            },
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 177,
            "description": "Remove all parameters",
            "itemtype": "method",
            "name": "removeParameters",
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 186,
            "description": "Get request callback",
            "itemtype": "method",
            "name": "getCallback",
            "return": {
                "description": "Request Callback",
                "type": "Callback"
            },
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 196,
            "description": "Set request callback",
            "itemtype": "method",
            "name": "setCallback",
            "params": [
                {
                    "name": "value",
                    "description": "Request Callback",
                    "type": "Callback"
                }
            ],
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 219,
            "description": "Invokes Handler based on request parameter set.\nIt invokes Native API.",
            "itemtype": "method",
            "name": "invoke",
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 259,
            "description": "Android Native Bridge",
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 301,
            "description": "Titanium Native Bridge",
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 327,
            "description": "iOS and Windows Sync Native Bridge",
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 341,
            "description": "iOS and Windows Async Native Bridge",
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 357,
            "description": "Any request from NATIVE-TO-HYBRID is first handled by this API.",
            "itemtype": "method",
            "name": "handle",
            "params": [
                {
                    "name": "action",
                    "description": "Name of Action. Action Represent HYBRID API Needs To Be Invoke.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Data Is Basically Parameter To HYBRID API.",
                    "type": "String"
                }
            ],
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js",
            "line": 387,
            "description": "Remove Request From Queue",
            "class": "Adapter",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Array.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Dictionary",
            "module": "Adapter"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Array.js",
            "line": 48,
            "description": "Check whether array contains the object",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "obj",
                    "description": "Object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "bool  true|false True if array contains the object else false",
                "type": "Bool"
            },
            "class": "Dictionary",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Array.js",
            "line": 66,
            "description": "Remove the object from array",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "obj",
                    "description": "Object",
                    "type": "Object"
                }
            ],
            "class": "Dictionary",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Dictionary.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Dictionary",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Dictionary.js",
            "line": 61,
            "description": "Add a Key Value pair.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "key",
                    "description": "Key",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Value",
                    "type": "Object"
                }
            ],
            "class": "Dictionary",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Dictionary.js",
            "line": 75,
            "description": "Check whether key exists or not.",
            "itemtype": "method",
            "name": "exists",
            "params": [
                {
                    "name": "key",
                    "description": "Key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false; TRUE: If key exists, FALSE: If key does not exists.",
                "type": "Boolean"
            },
            "class": "Dictionary",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Dictionary.js",
            "line": 86,
            "description": "Get value based on Key.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "key",
                    "description": "Key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Value",
                "type": "Object"
            },
            "class": "Dictionary",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Dictionary.js",
            "line": 97,
            "description": "Remove value based on key.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "key",
                    "description": "Key",
                    "type": "String"
                }
            ],
            "class": "Dictionary",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Dictionary.js",
            "line": 108,
            "description": "Get All Keys.",
            "itemtype": "method",
            "name": "keys",
            "return": {
                "description": "All Keys",
                "type": "Array"
            },
            "class": "Dictionary",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Dictionary.js",
            "line": 122,
            "description": "Get All Values.",
            "itemtype": "method",
            "name": "values",
            "return": {
                "description": "Values.",
                "type": "Array"
            },
            "class": "Dictionary",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Dictionary.js",
            "line": 140,
            "description": "Get All Key and Values",
            "itemtype": "method",
            "name": "toArray",
            "return": {
                "description": "Key and Values.",
                "type": "Array"
            },
            "class": "Dictionary",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/String.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "StringBuilder",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/String.js",
            "line": 46,
            "description": "Check whether string starts with the passed string or not",
            "itemtype": "method",
            "name": "startsWith",
            "params": [
                {
                    "name": "str",
                    "description": "String to check whether it start with this or not",
                    "type": "String"
                }
            ],
            "return": {
                "description": "bool  true/false True if it contains the string else false",
                "type": "Bool"
            },
            "class": "StringBuilder",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/String.js",
            "line": 58,
            "description": "Replace the string occurrence with the stirng",
            "itemtype": "method",
            "name": "replaceAll",
            "params": [
                {
                    "name": "find",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "replace",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "StringBuilder",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/StringBuilder.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "StringBuilder",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/StringBuilder.js",
            "line": 64,
            "description": "Append adds given characters at the end of the builder.",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "value",
                    "description": "Characters need to be append.",
                    "type": "String"
                }
            ],
            "class": "StringBuilder",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/StringBuilder.js",
            "line": 77,
            "description": "Clear buffered StringBuider.\nRemove all elements saved.",
            "itemtype": "method",
            "name": "clear",
            "class": "StringBuilder",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/StringBuilder.js",
            "line": 88,
            "description": "Get characters saved in StringBuilder.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "All Characters",
                "type": "String"
            },
            "class": "StringBuilder",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ConnectionRequest",
            "module": "Collection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 70,
            "description": "Get Instance Url.",
            "itemtype": "method",
            "name": "getUrl",
            "return": {
                "description": "Url of instance.",
                "type": "String"
            },
            "class": "ConnectionRequest",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 80,
            "description": "Set Instance Url.",
            "itemtype": "method",
            "name": "setUrl",
            "params": [
                {
                    "name": "value",
                    "description": "Instance Url.",
                    "type": "String"
                }
            ],
            "class": "ConnectionRequest",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 90,
            "description": "Get Protocol.",
            "itemtype": "method",
            "name": "getProtocol",
            "return": {
                "description": "Protocol of request.",
                "type": "String"
            },
            "class": "ConnectionRequest",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 100,
            "description": "Set Request Protocol.",
            "itemtype": "method",
            "name": "setProtocol",
            "params": [
                {
                    "name": "value",
                    "description": "Request Protocol.",
                    "type": "String"
                }
            ],
            "class": "ConnectionRequest",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 110,
            "description": "Get Type.",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "Type of request.",
                "type": "String"
            },
            "class": "ConnectionRequest",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 120,
            "description": "Set Request Type.",
            "itemtype": "method",
            "name": "setType",
            "params": [
                {
                    "name": "value",
                    "description": "Reequest Type.",
                    "type": "String"
                }
            ],
            "class": "ConnectionRequest",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 130,
            "description": "Get all query parameters.",
            "itemtype": "method",
            "name": "getQueryParameters",
            "return": {
                "description": "Query Parameters.",
                "type": "Array"
            },
            "class": "ConnectionRequest",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 140,
            "description": "Get query parameter.",
            "itemtype": "method",
            "name": "getQueryParameter",
            "params": [
                {
                    "name": "value",
                    "description": "Name of query parameter",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Query Parameter.",
                "type": "String"
            },
            "class": "ConnectionRequest",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 151,
            "description": "Add query parameter",
            "itemtype": "method",
            "name": "addQueryParameter",
            "params": [
                {
                    "name": "queryParameterName",
                    "description": "Name of query parameter",
                    "type": "String"
                },
                {
                    "name": "queryParameterValue",
                    "description": "Value of query parameter",
                    "type": "String"
                }
            ],
            "class": "ConnectionRequest",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 163,
            "description": "Get all header parameters",
            "itemtype": "method",
            "name": "getHeaderParameters",
            "return": {
                "description": "Query Parameters",
                "type": "Array"
            },
            "class": "ConnectionRequest",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 173,
            "description": "Get header parameter",
            "itemtype": "method",
            "name": "getHeaderParameter",
            "params": [
                {
                    "name": "name",
                    "description": "Name of header parameter",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Header Parameter",
                "type": "String"
            },
            "class": "ConnectionRequest",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 184,
            "description": "Add header parameter",
            "itemtype": "method",
            "name": "addHeaderParameter",
            "params": [
                {
                    "name": "headerParameterName",
                    "description": "Name of header parameter",
                    "type": "String"
                },
                {
                    "name": "headerParameterValue",
                    "description": "Value of header parameter",
                    "type": "String"
                }
            ],
            "class": "ConnectionRequest",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 195,
            "description": "Get data stream",
            "itemtype": "method",
            "name": "getDataStream",
            "return": {
                "description": "Data Stream",
                "type": "String"
            },
            "class": "ConnectionRequest",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js",
            "line": 205,
            "description": "Set data stream",
            "itemtype": "method",
            "name": "setDataStream",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ConnectionRequest",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionResponse.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ConnectionResponse",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionResponse.js",
            "line": 63,
            "description": "Get status code of response",
            "itemtype": "method",
            "name": "getStatusCode",
            "return": {
                "description": "Status Code",
                "type": "String"
            },
            "class": "ConnectionResponse",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionResponse.js",
            "line": 73,
            "description": "Set status code of response",
            "itemtype": "method",
            "name": "setStatusCode",
            "params": [
                {
                    "name": "value",
                    "description": "Status Code",
                    "type": "String"
                }
            ],
            "class": "ConnectionResponse",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionResponse.js",
            "line": 83,
            "description": "Get status message of response",
            "itemtype": "method",
            "name": "getStatusMessage",
            "return": {
                "description": "Status Message",
                "type": "String"
            },
            "class": "ConnectionResponse",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionResponse.js",
            "line": 93,
            "description": "Set status message of response",
            "itemtype": "method",
            "name": "setStatusMessage",
            "params": [
                {
                    "name": "value",
                    "description": "Status Message",
                    "type": "String"
                }
            ],
            "class": "ConnectionResponse",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionResponse.js",
            "line": 103,
            "description": "Get response content",
            "itemtype": "method",
            "name": "getResponse",
            "return": {
                "description": "Response content",
                "type": "String"
            },
            "class": "ConnectionResponse",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionResponse.js",
            "line": 113,
            "description": "Set response content",
            "itemtype": "method",
            "name": "setResponse",
            "params": [
                {
                    "name": "value",
                    "description": "Response Content",
                    "type": "String"
                }
            ],
            "class": "ConnectionResponse",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "IAverage",
            "module": "Connection"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js",
            "line": 73,
            "description": "Name of Interface",
            "class": "IAverage",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js",
            "line": 79,
            "description": "Column name of which condition will be specified.",
            "itemtype": "method",
            "name": "where",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAerageClause Interface.",
                "type": "IAerageClause"
            },
            "class": "IAverage",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js",
            "line": 89,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "whereClause",
            "params": [
                {
                    "name": "whereClause",
                    "description": "Manually created where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAverage Interface.",
                "type": "IAverage"
            },
            "class": "IAverage",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js",
            "line": 99,
            "description": "Used to specify AND condition between where clause.",
            "itemtype": "method",
            "name": "and",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAerageClause Interface.",
                "type": "IAerageClause"
            },
            "class": "IAverage",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js",
            "line": 109,
            "description": "Used to specify OR condition between where clause.",
            "itemtype": "method",
            "name": "or",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAverageClause Interface.",
                "type": "IAverageClause"
            },
            "class": "IAverage",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js",
            "line": 119,
            "description": "Used to specify GROUP BY statement in conjunction with the aggregate functions to group the result-set by one or more columns.",
            "itemtype": "method",
            "name": "groupBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "IAverage Interface.",
                "type": "IAverage"
            },
            "class": "IAverage",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js",
            "line": 129,
            "description": "Used to specify HAVING clause to SQL because the WHERE keyword could not be used with aggregate functions.",
            "itemtype": "method",
            "name": "having",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAverageClause Interface.",
                "type": "IAverageClause"
            },
            "class": "IAverage",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js",
            "line": 139,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "havingClause",
            "params": [
                {
                    "name": "havingClause",
                    "description": "Where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAverage Interface.",
                "type": "IAverage"
            },
            "class": "IAverage",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js",
            "line": 149,
            "description": "Used to provide name of column for which average will be calculated.",
            "itemtype": "method",
            "name": "column",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAverage Interface.",
                "type": "IAverage"
            },
            "class": "IAverage",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js",
            "line": 159,
            "description": "Used to get average, this method should be called in last to calculate average.",
            "itemtype": "method",
            "name": "execute",
            "return": {
                "description": "Return average.",
                "type": "Object"
            },
            "throws": {
                "description": "Throws exception if any error occur while calculating average.",
                "type": "SiminovException"
            },
            "class": "IAverage",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js",
            "line": 169,
            "description": "Used to get average asynchronous, this method should be called in last to calculate average.",
            "itemtype": "method",
            "name": "executeAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                }
            ],
            "class": "IAverage",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "IAverageClause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js",
            "line": 69,
            "description": "Name of Interface",
            "class": "IAverageClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js",
            "line": 75,
            "description": "Used to specify EQUAL TO (=) condition.",
            "itemtype": "method",
            "name": "equalTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAverage Interface.",
                "type": "IAverage"
            },
            "class": "IAverageClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js",
            "line": 85,
            "description": "Used to specify NOT EQUAL TO (!=) condition.",
            "itemtype": "method",
            "name": "notEqualTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which NOT EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAverage Interface.",
                "type": "IAverage"
            },
            "class": "IAverageClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js",
            "line": 95,
            "description": "Used to specify GREATER THAN (>) condition.",
            "itemtype": "method",
            "name": "greaterThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for while GREATER THAN (>) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAverage Interface.",
                "type": "IAverage"
            },
            "class": "IAverageClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js",
            "line": 105,
            "description": "Used to specify GREATER THAN EQUAL (>=) condition.",
            "itemtype": "method",
            "name": "greaterThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which GREATER THAN EQUAL (>=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAverage Interface.",
                "type": "IAverage"
            },
            "class": "IAverageClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js",
            "line": 115,
            "description": "Used to specify LESS THAN (<) condition.",
            "itemtype": "method",
            "name": "lessThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN (<) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAverage Interface.",
                "type": "IAverage"
            },
            "class": "IAverageClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js",
            "line": 125,
            "description": "Used to specify LESS THAN EQUAL (<=) condition.",
            "itemtype": "method",
            "name": "lessThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN EQUAL (<=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAverage Interface.",
                "type": "IAverage"
            },
            "class": "IAverageClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js",
            "line": 135,
            "description": "Used to specify BETWEEN condition.",
            "itemtype": "method",
            "name": "between",
            "params": [
                {
                    "name": "start",
                    "description": "Start Range.",
                    "type": "String"
                },
                {
                    "name": "end",
                    "description": "End Range.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAverage Interface.",
                "type": "IAverage"
            },
            "class": "IAverageClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js",
            "line": 146,
            "description": "Used to specify LIKE condition.",
            "itemtype": "method",
            "name": "like",
            "params": [
                {
                    "name": "like",
                    "description": "LIKE condition.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IAverage Interface.",
                "type": "IAverage"
            },
            "class": "IAverageClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js",
            "line": 156,
            "description": "Used to specify IN condition.",
            "itemtype": "method",
            "name": "in",
            "params": [
                {
                    "name": "values",
                    "description": "Values for IN condition.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "IAverage Interface.",
                "type": "IAverage"
            },
            "class": "IAverageClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ICount",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "line": 71,
            "description": "Name of Interface",
            "class": "ICount",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "line": 77,
            "description": "Used to specify DISTINCT condition.",
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ICount",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "line": 85,
            "description": "Column name of which condition will be specified.",
            "itemtype": "method",
            "name": "where",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICountClause Interface.",
                "type": "ICountClause"
            },
            "class": "ICount",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "line": 95,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "whereClause",
            "params": [
                {
                    "name": "whereClause",
                    "description": "Manually created where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ICount",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "line": 105,
            "description": "Used to specify AND condition between where clause.",
            "itemtype": "method",
            "name": "and",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICountClause Interface.",
                "type": "ICountClause"
            },
            "class": "ICount",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "line": 115,
            "description": "Used to specify OR condition between where clause.",
            "itemtype": "method",
            "name": "or",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICountClause Interface.",
                "type": "ICountClause"
            },
            "class": "ICount",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "line": 125,
            "description": "Used to specify GROUP BY statement in conjunction with the aggregate functions to group the result-set by one or more columns.",
            "itemtype": "method",
            "name": "groupBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ICount",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "line": 135,
            "description": "Used to specify HAVING clause to SQL because the WHERE keyword could not be used with aggregate functions.",
            "itemtype": "method",
            "name": "having",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICountClause Interface.",
                "type": "ICountClause"
            },
            "class": "ICount",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "line": 145,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "havingClause",
            "params": [
                {
                    "name": "havingClause",
                    "description": "Where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ICount",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "line": 155,
            "description": "Used to provide name of column for which count will be calculated.",
            "itemtype": "method",
            "name": "column",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ICount",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "line": 165,
            "description": "Used to get count, this method should be called in last to calculate count.",
            "itemtype": "method",
            "name": "execute",
            "return": {
                "description": "Return count.",
                "type": "Object"
            },
            "throws": {
                "description": "Throws exception if any error occur while calculating count.",
                "type": "SiminovException"
            },
            "class": "ICount",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js",
            "line": 175,
            "description": "Used to get count asynchronous, this method should be called in last to calculate count.",
            "itemtype": "method",
            "name": "executeAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                }
            ],
            "class": "ICount",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ICountClause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js",
            "line": 70,
            "description": "Name of Interface",
            "class": "ICountClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js",
            "line": 76,
            "description": "Used to specify EQUAL TO (=) condition.",
            "itemtype": "method",
            "name": "equalTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ICountClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js",
            "line": 86,
            "description": "Used to specify NOT EQUAL TO (!=) condition.",
            "itemtype": "method",
            "name": "notEqualTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which NOT EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ICountClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js",
            "line": 96,
            "description": "Used to specify GREATER THAN (>) condition.",
            "itemtype": "method",
            "name": "greaterThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for while GREATER THAN (>) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ICountClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js",
            "line": 106,
            "description": "Used to specify GREATER THAN EQUAL (>=) condition.",
            "itemtype": "method",
            "name": "greaterThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which GREATER THAN EQUAL (>=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ICountClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js",
            "line": 116,
            "description": "Used to specify LESS THAN (<) condition.",
            "itemtype": "method",
            "name": "lessThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN (<) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ICountClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js",
            "line": 126,
            "description": "Used to specify LESS THAN EQUAL (<=) condition.",
            "itemtype": "method",
            "name": "lessThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN EQUAL (<=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ICountClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js",
            "line": 136,
            "description": "Used to specify BETWEEN condition.",
            "itemtype": "method",
            "name": "between",
            "params": [
                {
                    "name": "start",
                    "description": "Start Range.",
                    "type": "String"
                },
                {
                    "name": "end",
                    "description": "End Range.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ICountClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js",
            "line": 147,
            "description": "Used to specify LIKE condition.",
            "itemtype": "method",
            "name": "like",
            "params": [
                {
                    "name": "like",
                    "description": "LIKE condition.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ICountClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js",
            "line": 157,
            "description": "Used to specify IN condition.",
            "itemtype": "method",
            "name": "in",
            "params": [
                {
                    "name": "values",
                    "description": "Values for IN condition.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ICountClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDelete.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "IDelete",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDelete.js",
            "line": 73,
            "description": "Name of Interface",
            "class": "IDelete",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDelete.js",
            "line": 79,
            "description": "Column name of which condition will be specified.",
            "itemtype": "method",
            "name": "where",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IDeleteClause Interface.",
                "type": "IDeleteClause"
            },
            "class": "IDelete",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDelete.js",
            "line": 89,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "whereClause",
            "params": [
                {
                    "name": "whereClause",
                    "description": "Manually created where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IDelete Interface.",
                "type": "IDelete"
            },
            "class": "IDelete",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDelete.js",
            "line": 99,
            "description": "Used to specify AND condition between where clause.",
            "itemtype": "method",
            "name": "and",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IDeleteClause Interface.",
                "type": "IDeleteClause"
            },
            "class": "IDelete",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDelete.js",
            "line": 109,
            "description": "Used to specify OR condition between where clause.",
            "itemtype": "method",
            "name": "or",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IDeleteClause Interface.",
                "type": "IDeleteClause"
            },
            "class": "IDelete",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDelete.js",
            "line": 119,
            "description": "Used to delete, this method should be called in last to delete tuples from table.",
            "itemtype": "method",
            "name": "execute",
            "throws": {
                "description": "Throws exception if any error occur while deleting tuples from table.",
                "type": "SiminovException"
            },
            "class": "IDelete",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDelete.js",
            "line": 128,
            "description": "Used to delete asynchronous, this method should be called in last to delete tuples from table.",
            "itemtype": "method",
            "name": "executeAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                }
            ],
            "class": "IDelete",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "IDeleteClause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js",
            "line": 69,
            "description": "Name of Interface",
            "class": "IDeleteClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js",
            "line": 75,
            "description": "Used to specify EQUAL TO (=) condition.",
            "itemtype": "method",
            "name": "equalTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IDelete Interface.",
                "type": "IDelete"
            },
            "class": "IDeleteClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js",
            "line": 85,
            "description": "Used to specify NOT EQUAL TO (!=) condition.",
            "itemtype": "method",
            "name": "notEqualTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which NOT EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IDelete Interface.",
                "type": "IDelete"
            },
            "class": "IDeleteClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js",
            "line": 95,
            "description": "Used to specify GREATER THAN (>) condition.",
            "itemtype": "method",
            "name": "greaterThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for while GREATER THAN (>) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IDelete Interface.",
                "type": "IDelete"
            },
            "class": "IDeleteClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js",
            "line": 105,
            "description": "Used to specify GREATER THAN EQUAL (>=) condition.",
            "itemtype": "method",
            "name": "greaterThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which GREATER THAN EQUAL (>=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IDelete Interface.",
                "type": "IDelete"
            },
            "class": "IDeleteClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js",
            "line": 115,
            "description": "Used to specify LESS THAN (<) condition.",
            "itemtype": "method",
            "name": "lessThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN (<) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IDelete Interface.",
                "type": "IDelete"
            },
            "class": "IDeleteClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js",
            "line": 125,
            "description": "Used to specify LESS THAN EQUAL (<=) condition.",
            "itemtype": "method",
            "name": "lessThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN EQUAL (<=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IDelete Interface.",
                "type": "IDelete"
            },
            "class": "IDeleteClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js",
            "line": 135,
            "description": "Used to specify BETWEEN condition.",
            "itemtype": "method",
            "name": "between",
            "params": [
                {
                    "name": "start",
                    "description": "Start Range.",
                    "type": "String"
                },
                {
                    "name": "end",
                    "description": "End Range.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IDelete Interface.",
                "type": "IDelete"
            },
            "class": "IDeleteClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js",
            "line": 146,
            "description": "Used to specify LIKE condition.",
            "itemtype": "method",
            "name": "like",
            "params": [
                {
                    "name": "like",
                    "description": "LIKE condition.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IDelete Interface.",
                "type": "IDelete"
            },
            "class": "IDeleteClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js",
            "line": 156,
            "description": "Used to specify IN condition.",
            "itemtype": "method",
            "name": "in",
            "params": [
                {
                    "name": "values",
                    "description": "Values for IN condition.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "IDelete Interface.",
                "type": "IDelete"
            },
            "class": "IDeleteClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "IGroupConcat",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "line": 73,
            "description": "Name of Interface",
            "class": "IGroupConcat",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "line": 79,
            "description": "Used to specify separator if Y is omitted.",
            "itemtype": "method",
            "name": "delimiter",
            "params": [
                {
                    "name": "delimiter",
                    "description": "Delimiter.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcat Interface.",
                "type": "IGroupConcat"
            },
            "class": "IGroupConcat",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "line": 89,
            "description": "Column name of which condition will be specified.",
            "itemtype": "method",
            "name": "where",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcatClause Interface.",
                "type": "IGroupConcatClause"
            },
            "class": "IGroupConcat",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "line": 99,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "whereClause",
            "params": [
                {
                    "name": "whereClause",
                    "description": "Manually created where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcat Interface.",
                "type": "IGroupConcat"
            },
            "class": "IGroupConcat",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "line": 109,
            "description": "Used to specify AND condition between where clause.",
            "itemtype": "method",
            "name": "and",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcatClause Interface.",
                "type": "IGroupConcatClause"
            },
            "class": "IGroupConcat",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "line": 119,
            "description": "Used to specify OR condition between where clause.",
            "itemtype": "method",
            "name": "or",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcatClause Interface.",
                "type": "IGroupConcatClause"
            },
            "class": "IGroupConcat",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "line": 129,
            "description": "Used to specify GROUP BY statement in conjunction with the aggregate functions to group the result-set by one or more columns.",
            "itemtype": "method",
            "name": "groupBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "IGroupConcat Interface.",
                "type": "IGroupConcat"
            },
            "class": "IGroupConcat",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "line": 139,
            "description": "Used to specify HAVING clause to SQL because the WHERE keyword could not be used with aggregate functions.",
            "itemtype": "method",
            "name": "having",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcatClause Interface.",
                "type": "IGroupConcatClause"
            },
            "class": "IGroupConcat",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "line": 149,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "havingClause",
            "params": [
                {
                    "name": "havingClause",
                    "description": "Where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcat Interface.",
                "type": "IGroupConcat"
            },
            "class": "IGroupConcat",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "line": 159,
            "description": "Used to provide name of column for which average will be calculated.",
            "itemtype": "method",
            "name": "column",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcat Interface.",
                "type": "IGroupConcat"
            },
            "class": "IGroupConcat",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "line": 169,
            "description": "Used to get group concat, this method should be called in last to calculate group concat.",
            "itemtype": "method",
            "name": "execute",
            "return": {
                "description": "Return group concat.",
                "type": "Object"
            },
            "throws": {
                "description": "Throws exception if any error occur while calculating group concat.",
                "type": "SiminovException"
            },
            "class": "IGroupConcat",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js",
            "line": 179,
            "description": "Used to get group concat asynchronous, this method should be called in last to calculate group concat.",
            "itemtype": "method",
            "name": "executeAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                }
            ],
            "class": "IGroupConcat",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "IGroupConcatClause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js",
            "line": 68,
            "description": "Name of Interface",
            "class": "IGroupConcatClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js",
            "line": 74,
            "description": "Used to specify EQUAL TO (=) condition.",
            "itemtype": "method",
            "name": "equalTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcat Interface.",
                "type": "IGroupConcat"
            },
            "class": "IGroupConcatClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js",
            "line": 84,
            "description": "Used to specify NOT EQUAL TO (!=) condition.",
            "itemtype": "method",
            "name": "notEqualTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which NOT EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcat Interface.",
                "type": "IGroupConcat"
            },
            "class": "IGroupConcatClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js",
            "line": 94,
            "description": "Used to specify GREATER THAN (>) condition.",
            "itemtype": "method",
            "name": "greaterThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for while GREATER THAN (>) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcat Interface.",
                "type": "IGroupConcat"
            },
            "class": "IGroupConcatClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js",
            "line": 104,
            "description": "Used to specify GREATER THAN EQUAL (>=) condition.",
            "itemtype": "method",
            "name": "greaterThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which GREATER THAN EQUAL (>=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcat Interface.",
                "type": "IGroupConcat"
            },
            "class": "IGroupConcatClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js",
            "line": 114,
            "description": "Used to specify LESS THAN (<) condition.",
            "itemtype": "method",
            "name": "lessThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN (<) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcat Interface.",
                "type": "IGroupConcat"
            },
            "class": "IGroupConcatClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js",
            "line": 124,
            "description": "Used to specify LESS THAN EQUAL (<=) condition.",
            "itemtype": "method",
            "name": "lessThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN EQUAL (<=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcat Interface.",
                "type": "IGroupConcat"
            },
            "class": "IGroupConcatClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js",
            "line": 134,
            "description": "Used to specify BETWEEN condition.",
            "itemtype": "method",
            "name": "between",
            "params": [
                {
                    "name": "start",
                    "description": "Start Range.",
                    "type": "String"
                },
                {
                    "name": "end",
                    "description": "End Range.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcat Interface.",
                "type": "IGroupConcat"
            },
            "class": "IGroupConcatClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js",
            "line": 145,
            "description": "Used to specify LIKE condition.",
            "itemtype": "method",
            "name": "like",
            "params": [
                {
                    "name": "like",
                    "description": "LIKE condition.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IGroupConcat Interface.",
                "type": "IGroupConcat"
            },
            "class": "IGroupConcatClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js",
            "line": 155,
            "description": "Used to specify IN condition.",
            "itemtype": "method",
            "name": "in",
            "params": [
                {
                    "name": "values",
                    "description": "Values for IN condition.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "IGroupConcat Interface.",
                "type": "IGroupConcat"
            },
            "class": "IGroupConcatClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "IMax",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js",
            "line": 71,
            "description": "Name of Interface",
            "class": "IMax",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js",
            "line": 77,
            "description": "Column name of which condition will be specified.",
            "itemtype": "method",
            "name": "where",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMaxClause Interface.",
                "type": "IMaxClause"
            },
            "class": "IMax",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js",
            "line": 87,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "whereClause",
            "params": [
                {
                    "name": "whereClause",
                    "description": "Manually created where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMax",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js",
            "line": 97,
            "description": "Used to specify AND condition between where clause.",
            "itemtype": "method",
            "name": "and",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMaxClause Interface.",
                "type": "IMaxClause"
            },
            "class": "IMax",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js",
            "line": 107,
            "description": "Used to specify OR condition between where clause.",
            "itemtype": "method",
            "name": "or",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMaxClause Interface.",
                "type": "IMaxClause"
            },
            "class": "IMax",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js",
            "line": 117,
            "description": "Used to specify GROUP BY statement in conjunction with the aggregate functions to group the result-set by one or more columns.",
            "itemtype": "method",
            "name": "groupBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMax",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js",
            "line": 127,
            "description": "Used to specify HAVING clause to SQL because the WHERE keyword could not be used with aggregate functions.",
            "itemtype": "method",
            "name": "having",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMaxClause Interface.",
                "type": "IMaxClause"
            },
            "class": "IMax",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js",
            "line": 137,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "havingClause",
            "params": [
                {
                    "name": "havingClause",
                    "description": "Where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMax",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js",
            "line": 147,
            "description": "Used to provide name of column for which maximum will be calculated.",
            "itemtype": "method",
            "name": "column",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMax",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js",
            "line": 157,
            "description": "Used to get maximum, this method should be called in last to calculate maximum.",
            "itemtype": "method",
            "name": "execute",
            "return": {
                "description": "Return maximum.",
                "type": "Object"
            },
            "throws": {
                "description": "Throws exception if any error occur while calculating maximum.",
                "type": "SiminovException"
            },
            "class": "IMax",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js",
            "line": 167,
            "description": "Used to get maximum asynchronous, this method should be called in last to calculate maximum.",
            "itemtype": "method",
            "name": "executeAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                }
            ],
            "class": "IMax",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "IMaxClause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js",
            "line": 69,
            "description": "Name of Interface",
            "class": "IMaxClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js",
            "line": 75,
            "description": "Used to specify EQUAL TO (=) condition.",
            "itemtype": "method",
            "name": "equalTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMaxClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js",
            "line": 85,
            "description": "Used to specify NOT EQUAL TO (!=) condition.",
            "itemtype": "method",
            "name": "notEqualTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which NOT EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMaxClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js",
            "line": 95,
            "description": "Used to specify GREATER THAN (>) condition.",
            "itemtype": "method",
            "name": "greaterThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for while GREATER THAN (>) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMaxClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js",
            "line": 105,
            "description": "Used to specify GREATER THAN EQUAL (>=) condition.",
            "itemtype": "method",
            "name": "greaterThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which GREATER THAN EQUAL (>=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMaxClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js",
            "line": 115,
            "description": "Used to specify LESS THAN (<) condition.",
            "itemtype": "method",
            "name": "lessThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN (<) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMaxClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js",
            "line": 125,
            "description": "Used to specify LESS THAN EQUAL (<=) condition.",
            "itemtype": "method",
            "name": "lessThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN EQUAL (<=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMaxClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js",
            "line": 135,
            "description": "Used to specify BETWEEN condition.",
            "itemtype": "method",
            "name": "between",
            "params": [
                {
                    "name": "start",
                    "description": "Start Range.",
                    "type": "String"
                },
                {
                    "name": "end",
                    "description": "End Range.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMaxClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js",
            "line": 146,
            "description": "Used to specify LIKE condition.",
            "itemtype": "method",
            "name": "like",
            "params": [
                {
                    "name": "like",
                    "description": "LIKE condition.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMaxClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js",
            "line": 156,
            "description": "Used to specify IN condition.",
            "itemtype": "method",
            "name": "in",
            "params": [
                {
                    "name": "values",
                    "description": "Values for IN condition.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMaxClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "IMin",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js",
            "line": 74,
            "description": "Name of Interface",
            "class": "IMin",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js",
            "line": 80,
            "description": "Column name of which condition will be specified.",
            "itemtype": "method",
            "name": "where",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMinClause Interface.",
                "type": "IMinClause"
            },
            "class": "IMin",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js",
            "line": 90,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "whereClause",
            "params": [
                {
                    "name": "whereClause",
                    "description": "Manually created where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMin Interface.",
                "type": "IMin"
            },
            "class": "IMin",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js",
            "line": 100,
            "description": "Used to specify AND condition between where clause.",
            "itemtype": "method",
            "name": "and",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMinClause Interface.",
                "type": "IMinClause"
            },
            "class": "IMin",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js",
            "line": 110,
            "description": "Used to specify OR condition between where clause.",
            "itemtype": "method",
            "name": "or",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMinClause Interface.",
                "type": "IMinClause"
            },
            "class": "IMin",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js",
            "line": 120,
            "description": "Used to specify GROUP BY statement in conjunction with the aggregate functions to group the result-set by one or more columns.",
            "itemtype": "method",
            "name": "groupBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "IMin Interface.",
                "type": "IMin"
            },
            "class": "IMin",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js",
            "line": 130,
            "description": "Used to specify HAVING clause to SQL because the WHERE keyword could not be used with aggregate functions.",
            "itemtype": "method",
            "name": "having",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMinClause Interface.",
                "type": "IMinClause"
            },
            "class": "IMin",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js",
            "line": 140,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "havingClause",
            "params": [
                {
                    "name": "havingClause",
                    "description": "Where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMin Interface.",
                "type": "IMin"
            },
            "class": "IMin",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js",
            "line": 150,
            "description": "Used to provide name of column for which max will be calculated.",
            "itemtype": "method",
            "name": "column",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMin Interface.",
                "type": "IMin"
            },
            "class": "IMin",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js",
            "line": 160,
            "description": "Used to get minimum, this method should be called in last to calculate minimum.",
            "itemtype": "method",
            "name": "execute",
            "return": {
                "description": "Return minimum.",
                "type": "Object"
            },
            "throws": {
                "description": "Throws exception if any error occur while calculating minimum.",
                "type": "SiminovException"
            },
            "class": "IMin",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js",
            "line": 170,
            "description": "Used to get minimum asynchronous, this method should be called in last to calculate minimum.",
            "itemtype": "method",
            "name": "executeAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                }
            ],
            "class": "IMin",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "IMinClause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js",
            "line": 70,
            "description": "Name of Interface",
            "class": "IMinClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js",
            "line": 76,
            "description": "Used to specify EQUAL TO (=) condition.",
            "itemtype": "method",
            "name": "equalTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMinClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js",
            "line": 86,
            "description": "Used to specify NOT EQUAL TO (!=) condition.",
            "itemtype": "method",
            "name": "notEqualTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which NOT EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMinClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js",
            "line": 96,
            "description": "Used to specify GREATER THAN (>) condition.",
            "itemtype": "method",
            "name": "greaterThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for while GREATER THAN (>) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMinClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js",
            "line": 106,
            "description": "Used to specify GREATER THAN EQUAL (>=) condition.",
            "itemtype": "method",
            "name": "greaterThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which GREATER THAN EQUAL (>=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMinClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js",
            "line": 116,
            "description": "Used to specify LESS THAN (<) condition.",
            "itemtype": "method",
            "name": "lessThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN (<) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMinClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js",
            "line": 126,
            "description": "Used to specify LESS THAN EQUAL (<=) condition.",
            "itemtype": "method",
            "name": "lessThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN EQUAL (<=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMinClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js",
            "line": 136,
            "description": "Used to specify BETWEEN condition.",
            "itemtype": "method",
            "name": "between",
            "params": [
                {
                    "name": "start",
                    "description": "Start Range.",
                    "type": "String"
                },
                {
                    "name": "end",
                    "description": "End Range.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMinClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js",
            "line": 147,
            "description": "Used to specify LIKE condition.",
            "itemtype": "method",
            "name": "like",
            "params": [
                {
                    "name": "like",
                    "description": "LIKE condition.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMinClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js",
            "line": 157,
            "description": "Used to specify IN condition.",
            "itemtype": "method",
            "name": "in",
            "params": [
                {
                    "name": "values",
                    "description": "Values for IN condition.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "IMax Interface.",
                "type": "IMax"
            },
            "class": "IMinClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ISelect",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 69,
            "description": "Name of Interface",
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 75,
            "description": "Used to specify DISTINCT condition.",
            "itemtype": "method",
            "name": "distinct",
            "return": {
                "description": "ICount Interface.",
                "type": "ICount"
            },
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 84,
            "description": "Column name of which condition will be specified.",
            "itemtype": "method",
            "name": "where",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelectClause Interface.",
                "type": "ISelectClause"
            },
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 94,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "whereClause",
            "params": [
                {
                    "name": "whereClause",
                    "description": "Manually created where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 104,
            "description": "Used to specify AND condition between where clause.",
            "itemtype": "method",
            "name": "and",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelectClause Interface.",
                "type": "ISelectClause"
            },
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 114,
            "description": "Used to specify OR condition between where clause.",
            "itemtype": "method",
            "name": "or",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelectClause Interface.",
                "type": "ISelectClause"
            },
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 124,
            "description": "Used to specify ORDER BY keyword to sort the result-set.",
            "itemtype": "method",
            "name": "orderBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns which need to be sorted.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 134,
            "description": "Used to specify ORDER BY ASC keyword to sort the result-set in ascending order.",
            "itemtype": "method",
            "name": "ascendingOrderBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns which need to be sorted.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 144,
            "description": "Used to specify ORDER BY DESC keyword to sort the result-set in descending order.",
            "itemtype": "method",
            "name": "descendingOrderBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns which need to be sorted.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 154,
            "description": "Used to specify the range of data need to fetch from table.",
            "itemtype": "method",
            "name": "limit",
            "params": [
                {
                    "name": "limit",
                    "description": "LIMIT of data.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 164,
            "description": "Used to specify GROUP BY statement in conjunction with the aggregate functions to group the result-set by one or more columns.",
            "itemtype": "method",
            "name": "groupBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 174,
            "description": "Used to specify HAVING clause to SQL because the WHERE keyword could not be used with aggregate functions.",
            "itemtype": "method",
            "name": "having",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelectClause Interface.",
                "type": "ISelectClause"
            },
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 184,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "havingClause",
            "params": [
                {
                    "name": "havingClause",
                    "description": "Where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 194,
            "description": "Used to provide name of columns only for which data will be fetched.",
            "itemtype": "method",
            "name": "columns",
            "params": [
                {
                    "name": "column",
                    "description": "Name of columns.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 204,
            "description": "Used to get tuples, this method should be called in last to get tuples from table.",
            "itemtype": "method",
            "name": "execute",
            "return": {
                "description": "Return array of model objects.",
                "type": "Object"
            },
            "throws": {
                "description": "Throws exception if any error occur while getting tuples from table.",
                "type": "SiminovException"
            },
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js",
            "line": 214,
            "description": "Used to get tuples asynchronous, this method should be called in last to get tuples from table.",
            "itemtype": "method",
            "name": "executeAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                }
            ],
            "class": "ISelect",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ISelectClause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js",
            "line": 67,
            "description": "Name of Interface",
            "class": "ISelectClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js",
            "line": 73,
            "description": "Used to specify EQUAL TO (=) condition.",
            "itemtype": "method",
            "name": "equalTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelectClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js",
            "line": 83,
            "description": "Used to specify NOT EQUAL TO (!=) condition.",
            "itemtype": "method",
            "name": "notEqualTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which NOT EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelectClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js",
            "line": 93,
            "description": "Used to specify GREATER THAN (>) condition.",
            "itemtype": "method",
            "name": "greaterThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for while GREATER THAN (>) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelectClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js",
            "line": 103,
            "description": "Used to specify GREATER THAN EQUAL (>=) condition.",
            "itemtype": "method",
            "name": "greaterThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which GREATER THAN EQUAL (>=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelectClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js",
            "line": 113,
            "description": "Used to specify LESS THAN (<) condition.",
            "itemtype": "method",
            "name": "lessThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN (<) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelectClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js",
            "line": 123,
            "description": "Used to specify LESS THAN EQUAL (<=) condition.",
            "itemtype": "method",
            "name": "lessThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN EQUAL (<=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelectClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js",
            "line": 133,
            "description": "Used to specify BETWEEN condition.",
            "itemtype": "method",
            "name": "between",
            "params": [
                {
                    "name": "start",
                    "description": "Start Range.",
                    "type": "String"
                },
                {
                    "name": "end",
                    "description": "End Range.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelectClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js",
            "line": 144,
            "description": "Used to specify LIKE condition.",
            "itemtype": "method",
            "name": "like",
            "params": [
                {
                    "name": "like",
                    "description": "LIKE condition.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelectClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js",
            "line": 154,
            "description": "Used to specify IN condition.",
            "itemtype": "method",
            "name": "in",
            "params": [
                {
                    "name": "values",
                    "description": "Values for IN condition.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "ISelect Interface.",
                "type": "ISelect"
            },
            "class": "ISelectClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ISum",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js",
            "line": 72,
            "description": "Name of Interface",
            "class": "ISum",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js",
            "line": 78,
            "description": "Column name of which condition will be specified.",
            "itemtype": "method",
            "name": "where",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISumClause Interface.",
                "type": "ISumClause"
            },
            "class": "ISum",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js",
            "line": 88,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "whereClause",
            "params": [
                {
                    "name": "whereClause",
                    "description": "Manually created where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISum Interface.",
                "type": "ISum"
            },
            "class": "ISum",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js",
            "line": 98,
            "description": "Used to specify AND condition between where clause.",
            "itemtype": "method",
            "name": "and",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "Column"
                }
            ],
            "return": {
                "description": "ISumClause Interface.",
                "type": "ISumClause"
            },
            "class": "ISum",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js",
            "line": 108,
            "description": "Used to specify OR condition between where clause.",
            "itemtype": "method",
            "name": "or",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "Column"
                }
            ],
            "return": {
                "description": "ISumClause Interface.",
                "type": "ISumClause"
            },
            "class": "ISum",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js",
            "line": 118,
            "description": "Used to specify GROUP BY statement in conjunction with the aggregate functions to group the result-set by one or more columns.",
            "itemtype": "method",
            "name": "groupBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "ISum Interface.",
                "type": "ISum"
            },
            "class": "ISum",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js",
            "line": 128,
            "description": "Used to specify HAVING clause to SQL because the WHERE keyword could not be used with aggregate functions.",
            "itemtype": "method",
            "name": "having",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISumClause Interface.",
                "type": "ISumClause"
            },
            "class": "ISum",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js",
            "line": 138,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "havingClause",
            "params": [
                {
                    "name": "havingClause",
                    "description": "Where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISum Interface.",
                "type": "ISum"
            },
            "class": "ISum",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js",
            "line": 148,
            "description": "Used to provide name of column for which sum will be calculated.",
            "itemtype": "method",
            "name": "column",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISum Interface.",
                "type": "ISum"
            },
            "class": "ISum",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js",
            "line": 158,
            "description": "Used to get sum, this method should be called in last to calculate sum.",
            "itemtype": "method",
            "name": "execute",
            "return": {
                "description": "Return sum.",
                "type": "Object"
            },
            "throws": {
                "description": "Throws exception if any error occur while calculating sum.",
                "type": "SiminovException"
            },
            "class": "ISum",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js",
            "line": 168,
            "description": "Used to get sum asynchronous, this method should be called in last to calculate sum.",
            "itemtype": "method",
            "name": "executeAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback.",
                    "type": "Callback"
                }
            ],
            "class": "ISum",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ISumClause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js",
            "line": 70,
            "description": "Name of Interface",
            "class": "ISumClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js",
            "line": 76,
            "description": "Used to specify EQUAL TO (=) condition.",
            "itemtype": "method",
            "name": "equalTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISum Interface.",
                "type": "ISum"
            },
            "class": "ISumClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js",
            "line": 86,
            "description": "Used to specify NOT EQUAL TO (!=) condition.",
            "itemtype": "method",
            "name": "notEqualTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which NOT EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISum Interface.",
                "type": "ISum"
            },
            "class": "ISumClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js",
            "line": 96,
            "description": "Used to specify GREATER THAN (>) condition.",
            "itemtype": "method",
            "name": "greaterThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for while GREATER THAN (>) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISum Interface.",
                "type": "ISum"
            },
            "class": "ISumClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js",
            "line": 106,
            "description": "Used to specify GREATER THAN EQUAL (>=) condition.",
            "itemtype": "method",
            "name": "greaterThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which GREATER THAN EQUAL (>=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISum Interface.",
                "type": "ISum"
            },
            "class": "ISumClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js",
            "line": 116,
            "description": "Used to specify LESS THAN (<) condition.",
            "itemtype": "method",
            "name": "lessThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN (<) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISum Interface.",
                "type": "ISum"
            },
            "class": "ISumClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js",
            "line": 126,
            "description": "Used to specify LESS THAN EQUAL (<=) condition.",
            "itemtype": "method",
            "name": "lessThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN EQUAL (<=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISum Interface.",
                "type": "ISum"
            },
            "class": "ISumClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js",
            "line": 136,
            "description": "Used to specify BETWEEN condition.",
            "itemtype": "method",
            "name": "between",
            "params": [
                {
                    "name": "start",
                    "description": "Start Range.",
                    "type": "String"
                },
                {
                    "name": "end",
                    "description": "End Range.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISum Interface.",
                "type": "ISum"
            },
            "class": "ISumClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js",
            "line": 147,
            "description": "Used to specify LIKE condition.",
            "itemtype": "method",
            "name": "like",
            "params": [
                {
                    "name": "like",
                    "description": "LIKE condition.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ISum Interface.",
                "type": "ISum"
            },
            "class": "ISumClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js",
            "line": 157,
            "description": "Used to specify IN condition.",
            "itemtype": "method",
            "name": "in",
            "params": [
                {
                    "name": "values",
                    "description": "Values for IN condition.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "ISum Interface.",
                "type": "ISum"
            },
            "class": "ISumClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ITotal",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js",
            "line": 70,
            "description": "Name of Interface",
            "class": "ITotal",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js",
            "line": 76,
            "description": "Column name of which condition will be specified.",
            "itemtype": "method",
            "name": "where",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotalClause Interface.",
                "type": "ITotalClause"
            },
            "class": "ITotal",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js",
            "line": 86,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "whereClause",
            "params": [
                {
                    "name": "whereClause",
                    "description": "Manually created where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotal Interface.",
                "type": "ITotal"
            },
            "class": "ITotal",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js",
            "line": 96,
            "description": "Used to specify AND condition between where clause.",
            "itemtype": "method",
            "name": "and",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotalClause Interface.",
                "type": "ITotalClause"
            },
            "class": "ITotal",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js",
            "line": 106,
            "description": "Used to specify OR condition between where clause.",
            "itemtype": "method",
            "name": "or",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotalClause Interface.",
                "type": "ITotalClause"
            },
            "class": "ITotal",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js",
            "line": 116,
            "description": "Used to specify GROUP BY statement in conjunction with the aggregate functions to group the result-set by one or more columns.",
            "itemtype": "method",
            "name": "groupBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotal Interface.",
                "type": "ITotal"
            },
            "class": "ITotal",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js",
            "line": 126,
            "description": "Used to specify HAVING clause to SQL because the WHERE keyword could not be used with aggregate functions.",
            "itemtype": "method",
            "name": "having",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotalClause Interface.",
                "type": "ITotalClause"
            },
            "class": "ITotal",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js",
            "line": 136,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "havingClause",
            "params": [
                {
                    "name": "havingClause",
                    "description": "Where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotal Interface.",
                "type": "ITotal"
            },
            "class": "ITotal",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js",
            "line": 146,
            "description": "Used to provide name of column for which total will be calculated.",
            "itemtype": "method",
            "name": "column",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotal Interface.",
                "type": "ITotal"
            },
            "class": "ITotal",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js",
            "line": 156,
            "description": "Used to get total, this method should be called in last to calculate total.",
            "itemtype": "method",
            "name": "execute",
            "return": {
                "description": "Return total.",
                "type": "Object"
            },
            "throws": {
                "description": "Throws exception if any error occur while calculating total.",
                "type": "SiminovException"
            },
            "class": "ITotal",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js",
            "line": 166,
            "description": "Used to get total asynchronous, this method should be called in last to calculate total.",
            "itemtype": "method",
            "name": "executeAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback.",
                    "type": "Callback"
                }
            ],
            "class": "ITotal",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ITotalClause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js",
            "line": 69,
            "description": "Name of Interface",
            "class": "ITotalClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js",
            "line": 75,
            "description": "Used to specify EQUAL TO (=) condition.",
            "itemtype": "method",
            "name": "equalTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotal Interface.",
                "type": "ITotal"
            },
            "class": "ITotalClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js",
            "line": 85,
            "description": "Used to specify NOT EQUAL TO (!=) condition.",
            "itemtype": "method",
            "name": "notEqualTo",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which NOT EQUAL TO (=) condition will be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotal Interface.",
                "type": "ITotal"
            },
            "class": "ITotalClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js",
            "line": 95,
            "description": "Used to specify GREATER THAN (>) condition.",
            "itemtype": "method",
            "name": "greaterThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for while GREATER THAN (>) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotal Interface.",
                "type": "ITotal"
            },
            "class": "ITotalClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js",
            "line": 105,
            "description": "Used to specify GREATER THAN EQUAL (>=) condition.",
            "itemtype": "method",
            "name": "greaterThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which GREATER THAN EQUAL (>=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotal Interface.",
                "type": "ITotal"
            },
            "class": "ITotalClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js",
            "line": 115,
            "description": "Used to specify LESS THAN (<) condition.",
            "itemtype": "method",
            "name": "lessThan",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN (<) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotal Interface.",
                "type": "ITotal"
            },
            "class": "ITotalClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js",
            "line": 125,
            "description": "Used to specify LESS THAN EQUAL (<=) condition.",
            "itemtype": "method",
            "name": "lessThanEqual",
            "params": [
                {
                    "name": "value",
                    "description": "Value for which LESS THAN EQUAL (<=) condition will be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotal Interface.",
                "type": "ITotal"
            },
            "class": "ITotalClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js",
            "line": 135,
            "description": "Used to specify BETWEEN condition.",
            "itemtype": "method",
            "name": "between",
            "params": [
                {
                    "name": "start",
                    "description": "Start Range.",
                    "type": "String"
                },
                {
                    "name": "end",
                    "description": "End Range.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotal Interface.",
                "type": "ITotal"
            },
            "class": "ITotalClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js",
            "line": 146,
            "description": "Used to specify LIKE condition.",
            "itemtype": "method",
            "name": "like",
            "params": [
                {
                    "name": "like",
                    "description": "LIKE condition.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ITotal Interface.",
                "type": "ITotal"
            },
            "class": "ITotalClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js",
            "line": 156,
            "description": "Used to specify IN condition.",
            "itemtype": "method",
            "name": "in",
            "params": [
                {
                    "name": "values",
                    "description": "Values for IN condition.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "ITotal Interface.",
                "type": "ITotal"
            },
            "class": "ITotalClause",
            "module": "Database",
            "submodule": "Impl"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 62,
            "description": "Add column",
            "itemtype": "method",
            "name": "addColumn",
            "params": [
                {
                    "name": "column",
                    "description": "Column",
                    "type": "String"
                }
            ],
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 72,
            "description": "Equal to conditiion",
            "itemtype": "method",
            "name": "equalTo",
            "params": [
                {
                    "name": "val",
                    "description": "Value of the condition",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "ISelect"
            },
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 85,
            "description": "Not equal to condition",
            "itemtype": "method",
            "name": "notEqualTo",
            "params": [
                {
                    "name": "val",
                    "description": "Value of the condition",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "ISelect"
            },
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 98,
            "description": "Greater then condition",
            "itemtype": "method",
            "name": "greaterThan",
            "params": [
                {
                    "name": "val",
                    "description": "Value of the condition",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "ISelect"
            },
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 111,
            "description": "Greater than equal condition",
            "itemtype": "method",
            "name": "greaterThanEqual",
            "params": [
                {
                    "name": "val",
                    "description": "Value of the condition",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "ISelect"
            },
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 123,
            "description": "Less than condition",
            "itemtype": "method",
            "name": "lessThan",
            "params": [
                {
                    "name": "val",
                    "description": "Value of the condition",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "ISelect"
            },
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 136,
            "description": "Less than equal condition",
            "itemtype": "method",
            "name": "lessThanEqual",
            "params": [
                {
                    "name": "val",
                    "description": "Value of the condition",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "ISelect"
            },
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 149,
            "description": "Between condition",
            "itemtype": "method",
            "name": "between",
            "params": [
                {
                    "name": "start",
                    "description": "Start Condition",
                    "type": "String"
                },
                {
                    "name": "end",
                    "description": "End Condition",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "ISelect"
            },
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 162,
            "description": "Like condition",
            "itemtype": "method",
            "name": "like",
            "params": [
                {
                    "name": "val",
                    "description": "Value of the condition",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Iselect"
            },
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 175,
            "description": "In condition",
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "values",
                    "description": "Values",
                    "type": "Array"
                }
            ],
            "type": "ISelect",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 202,
            "description": "Add condition",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "column",
                    "description": "Column",
                    "type": "String"
                }
            ],
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 212,
            "description": "Or condition",
            "itemtype": "method",
            "name": "or",
            "params": [
                {
                    "name": "column",
                    "description": "Column",
                    "type": "String"
                }
            ],
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 222,
            "description": "Where Clause",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "Where Clause"
            },
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 236,
            "description": "Equal To Condition",
            "itemtype": "property",
            "name": "EQUAL_TO",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 248,
            "description": "Not Equal To Condition",
            "itemtype": "property",
            "name": "NOT_EQUAL_TO",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 259,
            "description": "Greater Than Condition",
            "itemtype": "property",
            "name": "",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 270,
            "description": "Greater Than Equal Condition",
            "itemtype": "property",
            "name": "GREATER_THAN_EQUAL",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 281,
            "description": "Less Then Condition",
            "itemtype": "property",
            "name": "LESS_THAN",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 292,
            "description": "Less Than Equal Condition",
            "itemtype": "property",
            "name": "LESS_THAN_EQUAL",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 303,
            "description": "Between Condition",
            "itemtype": "property",
            "name": "Between",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 314,
            "description": "Like Condition",
            "itemtype": "property",
            "name": "LIKE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 325,
            "description": "In Condition",
            "itemtype": "property",
            "name": "IN",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 336,
            "description": "And Condition",
            "itemtype": "property",
            "name": "AND",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 347,
            "description": "Or Condition",
            "itemtype": "property",
            "name": "OR",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 359,
            "description": "Asc Order By Condition",
            "itemtype": "property",
            "name": "ASC_ORDER_BY",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js",
            "line": 370,
            "description": "Desc Order By Condition",
            "itemtype": "property",
            "name": "DESC_ORDER_BY",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Clause",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 89,
            "description": "It adds a record to any single table in a relational database.\n\n\t   \t<pre>\n\t   \t\nExample: Make Book Object\n\t\n\tvar cBook = new Book();\n\tcBook.setTitle(Book.BOOK_TYPE_C);\n\tcBook.setDescription(c_description));\n\tcBook.setAuthor(c_author));\n\tcBook.setLink(c_link));\n\n\ttry {\n\t\tcBook.save();\n\t} catch(DatabaseException de) {\n\t\t//Log it.\n\t}\n\n\t    </pre>",
            "itemtype": "method",
            "name": "save",
            "throws": {
                "description": "If any error occurs while saving tuples in database.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 184,
            "description": "It adds a record to any single table in a relational database asynchronous.\n\n\t   \t<pre>\n\nExample: Make Book Object\n\n\tvar cBook = new Book();\n\tcBook.setTitle(Book.BOOK_TYPE_C);\n\tcBook.setDescription(c_description));\n\tcBook.setAuthor(c_author));\n\tcBook.setLink(beer_link));\n\n\n \t- Using Transaction\n\n\t\tvar callback = new Callback();\n\t\tcallback.onExecute = function(transaction) {\n\n\t\t\tvar saveCallback = new Callback();\n\t\t\tsaveCallback.onSuccess = function() {\n\n\t\t\t}\n\n\t\t\tcBook.saveAsync(saveCallback, transaction);\n\t\t}\n\n\t\tcallback.onSuccess = function() {\n\n\t\t}\n\n\t\tcallback.onFailure = function() {\n\n\t\t}\n\n\n\t\ttry {\n\n\t\t\tvar databaseDescriptor = new Book().getDatabaseDescriptor();\n\t\t\tDatabase.beginTransactionAsync(databaseDescriptor, callback);\n\t\t} catch(e) {\n\t\t\t//Log it.\n\t\t}\n\n\t- Using Callback\n\n\t\tvar callback = new Callback();\n\t\tcallback.onSuccess = function() {\n\n\t\t}\n\n\t\tcallback.onFailure = function() {\n\n\t\t}\n\n\t\ttry {\n\t\t\tcBook.saveAsync(callback);\n\t\t} catch(e) {\n\t\t\t//Log it.\n\t\t}\n\n\t    </pre>",
            "itemtype": "method",
            "name": "saveAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 256,
            "description": "It updates a record to any single table in a relational database.\n\t\nExample: Make Book Object\n\n\tvar cBook = new Book();\n\tcBook.setTitle(Book.BOOK_TYPE_C);\n\tcBook.setDescription(c_description));\n\tcBook.setAuthor(c_author));\n\tcBook.setLink(c_link));\n\n\ttry {\n\t\tcBook.update();\n\t} catch(DatabaseException de) {\n\t\t//Log it.\n\t}",
            "itemtype": "method",
            "name": "update",
            "throws": {
                "description": "DatabaseException If any error occurs while saving tuples in database."
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 346,
            "description": "It updates asynchronous a record to any single table in a relational database.\n\nExample: Make Book Object\n\n\tvar cBook = new Book();\n\tcBook.setTitle(Book.BOOK_TYPE_C);\n\tcBook.setDescription(c_description));\n\tcBook.setAuthor(c_author));\n\tcBook.setLink(c_link));\n\n\n \t- Using Transaction\n\n\t\tvar callback = new Callback();\n\t\tcallback.onExecute = function(transaction) {\n\n\t\t\tvar updateCallback = new Callback();\n\t\t\tupdateCallback.onSuccess = function() {\n\n\t\t\t}\n\n\t\t\tcBook.updateAsync(updateCallback, transaction);\n\t\t}\n\n\t\tcallback.onSuccess = function() {\n\n\t\t}\n\n\t\tcallback.onFailure = function() {\n\n\t\t}\n\n\n\t\ttry {\n\n\t\t\tvar databaseDescriptor = new Book().getDatabaseDescriptor();\n\t\t\tDatabase.beginTransactionAsync(databaseDescriptor, callback);\n\t\t} catch(e) {\n\t\t\t//Log it.\n\t\t}\n\n\t- Using Callback\n\n\t\tvar callback = new Callback();\n\t\tcallback.onSuccess = function() {\n\n\t\t}\n\n\t\tcallback.onFailure = function() {\n\n\t\t}\n\n\t\ttry {\n\t\t\tcBook.updateAsync(callback);\n\t\t} catch(e) {\n\t\t\t//Log it.\n\t\t}",
            "itemtype": "method",
            "name": "updateAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 415,
            "description": "It finds out whether tuple exists in table or not.\nIF NOT EXISTS:\n\tadds a record to any single table in a relational database.\nELSE:\n\tupdates a record to any single table in a relational database.\n\t   \t\nExample: Make Book Object\n\n\tvar cBook = new Book();\n\tcBook.setTitle(Book.BOOK_TYPE_C);\n\tcBook.setDescription(c_description));\n\tcBook.setAuthor(c_author));\n\tcBook.setLink(c_link));\n\n\ttry {\n\t\tcBook.saveOrUpdate();\n\t} catch(DatabaseException de) {\n\t\t//Log it.\n\t}",
            "itemtype": "method",
            "name": "saveOrUpdate",
            "throws": {
                "description": "If any error occurs while saving tuples in database.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 508,
            "description": "It finds out whether tuple exists in table or not.\nIF NOT EXISTS:\n\tadds a record to any single table in a relational database.\nELSE:\n\tupdates a record to any single table in a relational database.\n\nExample: Make Book Object\n\n\tvar cBook = new Book();\n\tcBook.setTitle(Book.BOOK_TYPE_C);\n\tcBook.setDescription(c_description));\n\tcBook.setAuthor(c_author));\n\tcBook.setLink(c_link));\n\n\n \t- Using Transaction\n\n\t\tvar callback = new Callback();\n\t\tcallback.onExecute = function(transaction) {\n\n\t\t\tvar saveOrUpdateCallback = new Callback();\n\t\t\tsaveOrUpdateCallback.onSuccess = function() {\n\n\t\t\t}\n\n\t\t\tcBook.saveOrUpdateAsync(saveOrUpdateCallback, transaction);\n\t\t}\n\n\t\tcallback.onSuccess = function() {\n\n\t\t}\n\n\t\tcallback.onFailure = function() {\n\n\t\t}\n\n\n\t\ttry {\n\n\t\t\tvar databaseDescriptor = new Book().getDatabaseDescriptor();\n\t\t\tDatabase.beginTransactionAsync(databaseDescriptor, callback);\n\t\t} catch(e) {\n\t\t\t//Log it.\n\t\t}\n\n\t- Using Callback\n\n\t\tvar callback = new Callback();\n\t\tcallback.onSuccess = function() {\n\n\t\t}\n\n\t\tcallback.onFailure = function() {\n\n\t\t}\n\n\t\ttry {\n\t\t\tcBook.saveOrUpdateAsync(callback);\n\t\t} catch(e) {\n\t\t\t//Log it.\n\t\t}",
            "itemtype": "method",
            "name": "saveOrUpdateAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 581,
            "description": "Fetch tuples from table.\n\n\t\tExample:\n\t\n\t\tvar books =  new Book().select()\n\t\t\t\t\t\t.where(Book.TITLE).equalTo(\"C\")\n\t\t\t\t\t\t.and(Book.AUTHOR).equalTo(\"C Author\")\n\t\t\t\t\t\t.execute();",
            "itemtype": "method",
            "name": "select",
            "return": {
                "description": "ISelect to provide extra information based on which tuples will be fetched from table.",
                "type": "ISelect"
            },
            "throws": {
                "description": "If any error occur while fetching tuples from table.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 626,
            "description": "It deletes a record to any single table in a relational database.\n\t\nExample:\n\n\tvar cBook = new Book();\n\tcBook.setTitle(Book.BOOK_TYPE_C);\n\tcBook.setDescription(c_description));\n\tcBook.setAuthor(c_author));\n\tcBook.setLink(beer_link));\n\n\ttry {\n\t\tcBook.delete();\n\t} catch(DatabaseException de) {\n\t\t//Log it.\n\t}\n\t\t\t\n\tOR\n\t\t\t\n\ttry {\n\t\tnew Book().delete().execute();\n\t} catch(DatabaseException de) {\n\t\t//Log It.\n\t}",
            "itemtype": "method",
            "name": "delete",
            "throws": {
                "description": "If any error occurs while saving tuples in database.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 659,
            "description": "Returns the average based on column name provided.\n\n\t\tExample:\n\t\t\tvar average = 0;\n\t\t\t\n\t\t\ttry {\n\t\t\t\taverage = new Book().avg()\n\t\t\t\t\t\t\t.column(Book.COLUMN_NAME_WHICH_CONTAIN_NUMBRIC_VALUE)\n\t\t\t\t\t\t\t.where(Book.TITLE).equalTo(\"C\")\n\t\t\t\t\t\t\t.execute();\n\t\t\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "avg",
            "return": {
                "description": "IAverage to provide extra information based on which average will be calculated.",
                "type": "IAverage"
            },
            "throws": {
                "description": "If any error occur while finding average.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 685,
            "description": "Returns the count of rows based on information provided.\n\n\t\tExample:\n\t\t\tvar count = 0;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tcount = new Book().count().\n\t\t\t\t\t\t\t.where(Book.TITLE).equalTo(\"C\")\n\t\t\t\t\t\t\t.execute();\n\t\t\t\t\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "count",
            "return": {
                "description": "ICount to provide extra information based on which count will be calculated.",
                "type": "ICount"
            },
            "throws": {
                "description": "If any error occur while find count.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 710,
            "description": "Returns the minimum based on column name provided.\n\n\t\tExample:\n\t\t\tvar maximum = 0;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tmaximum = new Book().max()\n\t\t\t\t\t\t\t.column(Book.COLUMN_NAME_WHICH_CONTAIN_NUMBRIC_VALUE)\n\t\t\t\t\t\t\t.where(Book.TITLE).equalTo(\"C\")\n\t\t\t\t\t\t\t.execute();\n\t\t\t\t\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "max",
            "return": {
                "description": "IMax to provide extra information based on which maximum will be calculated.",
                "type": "IMax"
            },
            "throws": {
                "description": "If any error occur while finding minimum.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 736,
            "description": "Returns the minimum based on column name provided.\n\n\t\tExample:\n\t\t\tvar minimum = 0;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tminimum = new Book().min()\n\t\t\t\t\t\t\t.column(Book.COLUMN_NAME_WHICH_CONTAIN_NUMBRIC_VALUE)\n\t\t\t\t\t\t\t.where(Book.TITLE).equalTo(\"C\")\n\t\t\t\t\t\t\t.execute();\n\t\t\t\t\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "min",
            "return": {
                "description": "IMin to provide extra information based on which minimum will be calculated.",
                "type": "IMin"
            },
            "throws": {
                "description": "If any error occur while finding minimum.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 762,
            "description": "Returns the sum based on column name provided.\n\n\t\tExample:\n\t\t\tvar sum = 0;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tsum = new Book().sum()\n\t\t\t\t\t\t\t.column(Book.COLUMN_NAME_WHICH_CONTAIN_NUMBRIC_VALUE)\n\t\t\t\t\t\t\t.where(Book.TITLE).equalTo(\"C\")\n\t\t\t\t\t\t\t.execute();\n\t\t\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "sum",
            "return": {
                "description": "ISum to provide extra information based on which sum will be calculated.",
                "type": "ISum"
            },
            "throws": {
                "description": "If any error occur while finding sum.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 788,
            "description": "Returns the total based on column name provided.\n\n\t\tExample:\n\t\t\tvar total = 0;\n\t\t\t\n\t\t\ttry {\n\t\t\t\ttotal = new Book().total()\n\t\t\t\t\t\t\t.column(Book.COLUMN_NAME_WHICH_CONTAIN_NUMBRIC_VALUE)\n\t\t\t\t\t\t\t.where(Book.TITLE).equalTo(\"C\")\n\t\t\t\t\t\t\t.execute();\n\t\t\t\t\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "total",
            "return": {
                "description": "ITotal to provide extra information based on which total will be calculated.",
                "type": "ITotal"
            },
            "throws": {
                "description": "If any error occur while finding total.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 814,
            "description": "Returns the group concat based on column name provided.\n\n\t\tExample:\n\t\t\tvar groupConcat = 0;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tgroupConcat = new Book().groupConcat()\n\t\t\t\t\t\t\t\t.column(Book.COLUMN_NAME_WHICH_CONTAIN_NUMBRIC_VALUE)\n\t\t\t\t\t\t\t\t.where(Book.TITLE).equalTo(\"C\")\n\t\t\t\t\t\t\t\t.execute();\n\t\t\t\t\t\t\t\t\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "groupConcat",
            "return": {
                "description": "IGroupConcat to provide extra information based on which group concat will be calculated.",
                "type": "IGroupConcat"
            },
            "throws": {
                "description": "SiminovException If any error occur while finding group concat."
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 840,
            "description": "Returns the mapped table name for invoked class object.\n\t \n\t\tExample:\n\t\t\tvar tableName = null;\n\t\t\ttry {\n\t\t\t\ttableName = new Book().getTableName();\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "getTableName",
            "return": {
                "description": "Mapped Table name.",
                "type": "String"
            },
            "throws": {
                "description": "If no mapped table found for invoked class object.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 953,
            "description": "Returns asynchronous the mapped table name for invoked class object.\n\n\t\tExample:\n\n\t\t\t- Using Transaction\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onExecute = function(transaction) {\n\n\t\t\t\t\tvar getTableNameCallback = function Callback();\n\t\t\t\t\tgetTableNameCallback.onSuccess = function(tableName) {\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnew Book().getTableName(getTableNameCallback, transaction);\n\t\t\t\t}\n\n\t\t\t\tcallback.onSuccess = function() {\n\n\t\t\t\t}\n\n\t\t\t\tcallback.onFailure = function() {\n\n\t\t\t\t}\n\n\n\t\t\t\ttry {\n\t\t\t\t\tDatabaseDescriptor databaseDescriptor = new Book().getDatabaseDescriptor();\n\t\t\t\t\tDatabase.beginTransactionAsync(databaseDescriptor, callback);\n\t\t\t\t} catch(DatabaseException de) {\n\t\t\t\t\t//Log it.\n\t\t\t\t}\n\n\n\t\t\t- Using Callback\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onSuccess = function(tableName) {\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tnew Book().getTableNameAsync(callback);\n\t\t\t\t} catch(e) {\n\n\t\t\t\t}",
            "itemtype": "method",
            "name": "getTableNameAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 1010,
            "description": "Returns all column names of mapped table.\n\n\t\tExample:\n\t\t\tvar columnNames = null;\n\t\t\ttry {\n\t\t\t\tcolumnNames = new Book().getColumnNames();\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "getColumnNames",
            "return": {
                "description": "All column names of mapped table.",
                "type": "Array"
            },
            "throws": {
                "description": "If no mapped table found for invoked class object.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 1118,
            "description": "Returns asynchronous all column names of mapped table.\n\n\t\tExample:\n\n\t\t\t- Using Transaction\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onExecute = function(transaction) {\n\n\t\t\t\t\tvar getColumnNamesCallback = function Callback();\n\t\t\t\t\tgetColumnNamesCallback.onSuccess = function(columnNames) {\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnew Book().getColumnNamesAsync(getColumnNamesCallback, transaction);\n\t\t\t\t}\n\n\t\t\t\tcallback.onSuccess = function() {\n\n\t\t\t\t}\n\n\t\t\t\tcallback.onFailure = function() {\n\n\t\t\t\t}\n\n\n\t\t\t\ttry {\n\t\t\t\t\tDatabaseDescriptor databaseDescriptor = new Book().getDatabaseDescriptor();\n\t\t\t\t\tDatabase.beginTransactionAsync(databaseDescriptor, callback);\n\t\t\t\t} catch(DatabaseException de) {\n\t\t\t\t\t//Log it.\n\t\t\t\t}\n\n\n\t\t\t- Using Callback\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onSuccess = function(tableName) {\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tnew Book().getColumnNamesAsync(callback);\n\t\t\t\t} catch(e) {\n\n\t\t\t\t}",
            "itemtype": "method",
            "name": "getColumnNamesAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 1176,
            "description": "Returns all columns with there data types for invoked class object.\n\t\n\t\tExample:\n\t\t\tvar columnTypes = null;\n\t\t\ttry {\n\t\t\t\tcolumnTypes = new Book().getColumnTypes();\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "getColumnTypes",
            "return": {
                "description": "All columns with there data types.",
                "type": "Dictionary"
            },
            "throws": {
                "description": "If no mapped table found for invoked class object.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 1290,
            "description": "Returns asynchronous all columns with there data types for invoked class object.\n\n\t\tExample:\n\n\t\t\t- Using Transaction\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onExecute = function(transaction) {\n\n\t\t\t\t\tvar getColumnTypesCallback = function Callback();\n\t\t\t\t\tgetColumnTypesCallback.onSuccess = function(columnNames) {\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnew Book().getColumnTypesAsync(getColumnTypesCallback, transaction);\n\t\t\t\t}\n\n\t\t\t\tcallback.onSuccess = function() {\n\n\t\t\t\t}\n\n\t\t\t\tcallback.onFailure = function() {\n\n\t\t\t\t}\n\n\n\t\t\t\ttry {\n\t\t\t\t\tDatabaseDescriptor databaseDescriptor = new Book().getDatabaseDescriptor();\n\t\t\t\t\tDatabase.beginTransactionAsync(databaseDescriptor, callback);\n\t\t\t\t} catch(DatabaseException de) {\n\t\t\t\t\t//Log it.\n\t\t\t\t}\n\n\n\t\t\t- Using Callback\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onSuccess = function(tableName) {\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tnew Book().getColumnTypesAsync(callback);\n\t\t\t\t} catch(e) {\n\n\t\t\t\t}",
            "itemtype": "method",
            "name": "getColumnTypesAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 1348,
            "description": "Returns all primary keys of mapped table for invoked class object.\n\n\t\tExample:\n\t\t\tvar primaryKeys = null;\n\t\t\ttry {\n\t\t\t\tprimaryKeys = new Book().getPrimeryKeys();\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "getPrimaryKeys",
            "return": {
                "description": "All primary keys.",
                "type": "Array"
            },
            "throws": {
                "description": "If not mapped table found for invoked class object.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 1454,
            "description": "Returns asynchronous all primary keys of mapped table for invoked class object.\n\n\t\tExample:\n\n\t\t\t- Using Transaction\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onExecute = function(transaction) {\n\n\t\t\t\t\tvar getPrimaryKeysCallback = function Callback();\n\t\t\t\t\tgetPrimaryKeysCallback.onSuccess = function(primaryKeys) {\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnew Book().getPrimaryKeysAsync(getPrimaryKeysCallback, transaction);\n\t\t\t\t}\n\n\t\t\t\tcallback.onSuccess = function() {\n\n\t\t\t\t}\n\n\t\t\t\tcallback.onFailure = function() {\n\n\t\t\t\t}\n\n\n\t\t\t\ttry {\n\t\t\t\t\tDatabaseDescriptor databaseDescriptor = new Book().getDatabaseDescriptor();\n\t\t\t\t\tDatabase.beginTransactionAsync(databaseDescriptor, callback);\n\t\t\t\t} catch(DatabaseException de) {\n\t\t\t\t\t//Log it.\n\t\t\t\t}\n\n\n\t\t\t- Using Callback\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onSuccess = function(tableName) {\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tnew Book().getPrimaryKeysAsync(callback);\n\t\t\t\t} catch(e) {\n\n\t\t\t\t}",
            "itemtype": "method",
            "name": "getPrimaryKeysAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 1512,
            "description": "Returns all mandatory fields which are associated with mapped table for invoked class object.\n\t \n\t\tExample:\n\t\t\tvar mandatoryFields = null;\n\t\t\ttry {\n\t\t\t\tmandatoryFields = new Book().getMandatoryFields();\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "getMandatoryFields",
            "return": {
                "description": "All mandatory fields for mapped table.",
                "type": "Array"
            },
            "throws": {
                "description": "SiminovException If no mapped table found for invoked class object."
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 1620,
            "description": "Returns asynchronous all mandatory fields which are associated with mapped table for invoked class object.\n\n\t\tExample:\n\n\t\t\t- Using Transaction\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onExecute = function(transaction) {\n\n\t\t\t\t\tvar getMandatoryFieldsCallback = function Callback();\n\t\t\t\t\tgetMandatoryFieldsCallback.onSuccess = function(primaryKeys) {\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnew Book().getMandatoryFieldsAsync(getMandatoryFieldsCallback, transaction);\n\t\t\t\t}\n\n\t\t\t\tcallback.onSuccess = function() {\n\n\t\t\t\t}\n\n\t\t\t\tcallback.onFailure = function() {\n\n\t\t\t\t}\n\n\n\t\t\t\ttry {\n\t\t\t\t\tDatabaseDescriptor databaseDescriptor = new Book().getDatabaseDescriptor();\n\t\t\t\t\tDatabase.beginTransactionAsync(databaseDescriptor, callback);\n\t\t\t\t} catch(DatabaseException de) {\n\t\t\t\t\t//Log it.\n\t\t\t\t}\n\n\n\t\t\t- Using Callback\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onSuccess = function(tableName) {\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tnew Book().getMandatoryFieldsAsync(callback);\n\t\t\t\t} catch(e) {\n\n\t\t\t\t}",
            "itemtype": "method",
            "name": "getMandatoryFieldsAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 1677,
            "description": "Returns all unique fields which are associated with mapped table for invoked class object.\n\t \n\t\tExample:\n\t\t\t \t\t\t\n\t\t\tvar uniqueFields = null;\n\t\t\ttry {\n\t\t\t\tuniqueFields = new Book().getUniqueFields();\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "getUniqueFields",
            "return": {
                "description": "All unique fields for mapped table.",
                "type": "Array"
            },
            "throws": {
                "description": "If no mapped table found for invoked class object.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 1777,
            "description": "Returns asynchronous all unique fields which are associated with mapped table for invoked class object.\n\n\t\tExample:\n\n\t\t\t- Using Transaction\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onExecute = function(transaction) {\n\n\t\t\t\t\tvar getUniqueFieldsCallback = function Callback();\n\t\t\t\t\tgetUniqueFieldsCallback.onSuccess = function(primaryKeys) {\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnew Book().getUniqueFieldsAsync(getUniqueFieldsCallback, transaction);\n\t\t\t\t}\n\n\t\t\t\tcallback.onSuccess = function() {\n\n\t\t\t\t}\n\n\t\t\t\tcallback.onFailure = function() {\n\n\t\t\t\t}\n\n\n\t\t\t\ttry {\n\t\t\t\t\tDatabaseDescriptor databaseDescriptor = new Book().getDatabaseDescriptor();\n\t\t\t\t\tDatabase.beginTransactionAsync(databaseDescriptor, callback);\n\t\t\t\t} catch(DatabaseException de) {\n\t\t\t\t\t//Log it.\n\t\t\t\t}\n\n\n\t\t\t- Using Callback\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onSuccess = function(tableName) {\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tnew Book().getUniqueFieldsAsync(callback);\n\t\t\t\t} catch(e) {\n\n\t\t\t\t}",
            "itemtype": "method",
            "name": "getUniqueFieldsAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 1836,
            "description": "Returns all foreign keys of mapped table for invoked class object.\n\t \n\t\tExample:\n\t\t\t \t\t\t\n\t\t\tvar foreignKeys = null;\n\t\t\ttry {\n\t\t\t\tforeignKeys = new Book().getForeignKeys();\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "getForeignKeys",
            "return": {
                "description": "All foreign keys of mapped table.",
                "type": "Array"
            },
            "throws": {
                "description": "If no mapped table found for invoked class object.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 1945,
            "description": "Returns asynchronous all foreign keys of mapped table for invoked class object.\n\n\t\tExample:\n\n\t\t\t- Using Transaction\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onExecute = function(transaction) {\n\n\t\t\t\t\tvar getForeignKeysCallback = function Callback();\n\t\t\t\t\tgetForeignKeysCallback.onSuccess = function(primaryKeys) {\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnew Book().getForeignKeysAsync(getForeignKeysCallback, transaction);\n\t\t\t\t}\n\n\t\t\t\tcallback.onSuccess = function() {\n\n\t\t\t\t}\n\n\t\t\t\tcallback.onFailure = function() {\n\n\t\t\t\t}\n\n\n\t\t\t\ttry {\n\t\t\t\t\tDatabaseDescriptor databaseDescriptor = new Book().getDatabaseDescriptor();\n\t\t\t\t\tDatabase.beginTransactionAsync(databaseDescriptor, callback);\n\t\t\t\t} catch(DatabaseException de) {\n\t\t\t\t\t//Log it.\n\t\t\t\t}\n\n\n\t\t\t- Using Callback\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onSuccess = function(tableName) {\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tnew Book().getForeignKeysAsync(callback);\n\t\t\t\t} catch(e) {\n\n\t\t\t\t}",
            "itemtype": "method",
            "name": "getForeignKeysAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 2003,
            "description": "Returns database descriptor object based on the POJO class called.\n\n\t\tExample:\n\t\t\n\t\t\ttry {\n\t\t\t\tDatabaseDescriptor databaseDescriptor = new Book().getDatabaseDescriptor();\n\t\t\t} catch(DatabaseException databaseException) {\n\t\t\t\t//Log It.\n\t\t\t}",
            "itemtype": "method",
            "name": "getDatabaseDescriptor",
            "return": {
                "description": "Database Descriptor Object.",
                "type": "DatabaseDescriptor"
            },
            "throws": {
                "description": "If any error occur while getting database descriptor object.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 2035,
            "description": "Returns asynchronous database descriptor object based on the POJO class called.\n\n\t\tExample:\n\n\t\t\t- Using Transaction\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onExecute = function() {\n\n\t\t\t\t\tvar getDatabaseDescriptorCallback = new Callback();\n\t\t\t\t\tgetDatabaseDescriptorCallback.onSuccess = function(databaseDescriptor) {\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnew Lession().getDatabaseDescriptorAsync(getDatabaseDescriptorCallback, transaction);\n\t\t\t\t}\n\n\t\t\t\tcallback.onSuccess = function() {\n\n\t\t\t\t}\n\n\t\t\t\tvar databaseDescriptor = new Book().getDatabaseDescriptor();\n\t\t\t\tDatabase.beginTransactionAsync(databaseDescriptor, callback);\n\n\t\t\t- Using Callback\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onSuccess = function(databaseDescriptor) {\n\n\t\t\t\t}\n\n\t\t\t\tnew Book().getDatabaseDescriptorAsync(callback);",
            "itemtype": "method",
            "name": "getDatabaseDescriptorAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 2078,
            "description": "Returns the actual entity descriptor object mapped for invoked class object.\n\t \n\t\tExample:\n\t\t\tEntityDescriptor entityDescriptor = null;\n\t\t\ttry {\n\t\t\t\tentityDescriptor = new Book().getEntityDescriptor();\n\t\t\t} catch(DatabaseException de) {\n\t\t\t\t//Log it.\n\t\t\t}",
            "itemtype": "method",
            "name": "getEntityDescriptor",
            "return": {
                "description": "Entity Descriptor Object",
                "type": "EntityDescriptor"
            },
            "throws": {
                "description": "If entity object not mapped for invoked class object.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js",
            "line": 2111,
            "description": "Returns asynchronous the actual entity descriptor object mapped for invoked class object.\n\n\t\tExample:\n\n\t\t\t- Using Transaction\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onExecute = function() {\n\n\t\t\t\t\tvar getEntityDescriptorCallback = new Callback();\n\t\t\t\t\tgetEntityDescriptorCallback.onSuccess = function(entityDescriptor) {\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnew Lession().getEntityDescriptorAsync(getEntityDescriptorCallback, transaction);\n\t\t\t\t}\n\n\t\t\t\tcallback.onSuccess = function() {\n\n\t\t\t\t}\n\n\t\t\t\tvar databaseDescriptor = new Book().getDatabaseDescriptor();\n\t\t\t\tDatabase.beginTransactionAsync(databaseDescriptor, callback);\n\n\t\t\t- Using Callback\n\n\t\t\t\tvar callback = new Callback();\n\t\t\t\tcallback.onSuccess = function(entityDescriptor) {\n\n\t\t\t\t}\n\n\t\t\t\tnew Book().getEntityDescriptorAsync(callback);",
            "itemtype": "method",
            "name": "getEntityDescriptor",
            "return": {
                "description": "Entity Descriptor Object",
                "type": "EntityDescriptor"
            },
            "throws": {
                "description": "If entity object not mapped for invoked class object.",
                "type": "SiminovException"
            },
            "class": "Database",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 81,
            "description": "Used to specify DISTINCT condition.",
            "itemtype": "method",
            "name": "distinct",
            "return": {
                "description": "Select Interface Implementation.",
                "type": "Object"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 94,
            "description": "Column name of which condition will be specified.",
            "itemtype": "method",
            "name": "where",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Clause Interface Implementation.",
                "type": "Object"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 109,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "whereClause",
            "params": [
                {
                    "name": "whereClause",
                    "description": "Manually created where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Select Interface Implementation.",
                "type": "Object"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 122,
            "description": "Used to specify AND condition between where clause.",
            "itemtype": "method",
            "name": "and",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Clause Interface Implementation.",
                "type": "Object"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 135,
            "description": "Used to specify OR condition between where clause.",
            "itemtype": "method",
            "name": "or",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be specified.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Clause Interface Implementation.",
                "type": "Object"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 148,
            "description": "Used to specify ORDER BY keyword to sort the result-set.",
            "itemtype": "method",
            "name": "orderBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns which need to be sorted.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Select Interface Implementation.",
                "type": "OBJECT"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 161,
            "description": "Used to specify ORDER BY ASC keyword to sort the result-set in ascending order.",
            "itemtype": "method",
            "name": "ascendingOrderBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns which need to be sorted.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Select Interface Implementation.",
                "type": "Object"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 176,
            "description": "Used to specify ORDER BY DESC keyword to sort the result-set in descending order.",
            "itemtype": "method",
            "name": "descendingOrderBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns which need to be sorted.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Select Interface Implementation.",
                "type": "Object"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 191,
            "description": "Used to specify the range of data need to fetch from table.",
            "itemtype": "method",
            "name": "limit",
            "params": [
                {
                    "name": "limit",
                    "description": "LIMIT of data.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Select Interface Implementation.",
                "type": "Object"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 204,
            "description": "Used to specify GROUP BY statement in conjunction with the aggregate functions to group the result-set by one or more columns.",
            "itemtype": "method",
            "name": "groupBy",
            "params": [
                {
                    "name": "columns",
                    "description": "Name of columns.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Select Interface Implementation.",
                "type": "Object"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 217,
            "description": "Used to specify HAVING clause to SQL because the WHERE keyword could not be used with aggregate functions.",
            "itemtype": "method",
            "name": "having",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column on which condition need to be applied.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Clause Interface Implementation.",
                "type": "Clause"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 232,
            "description": "Used to provide manually created Where clause, instead of using API's.",
            "itemtype": "method",
            "name": "havingClause",
            "params": [
                {
                    "name": "havingClause",
                    "description": "Where clause.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Select Interface Implementation.",
                "type": "Object"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 245,
            "description": "Used to provide name of column only for which data will be fetched.",
            "itemtype": "method",
            "name": "column",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Select Interface Implementation.",
                "type": "Object"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 258,
            "description": "Used to provide name of columns only for which data will be fetched.",
            "itemtype": "method",
            "name": "columns",
            "params": [
                {
                    "name": "column",
                    "description": "Name of columns.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Select Interface Implementation.",
                "type": "Object"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 271,
            "description": "Used to provide delimiter",
            "itemtype": "method",
            "name": "delimiter",
            "params": [
                {
                    "name": "val",
                    "description": "Value of delimiter",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Select Interface Implementation",
                "type": "Object"
            },
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 283,
            "description": "Process the request asynchronous specified by application.",
            "itemtype": "method",
            "name": "executeAsync",
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js",
            "line": 293,
            "description": "Process the request specified by application.",
            "itemtype": "method",
            "name": "execute",
            "class": "Select",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Transaction.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Transaction",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/EventHandler.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "EventHandler",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/EventHandler.js",
            "line": 64,
            "description": "Handle event triggered by Siminov.",
            "itemtype": "method",
            "name": "triggerEvent",
            "params": [
                {
                    "name": "data",
                    "description": "Hybrid Data From Native",
                    "type": "String"
                }
            ],
            "class": "EventHandler",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/IDatabaseEvents.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "IDatabaseEvents",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/IDatabaseEvents.js",
            "line": 58,
            "description": "This event is fired when database gets created as per database descriptor.",
            "itemtype": "method",
            "name": "onDatabaseCreated",
            "params": [
                {
                    "name": "databaseDescriptor",
                    "description": "Database Descriptor",
                    "type": "DatabaseDescriptor"
                }
            ],
            "class": "IDatabaseEvents",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/IDatabaseEvents.js",
            "line": 66,
            "description": "This event is fired when database is dropped.",
            "itemtype": "method",
            "name": "onDatabaseDropped",
            "params": [
                {
                    "name": "databaseDescriptor",
                    "description": "Database Descriptor",
                    "type": "DatabaseDescriptor"
                }
            ],
            "class": "IDatabaseEvents",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/IDatabaseEvents.js",
            "line": 74,
            "description": "This event is fired when a table is created.",
            "itemtype": "method",
            "name": "onTableCreated",
            "params": [
                {
                    "name": "databaseDescriptor",
                    "description": "Database Descriptor",
                    "type": "DatabaseDescriptor"
                },
                {
                    "name": "entityDescriptor",
                    "description": "Entity Descriptor",
                    "type": "EntityDescriptor"
                }
            ],
            "class": "IDatabaseEvents",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/IDatabaseEvents.js",
            "line": 83,
            "description": "This event is fired when a table is dropped.",
            "itemtype": "method",
            "name": "onTableDropped",
            "params": [
                {
                    "name": "databaseDescriptor",
                    "description": "Database Descriptor",
                    "type": "DatabaseDescriptor"
                },
                {
                    "name": "entityDescriptor",
                    "description": "EntityDescriptor",
                    "type": "EntityDescriptor"
                }
            ],
            "class": "IDatabaseEvents",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/IDatabaseEvents.js",
            "line": 92,
            "description": "This event is fired when a index is created on table.",
            "itemtype": "method",
            "name": "onIndexCreated",
            "params": [
                {
                    "name": "databaseDescriptor",
                    "description": "Database Descriptor",
                    "type": "DatabaseDescriptor"
                },
                {
                    "name": "entityDescriptor",
                    "description": "Entity Descriptor",
                    "type": "EntityDescriptor"
                },
                {
                    "name": "index",
                    "description": "Index",
                    "type": "Index"
                }
            ],
            "class": "IDatabaseEvents",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/IDatabaseEvents.js",
            "line": 102,
            "description": "This event is fired when a index is dropped.",
            "itemtype": "method",
            "name": "onIndexDropped",
            "params": [
                {
                    "name": "databaseDescriptor",
                    "description": "Database Descriptor",
                    "type": "DatabaseDescriptor"
                },
                {
                    "name": "entityDescriptor",
                    "description": "Entity Descriptor",
                    "type": "EntityDescriptor"
                },
                {
                    "name": "index",
                    "description": "Index",
                    "type": "Index"
                }
            ],
            "class": "IDatabaseEvents",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/INotificationEvents.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "INotificationEvents",
            "module": "Database"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/INotificationEvents.js",
            "line": 58,
            "description": "This is the first method to be called when application is successfully registered with push notification platform service",
            "itemtype": "method",
            "name": "onRegistration",
            "params": [
                {
                    "name": "registration",
                    "description": "Registration",
                    "type": "IRegistration"
                }
            ],
            "class": "INotificationEvents",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/INotificationEvents.js",
            "line": 66,
            "description": "This method is called when application get unregistered on the push notification platform",
            "itemtype": "method",
            "name": "onUnregistration",
            "params": [
                {
                    "name": "registration",
                    "description": "Registration",
                    "type": "IRegistration"
                }
            ],
            "class": "INotificationEvents",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/INotificationEvents.js",
            "line": 74,
            "description": "This method is called when application gets any message/notification from server",
            "itemtype": "method",
            "name": "onNotification",
            "params": [
                {
                    "name": "message",
                    "description": "Message",
                    "type": "IMessage"
                }
            ],
            "class": "INotificationEvents",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/INotificationEvents.js",
            "line": 82,
            "description": "This method is called if there is any error in process of registration/notification",
            "itemtype": "method",
            "name": "onError",
            "params": [
                {
                    "name": "notificationException",
                    "description": "Notification Exception",
                    "type": "NotificationException"
                }
            ],
            "class": "INotificationEvents",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISiminovEvents.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ISiminovEvents",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISiminovEvents.js",
            "line": 59,
            "description": "This event gets fired when SIMINOV is initialize for first time.",
            "itemtype": "method",
            "name": "onFirstTimeSiminovInitialized",
            "class": "ISiminovEvents",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISiminovEvents.js",
            "line": 66,
            "description": "This event gets fired when SIMINOV is initialize.",
            "itemtype": "method",
            "name": "onSiminovInitialized",
            "class": "ISiminovEvents",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISiminovEvents.js",
            "line": 73,
            "description": "This event gets fired when SIMINOV is stopped.",
            "itemtype": "method",
            "name": "onSiminovStopped",
            "class": "ISiminovEvents",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISyncEvents.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ISyncEvents",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISyncEvents.js",
            "line": 57,
            "description": "This method is called then a Sync is started.\nIn this you can initialize resources related to Sync.\nOnce OnStart has finished, Connect will call OnQueue.",
            "itemtype": "method",
            "name": "onStart",
            "params": [
                {
                    "name": "syncRequest",
                    "description": "Sync Request",
                    "type": "ISyncRequest"
                }
            ],
            "class": "ISyncEvents",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISyncEvents.js",
            "line": 67,
            "description": "This method is called then the Sync request is added to the Queue.",
            "itemtype": "method",
            "name": "onQueue",
            "params": [
                {
                    "name": "syncRequest",
                    "description": "Sync Request",
                    "type": "ISyncRequest"
                }
            ],
            "class": "ISyncEvents",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISyncEvents.js",
            "line": 75,
            "description": "This method is called then Sync request completes its all synchronization data with web service.",
            "itemtype": "method",
            "name": "onFinish",
            "params": [
                {
                    "name": "syncRequest",
                    "description": "Sync Request",
                    "type": "ISyncRequest"
                }
            ],
            "class": "ISyncEvents",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISyncEvents.js",
            "line": 83,
            "description": "This method is called if there is any error/exception while synchronizing data with web service",
            "itemtype": "method",
            "name": "onTerminate",
            "params": [
                {
                    "name": "syncRequest",
                    "description": "Sync Request",
                    "type": "ISyncRequest"
                }
            ],
            "class": "ISyncEvents",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/DatabaseException.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "DatabaseException",
            "module": "Events"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/DeploymentException.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "DeploymentException",
            "module": "Exception"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/NotificationException.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "NotificationException",
            "module": "Exception"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/ServiceException.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ServiceException",
            "module": "Exception"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovException.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "SiminovException",
            "module": "Exception"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovException.js",
            "line": 67,
            "description": "Get exception class name.",
            "itemtype": "method",
            "name": "getClassName",
            "return": {
                "description": "Exception Class Name."
            },
            "class": "SiminovException",
            "module": "Exception"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovException.js",
            "line": 78,
            "description": "Set exception class name.",
            "itemtype": "method",
            "name": "setClassName",
            "params": [
                {
                    "name": "className",
                    "description": "Exception Class Name."
                }
            ],
            "class": "SiminovException",
            "module": "Exception"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovException.js",
            "line": 89,
            "description": "Get method Name.",
            "itemtype": "method",
            "name": "getMethodName",
            "return": {
                "description": "Name Of Method."
            },
            "class": "SiminovException",
            "module": "Exception"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovException.js",
            "line": 100,
            "description": "Set method Name.",
            "itemtype": "method",
            "name": "setMethodName",
            "params": [
                {
                    "name": "methodName",
                    "description": "Name Of Method."
                }
            ],
            "class": "SiminovException",
            "module": "Exception"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovException.js",
            "line": 111,
            "description": "Get message.",
            "itemtype": "method",
            "name": "getMessage",
            "return": {
                "description": "Message."
            },
            "class": "SiminovException",
            "module": "Exception"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovException.js",
            "line": 122,
            "description": "Set message.",
            "itemtype": "method",
            "name": "setMessage",
            "params": [
                {
                    "name": "message",
                    "description": "Message."
                }
            ],
            "class": "SiminovException",
            "module": "Exception"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovExceptionHandler.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "SiminovExceptionHandler",
            "module": "Exception"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovExceptionHandler.js",
            "line": 58,
            "description": "Display error to user.",
            "itemtype": "method",
            "name": "display",
            "class": "SiminovExceptionHandler",
            "module": "Exception"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SyncException.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "SyncException",
            "module": "Exception"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Function",
            "module": "Exception"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js",
            "line": 49,
            "description": "Get all properties a given function contain.",
            "itemtype": "method",
            "name": "properties",
            "return": {
                "description": "All function properties",
                "type": "Array"
            },
            "class": "Function",
            "module": "Function"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js",
            "line": 75,
            "description": "Check whether a give function contain provided property or not.",
            "itemtype": "method",
            "name": "containProperties",
            "return": {
                "description": "true/false; TRUE: If it contain property; FALSE: If it does not contain property.",
                "type": "Boolean"
            },
            "class": "Function",
            "module": "Function"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js",
            "line": 103,
            "description": "Get all GET properties a given function contain.",
            "itemtype": "method",
            "name": "getterProperties",
            "return": {
                "description": "All GET Properties",
                "type": "Array"
            },
            "class": "Function",
            "module": "Function"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js",
            "line": 132,
            "description": "Get all SET properties a given function contain.",
            "itemtype": "method",
            "name": "setterProperties",
            "return": {
                "description": "All SET Properties",
                "type": "Array"
            },
            "class": "Function",
            "module": "Function"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js",
            "line": 160,
            "description": "Get name of given function.",
            "itemtype": "method",
            "name": "getObjectName",
            "return": {
                "description": "Name of Function",
                "type": "String"
            },
            "class": "Function",
            "module": "Function"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js",
            "line": 197,
            "description": "It is use to implement inherit parent properties in child.",
            "itemtype": "method",
            "name": "extend",
            "static": 1,
            "class": "Function",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js",
            "line": 221,
            "description": "Create a instance of function.",
            "itemtype": "method",
            "name": "createFunctionInstance",
            "static": 1,
            "return": {
                "description": "Function Instance",
                "type": "Object"
            },
            "class": "Function",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js",
            "line": 240,
            "description": "Create the inner function instances",
            "itemtype": "method",
            "name": "createFunctionInstanceDescend",
            "static": 1,
            "return": {
                "description": "Function Instance",
                "type": "Object"
            },
            "class": "Function",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js",
            "line": 260,
            "description": "Populate data in object by invoking API and passing parameters to it.",
            "itemtype": "method",
            "name": "invokeAndInflate",
            "static": 1,
            "class": "Function",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js",
            "line": 273,
            "description": "Invoke API and get data from object.",
            "itemtype": "method",
            "name": "invokeAndFetch",
            "static": 1,
            "return": {
                "description": "Return object from invoked API",
                "type": "Object"
            },
            "class": "Function",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Log/Log.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Log",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Log/Log.js",
            "line": 61,
            "description": "Log info messages.",
            "itemtype": "method",
            "name": "logi",
            "static": 1,
            "params": [
                {
                    "name": "className",
                    "description": "Class Name."
                },
                {
                    "name": "methodName",
                    "description": "Method Name."
                },
                {
                    "name": "message",
                    "description": "Message."
                }
            ],
            "class": "Log",
            "module": "Log"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Log/Log.js",
            "line": 76,
            "description": "Log error messages.",
            "itemtype": "method",
            "name": "loge",
            "static": 1,
            "params": [
                {
                    "name": "className",
                    "description": "Class Name."
                },
                {
                    "name": "methodName",
                    "description": "Method Name."
                },
                {
                    "name": "message",
                    "description": "Message."
                }
            ],
            "class": "Log",
            "module": "Log"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Log/Log.js",
            "line": 91,
            "description": "Log debug messages.",
            "itemtype": "method",
            "name": "logd",
            "static": 1,
            "params": [
                {
                    "name": "className",
                    "description": "Class Name."
                },
                {
                    "name": "methodName",
                    "description": "Method Name."
                },
                {
                    "name": "message",
                    "description": "Message."
                }
            ],
            "class": "Log",
            "module": "Log"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ApplicationDescriptor",
            "module": "Log"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 136,
            "description": "Get Name of Adapter.",
            "return": {
                "description": "Name of Adapter."
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 144,
            "description": "Set Name of Adapter.",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Adapter."
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 152,
            "description": "Get Description of Adapter.",
            "return": {
                "description": "Description of Adapter."
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 160,
            "description": "Set Description of Adapter.",
            "params": [
                {
                    "name": "description",
                    "description": "Description of Adapter."
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 168,
            "description": "Get Type of Adapter.",
            "return": {
                "description": "Type of Adapter."
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 176,
            "description": "Set Type of Adapter.",
            "params": [
                {
                    "name": "type",
                    "description": "Type of Adapter."
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 184,
            "description": "Get Map To Name.",
            "return": {
                "description": "Map To Name."
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 192,
            "description": "Set Map To Name.",
            "params": [
                {
                    "name": "mapTo",
                    "description": "Map To Name."
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 200,
            "description": "Check whether cache is enabled or disabled.",
            "return": {
                "description": "true/false; TRUE if cache enabled, FALSE if cache disabled."
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 208,
            "description": "Set Cache value.",
            "params": [
                {
                    "name": "cache",
                    "description": "Cache Enabled or Disabled."
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 217,
            "description": "Get All Handler defined in descriptors.",
            "itemtype": "method",
            "name": "getHandlers",
            "return": {
                "description": "All Handlers.",
                "type": "Array"
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 227,
            "description": "Add Handler.",
            "itemtype": "method",
            "name": "getHandlers",
            "params": [
                {
                    "name": "handler",
                    "description": "Handler.",
                    "type": "Handler"
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 237,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 247,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 258,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 269,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 280,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 306,
            "description": "Get Name of Handler.",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "Name of Handler.",
                "type": "String"
            },
            "class": "AdapterDescriptor.Handler",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 316,
            "description": "Set Name of Handler.",
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "name",
                    "description": "Name of handler.",
                    "type": "String"
                }
            ],
            "class": "AdapterDescriptor.Handler",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 327,
            "description": "Get Description about Handler.",
            "itemtype": "method",
            "name": "getDescription",
            "return": {
                "description": "Description about Handler.",
                "type": "String"
            },
            "class": "AdapterDescriptor.Handler",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 337,
            "description": "Set Description about Handler.",
            "itemtype": "method",
            "name": "setDescription",
            "params": [
                {
                    "name": "description",
                    "description": "Description about Handler.",
                    "type": "String"
                }
            ],
            "class": "AdapterDescriptor.Handler",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 347,
            "description": "Get Map To Name.",
            "itemtype": "method",
            "name": "getMapTo",
            "return": {
                "description": "Map To Name.",
                "type": "String"
            },
            "class": "AdapterDescriptor.Handler",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 357,
            "description": "Set Map To Name.",
            "itemtype": "method",
            "name": "setMapTo",
            "params": [
                {
                    "name": "mapTo",
                    "description": "Map To Name.",
                    "type": "String"
                }
            ],
            "class": "AdapterDescriptor.Handler",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 368,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "AdapterDescriptor.Handler",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 378,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "AdapterDescriptor.Handler",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 389,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "AdapterDescriptor.Handler",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 400,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "AdapterDescriptor.Handler",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 411,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "AdapterDescriptor.Handler",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 434,
            "description": "Get Name of Parameter.",
            "itemtype": "method",
            "name": "getDescription",
            "return": {
                "description": "Name of Parameter.",
                "type": "String"
            },
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 444,
            "description": "Set Name of Parameter.",
            "itemtype": "method",
            "name": "setDescription",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Parameter.",
                    "type": "String"
                }
            ],
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 454,
            "description": "Get Type of Parameter.",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "Type of Parameter.",
                "type": "String"
            },
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 464,
            "description": "Get Type of Parameter.",
            "itemtype": "method",
            "name": "setType",
            "params": [
                {
                    "name": "type",
                    "description": "Type of Parameter.",
                    "type": "String"
                }
            ],
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 475,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 485,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 496,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 507,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 518,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 531,
            "description": "Exposes methods to GET and SET Return information as per define in AdapterDescriptor.xml file or in standalone adapter xml file in application.",
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 539,
            "description": "Get Description about Return.",
            "itemtype": "method",
            "name": "getDescription",
            "return": {
                "description": "Description about Return.",
                "type": "String"
            },
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 549,
            "description": "Set Description about Return.",
            "itemtype": "method",
            "name": "setDescription",
            "params": [
                {
                    "name": "description",
                    "description": "Description about Return.",
                    "type": "String"
                }
            ],
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 559,
            "description": "Get Type of Return.",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "Type of Return.",
                "type": "String"
            },
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 569,
            "description": "Set Type of Return.",
            "itemtype": "method",
            "name": "setType",
            "params": [
                {
                    "name": "type",
                    "description": "Type of Return.",
                    "type": "String"
                }
            ],
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 579,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 589,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 600,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 611,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js",
            "line": 622,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "AdapterDescriptor.Handler.Parameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 86,
            "description": "Get Application Descriptor Name as per defined in ApplicationDescriptor.xml file.",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "Application Descriptor Name.",
                "type": "String"
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 96,
            "description": "Set Application Descriptor Name as per defined in ApplicationDescriptor.xml file.",
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Application Descriptor.",
                    "type": "String"
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 106,
            "description": "Set Description of Application as per defined in ApplicationDescriptor.xml file.",
            "itemtype": "method",
            "name": "getDescription",
            "return": {
                "description": "Description of application.",
                "type": "String"
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 116,
            "description": "Set Description of Application as per defined in ApplicationDescriptor.xml file.",
            "itemtype": "method",
            "name": "setDescription",
            "params": [
                {
                    "name": "description",
                    "description": "Description of application.",
                    "type": "String"
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 126,
            "description": "Get Version of Application as per defined in ApplicationDescriptor.xml file.",
            "itemtype": "method",
            "name": "getVersion",
            "return": {
                "description": "Version of application.",
                "type": "String"
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 136,
            "description": "Set Version of Application as per defined in ApplicationDescriptor.xml file.",
            "itemtype": "method",
            "name": "setVersion",
            "params": [
                {
                    "name": "version",
                    "description": "Version of application.",
                    "type": "String"
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 156,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 167,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 179,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 191,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 203,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 214,
            "description": "Add Database Descriptor path as per contained in ApplicationDescriptor.xml file.",
            "itemtype": "method",
            "name": "addDatabaseDescriptorPath",
            "params": [
                {
                    "name": "databaseDescriptorPath",
                    "description": "DatabaseDescriptor path.",
                    "type": "String"
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 224,
            "description": "Get all database descriptor paths as per contained in ApplicationDescriptor.xml file.",
            "itemtype": "method",
            "name": "getDatabaseDescriptorPaths",
            "return": {
                "description": "It which contains all database descriptor paths.",
                "type": "Array"
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 234,
            "description": "Get all event handlers as per defined in ApplicationDescriptor.xml file.",
            "itemtype": "method",
            "name": "getEvents",
            "return": {
                "description": "All event handlers defined in ApplicationDescriptor.xml file",
                "type": "Array"
            },
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js",
            "line": 244,
            "description": "Add event as per defined in ApplicationDescriptor.xml file.",
            "itemtype": "method",
            "name": "addEvent",
            "params": [
                {
                    "name": "event",
                    "description": "Event Handler class name.",
                    "type": "String"
                }
            ],
            "class": "ApplicationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 102,
            "description": "Get database descriptor name as defined in DatabaseDescriptor.xml file.",
            "itemtype": "method",
            "name": "getDatabaseName",
            "return": {
                "description": "Database Descriptor Name.",
                "type": "String"
            },
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 112,
            "description": "Set database descriptor name as per defined in DatabaseDescriptor.xml file.",
            "itemtype": "method",
            "name": "setDatabaseName",
            "params": [
                {
                    "name": "databaseName",
                    "description": "Database Descriptor Name.",
                    "type": "String"
                }
            ],
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 122,
            "description": "Get description as per defined in DatabaseDescriptor.xml file.",
            "itemtype": "method",
            "name": "getDescription",
            "return": {
                "description": "Description defined in DatabaseDescriptor.xml file.",
                "type": "String"
            },
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 132,
            "description": "Set description as per defined in DatabaseDescritor.xml file.",
            "itemtype": "method",
            "name": "setDescription",
            "params": [
                {
                    "name": "description",
                    "description": "Description defined in DatabaseDescriptor.xml file.",
                    "type": "String"
                }
            ],
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 151,
            "description": "Set database locking as per defined in DatabaseDescriptor.xml file.",
            "itemtype": "method",
            "name": "setLockingRequired",
            "params": [
                {
                    "name": "isLockingRequired",
                    "description": "(true/false) database locking as per defined in DatabaseDescriptor.xml file.",
                    "type": "Boolean"
                }
            ],
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 161,
            "description": "Check whether database transactions to make multi-threading safe or not.",
            "itemtype": "method",
            "name": "isLockingRequired",
            "return": {
                "description": "(true/false) TRUE: If locking is required as per defined in DatabaseDescriptor.xml file, FALSE: If locking is not required as per defined in DatabaseDescriptor.xml file.",
                "type": "Boolean"
            },
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 171,
            "description": "Set the external storage value as per defined in DatabaseDescriptor.xml file.",
            "itemtype": "method",
            "name": "setExternalStorage",
            "params": [
                {
                    "name": "isExternalStorageEnable",
                    "description": "(true/false) External Storage Enable Or Not.",
                    "type": "Boolean"
                }
            ],
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 181,
            "description": "Check whether database needs to be stored on SDCard or not.",
            "itemtype": "method",
            "name": "isExternalStorage",
            "return": {
                "description": "(true/false) TRUE: If external_storage defined as true in DatabaseDescriptor.xml file, FALSE: If external_storage defined as false in DatabaseDescritor.xml file.",
                "type": "Boolean"
            },
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 192,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 203,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 215,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 227,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 239,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 250,
            "description": "Get all entity descriptor paths as per defined in EntityDescriptor.xml file.",
            "itemtype": "method",
            "name": "getEntityDescriptorPaths",
            "return": {
                "description": "It contain all entity descriptor paths.",
                "type": "Array"
            },
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js",
            "line": 260,
            "description": "Add entity descriptor path as per defined in DatabaseDescriptor.xml file.\n\t\n\t\tEXAMPLE:\n\t\t\t<database-descriptor>\n\t\t\t\t<entity-descriptor>\n\t\t\t\t\t<entity-descriptor>Entity-Descriptors/Book.xml</entity-descriptor>\n\t\t\t\t\t<entity-descriptor>Entity-Descriptors/Lession.xml</entity-descriptor>\n\t\t\t\t</entity-descriptor>\n\t\t\t</database-descriptor>",
            "itemtype": "method",
            "name": "addEntityDescriptorPath",
            "params": [
                {
                    "name": "entityPath",
                    "description": "Entity Descriptor Path."
                }
            ],
            "class": "DatabaseDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "EntityDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 180,
            "description": "Get table name.",
            "itemtype": "method",
            "name": "getTableName",
            "return": {
                "description": "Name of table.",
                "type": "String"
            },
            "class": "EntityDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 190,
            "description": "Set table name as per defined in EntityDescriptor.xml file.",
            "itemtype": "method",
            "name": "setTableName",
            "params": [
                {
                    "name": "tableName",
                    "description": "Name of table."
                }
            ],
            "class": "EntityDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 200,
            "description": "Get Function class name.",
            "itemtype": "method",
            "name": "getClassName",
            "return": {
                "description": "Mapped class name.",
                "type": "String"
            },
            "class": "EntityDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 210,
            "description": "Set Function class name as per defined in EntityDescriptor.xml file.",
            "itemtype": "method",
            "name": "setClassName",
            "params": [
                {
                    "name": "className",
                    "description": "Mapped class name.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 220,
            "description": "Get all columns.",
            "itemtype": "method",
            "name": "getColumns",
            "return": {
                "description": "All columns.",
                "type": "Array"
            },
            "class": "EntityDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 230,
            "description": "Add column to EntityDescriptor object.",
            "itemtype": "method",
            "name": "addColumn",
            "params": [
                {
                    "name": "column",
                    "description": "Column object.",
                    "type": "Column"
                }
            ],
            "class": "EntityDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 240,
            "description": "Get all indexes.",
            "itemtype": "method",
            "name": "getIndexes",
            "return": {
                "description": "It contain all indexes.",
                "type": "Array"
            },
            "class": "EntityDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 250,
            "description": "Add index to EntityDescriptor object.",
            "itemtype": "method",
            "name": "addIndex",
            "params": [
                {
                    "name": "index",
                    "description": "Index object.",
                    "type": "Index"
                }
            ],
            "class": "EntityDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 260,
            "description": "Get iterator of relationship objects.",
            "itemtype": "method",
            "name": "getRelationship",
            "return": {
                "description": "Relationship objects.",
                "type": "Array"
            },
            "class": "EntityDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 270,
            "description": "Add relationship object.",
            "itemtype": "method",
            "name": "addRelationship",
            "params": [
                {
                    "name": "relationship",
                    "description": "Relationship object.",
                    "type": "Relationship"
                }
            ],
            "class": "EntityDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 306,
            "description": "Get variable name.",
            "itemtype": "method",
            "name": "getVariableName",
            "return": {
                "description": "Variable Name",
                "type": "String"
            },
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 316,
            "description": "Set variable name as per defined in EntityDescriptor.core.xml file.",
            "itemtype": "method",
            "name": "setVariableName",
            "params": [
                {
                    "name": "variableName",
                    "description": "Name of variable.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 326,
            "description": "Get column name.",
            "itemtype": "method",
            "name": "getColumnName",
            "return": {
                "description": "Name Of Column.",
                "type": "String"
            },
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 336,
            "description": "Set column name as per defined in EntityDescriptor.core.xml file.",
            "itemtype": "method",
            "name": "setColumnName",
            "params": [
                {
                    "name": "columnName",
                    "description": "Name of column name.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 346,
            "description": "Get type of column.",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "Type of column.",
                "type": "String"
            },
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 356,
            "description": "Set type of column as per defined in EntityDescriptor.core.xml file.",
            "itemtype": "method",
            "name": "setType",
            "params": [
                {
                    "name": "type",
                    "description": "Type of column.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 366,
            "description": "Get check constraint of column.",
            "itemtype": "method",
            "name": "getCheck",
            "return": {
                "description": "Check constraint of column.",
                "type": "String"
            },
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 376,
            "description": "Set check constraint of column as per defined in EntityDescriptor.core.xml file.",
            "itemtype": "method",
            "name": "setCheck",
            "params": [
                {
                    "name": "check",
                    "description": "Check constraint.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 386,
            "description": "Get default value of column.",
            "itemtype": "method",
            "name": "getDefaultValue",
            "return": {
                "description": "Default value of column."
            },
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 396,
            "description": "Set default value of column as per defined in EntityDescriptor.core.xml file.",
            "itemtype": "method",
            "name": "setDefaultValue",
            "params": [
                {
                    "name": "defaultValue",
                    "description": "Default value of column.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 406,
            "description": "Set column as primary key or not.",
            "itemtype": "method",
            "name": "setPrimary",
            "params": [
                {
                    "name": "primaryKey",
                    "description": "(true/false) TRUE: If column is primary key, FALSE: If column is not primary key.",
                    "type": "Boolean"
                }
            ],
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 416,
            "description": "Check whether column is primary key.",
            "itemtype": "method",
            "name": "isPrimaryKey",
            "return": {
                "description": "(true/false) TRUE: If column is primary key, FALSE: If column is not primary key.",
                "type": "Boolean"
            },
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 426,
            "description": "Set whether column can be null or not.",
            "itemtype": "method",
            "name": "setNotNull",
            "params": [
                {
                    "name": "isNotNull",
                    "description": "(true/false) TRUE: If column value can be null, FALSE: If column value can not be null.",
                    "type": "Boolean"
                }
            ],
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 436,
            "description": "Check whether column value can be not or not.",
            "itemtype": "method",
            "name": "isNotNull",
            "return": {
                "description": "(true/false) TRUE: If column value can be null, FALSE: If column value can not be null.",
                "type": "Boolean"
            },
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 446,
            "description": "Set whether column is unique or not.",
            "itemtype": "method",
            "name": "setUnique",
            "params": [
                {
                    "name": "isUnique",
                    "description": "(true/false) TRUE: If column is unique, FALSE: If column is not unique",
                    "type": "Boolean"
                }
            ],
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 456,
            "description": "Check whether column is unique or not.",
            "itemtype": "method",
            "name": "isUnique",
            "return": {
                "description": "(true/false) TRUE: If column is unique, FALSE: If column is not unique.",
                "type": "Boolean"
            },
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 467,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 478,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 490,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 502,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 514,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Attribute",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 549,
            "description": "Get index name.",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "Index Name.",
                "type": "String"
            },
            "class": "EntityDescriptor.Index",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 559,
            "description": "Set index name as per defined in EntityDescriptor.core.xml file.",
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "name",
                    "description": "Index Name.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Index",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 569,
            "description": "Set whether unqiue is unique or not.",
            "itemtype": "method",
            "name": "setUnique",
            "params": [
                {
                    "name": "unique",
                    "description": "(true/false) TRUE: If index is unique, FALSE: If index is not unique.",
                    "type": "Boolean"
                }
            ],
            "class": "EntityDescriptor.Index",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 579,
            "description": "Check whether index should be unique or not.",
            "itemtype": "method",
            "name": "isUnique",
            "return": {
                "description": "(true/false) TRUE: If index is unique, FALSE: If index is not unqiue.",
                "type": "Boolean"
            },
            "class": "EntityDescriptor.Index",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 592,
            "description": "Get all columns.",
            "itemtype": "method",
            "name": "getColumns",
            "return": {
                "description": "It contain all columns.",
                "type": "Array"
            },
            "class": "EntityDescriptor.Index",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 602,
            "description": "Add column to index.",
            "itemtype": "method",
            "name": "addColumn",
            "params": [
                {
                    "name": "column",
                    "description": "Name of column.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Index",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 653,
            "description": "Get relationship type.",
            "itemtype": "method",
            "name": "getRelationshipType",
            "return": {
                "description": "Type of relationship.",
                "type": "String"
            },
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 663,
            "description": "Set relationship type.",
            "itemtype": "method",
            "name": "setRelationshipType",
            "params": [
                {
                    "name": "relationshipType",
                    "description": "Type of relationship.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 673,
            "description": "Get refer.",
            "itemtype": "method",
            "name": "getRefer",
            "return": {
                "description": "Name of refer.",
                "type": "String"
            },
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 683,
            "description": "Set refer.",
            "itemtype": "method",
            "name": "setRefer",
            "params": [
                {
                    "name": "refer",
                    "description": "Name of refer.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 693,
            "description": "Get refer to.",
            "itemtype": "method",
            "name": "getReferTo",
            "return": {
                "description": "Name of refer to.",
                "type": "String"
            },
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 703,
            "description": "Set refer to.",
            "itemtype": "method",
            "name": "setReferTo",
            "params": [
                {
                    "name": "referTo",
                    "description": "Name of refer to.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 713,
            "description": "Get on update.",
            "itemtype": "method",
            "name": "getOnUpdate",
            "return": {
                "description": "Action on update.",
                "type": "String"
            },
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 723,
            "description": "Set on update.",
            "itemtype": "method",
            "name": "setOnUpdate",
            "params": [
                {
                    "name": "onUpdate",
                    "description": "Action on update.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 733,
            "description": "Get on delete.",
            "itemtype": "method",
            "name": "getOnDelete",
            "return": {
                "description": "Action on delete.",
                "type": "String"
            },
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 743,
            "description": "Set on delete.",
            "itemtype": "method",
            "name": "setOnDelete",
            "params": [
                {
                    "name": "onDelete",
                    "description": "Action on delete.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 753,
            "description": "Get getter refer method name.",
            "itemtype": "method",
            "name": "getGetterReferMethodName",
            "return": {
                "description": "Getter refer method name.",
                "type": "String"
            },
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 763,
            "description": "Set getter refer method name.",
            "itemtype": "method",
            "name": "setGetterReferMethodName",
            "params": [
                {
                    "name": "getterReferMethodName",
                    "description": "Name of getter refer method name.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 773,
            "description": "Get setter refer method name.",
            "itemtype": "method",
            "name": "getSetterReferMethodName",
            "return": {
                "description": "Name of setter refer method name.",
                "type": "String"
            },
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 783,
            "description": "Set setter refer method name.",
            "itemtype": "method",
            "name": "setSetterReferMethodName",
            "params": [
                {
                    "name": "setterReferMethodName",
                    "description": "Name of setter refer name.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 793,
            "description": "Set load property value.",
            "itemtype": "method",
            "name": "setLoad",
            "params": [
                {
                    "name": "load",
                    "description": "(true/false) TRUE: If load property value is true; FALSE: If load property value is false.",
                    "type": "Boolean"
                }
            ],
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 803,
            "description": "Check whether load property value is set to TRUE/FASLE.",
            "itemtype": "method",
            "name": "isLoad",
            "return": {
                "description": "(true/false) TRUE: If load property value is set to true; FALSE: If load property value is set to false.",
                "type": "Boolean"
            },
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 814,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 825,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 837,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 849,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js",
            "line": 861,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "EntityDescriptor.Relationship",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/HybridSiminovDatas.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 123,
            "description": "Get library name.",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "Name of Library",
                "type": "String"
            },
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 133,
            "description": "Set library name as per defined in LibraryDescriptor.xml",
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Library",
                    "type": "String"
                }
            ],
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 143,
            "description": "Get descriptor as per defined in LibraryDescriptor.xml",
            "itemtype": "method",
            "name": "getDescription",
            "return": {
                "description": "Description of Library",
                "type": "String"
            },
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 153,
            "description": "Set description as per defined in LibraryDescritor.core.xml",
            "itemtype": "method",
            "name": "setDescription",
            "params": [
                {
                    "name": "descriptor",
                    "description": "Description of Library",
                    "type": "String"
                }
            ],
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 164,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 175,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 187,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 199,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 211,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 222,
            "description": "Get all entity descriptor paths as per defined in DatabaseDescriptor.xml file.",
            "itemtype": "method",
            "name": "getEntityDescriptorPaths",
            "return": {
                "description": "It contain all entity paths.",
                "type": "Array"
            },
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 232,
            "description": "Add entity path as per defined in DatabaseDescriptor.xml file.\n\t\n\t\tEXAMPLE:\n\t\t\t<database-descriptor>\n\t\t\t\t<entity-descriptors>\n\t\t\t\t\t<entity-descriptor>Entity-Descriptors/Book.xml</entity-descriptor>\n\t\t\t\t\t<entity-descriptor>Entity-Descriptors/Lession.xml</entity-descriptor>\n\t\t\t\t</entity-descriptors>\n\t\t\t</database-descriptor>",
            "itemtype": "method",
            "name": "addEntityDescriptorPath",
            "params": [
                {
                    "name": "entityDescriptorPath",
                    "description": "Entity Descriptor Path.",
                    "type": "String"
                }
            ],
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 252,
            "description": "Get all service descriptor paths",
            "itemtype": "method",
            "name": "getServiceDescriptorPaths",
            "return": {
                "description": "Service Descriptor Paths",
                "type": "Array"
            },
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 262,
            "description": "Add service descriptor path",
            "itemtype": "method",
            "name": "addServiceDescriptorPath",
            "params": [
                {
                    "name": "serviceDescriptorPath",
                    "description": "Service descriptor path",
                    "type": "String"
                }
            ],
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 272,
            "description": "Get all adapter descriptor paths",
            "itemtype": "method",
            "name": "getAdapterDescriptorPaths",
            "params": [
                {
                    "name": "Adapter",
                    "description": "Descriptor Paths",
                    "type": "Array"
                }
            ],
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js",
            "line": 282,
            "description": "Get adapter descriptor path",
            "itemtype": "method",
            "name": "getAdapterDescriptorPath",
            "params": [
                {
                    "name": "adapterDescriptorPath",
                    "description": "Adapter Descriptor Path",
                    "type": "String"
                }
            ],
            "class": "LibraryDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/NotificationDescriptor.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "NotificationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/NotificationDescriptor.js",
            "line": 163,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "NotificationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/NotificationDescriptor.js",
            "line": 174,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "NotificationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/NotificationDescriptor.js",
            "line": 186,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "NotificationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/NotificationDescriptor.js",
            "line": 198,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "NotificationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/NotificationDescriptor.js",
            "line": 210,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "NotificationDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 153,
            "description": "Get service name",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "Name of service",
                "type": "String"
            },
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 163,
            "description": "Set service name",
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "name",
                    "description": "Name of service",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 174,
            "description": "Get description",
            "itemtype": "method",
            "name": "setDescription",
            "return": {
                "description": "Description",
                "type": "String"
            },
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 184,
            "description": "Set description",
            "itemtype": "method",
            "name": "setDescription",
            "params": [
                {
                    "name": "description",
                    "description": "Description",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 194,
            "description": "Get protocol",
            "itemtype": "method",
            "name": "getProtocol",
            "return": {
                "description": "Protocol",
                "type": "String"
            },
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 204,
            "description": "Set protocol",
            "itemtype": "method",
            "name": "setProtocol",
            "params": [
                {
                    "name": "protocol",
                    "description": "Protocol",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 214,
            "description": "Get instance",
            "itemtype": "method",
            "name": "getInstance",
            "return": {
                "description": "Instance",
                "type": "String"
            },
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 224,
            "description": "Set instance",
            "itemtype": "method",
            "name": "setInstance",
            "params": [
                {
                    "name": "instance",
                    "description": "Instance",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 234,
            "description": "Get port",
            "itemtype": "method",
            "name": "getPort",
            "return": {
                "description": "Port",
                "type": "String"
            },
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 245,
            "description": "Set port",
            "itemtype": "method",
            "name": "setPort",
            "params": [
                {
                    "name": "port",
                    "description": "Port",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 255,
            "description": "Get context",
            "itemtype": "method",
            "name": "getContext",
            "return": {
                "description": "Context",
                "type": "String"
            },
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 265,
            "description": "Set context",
            "itemtype": "method",
            "name": "setContext",
            "params": [
                {
                    "name": "context",
                    "description": "Context",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 275,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 286,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 298,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 310,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 322,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 333,
            "description": "Get all requests",
            "itemtype": "method",
            "name": "getRequests",
            "return": {
                "description": "Requests"
            },
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 343,
            "description": "Add request",
            "itemtype": "method",
            "name": "addRequest",
            "params": [
                {
                    "name": "request",
                    "description": "Request",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 432,
            "description": "Get request name",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "Name of request",
                "type": "String"
            },
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 442,
            "description": "Set request name",
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "name",
                    "description": "Name of request",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 452,
            "description": "Get type of request",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "Get request type",
                "type": "String"
            },
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 462,
            "description": "Set type of request",
            "itemtype": "method",
            "name": "setType",
            "params": [
                {
                    "name": "type",
                    "description": "Request Type",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 472,
            "description": "Get API of request",
            "itemtype": "method",
            "name": "getApi",
            "return": {
                "description": "Api",
                "type": "String"
            },
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 482,
            "description": "Set request api",
            "itemtype": "method",
            "name": "setApi",
            "params": [
                {
                    "name": "api",
                    "description": "API",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 492,
            "description": "Get handler of request",
            "itemtype": "method",
            "name": "getHandler",
            "return": {
                "description": "Handler",
                "type": "String"
            },
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 502,
            "description": "Set handler of request",
            "itemtype": "method",
            "name": "setHandler",
            "params": [
                {
                    "name": "handler",
                    "description": "Handler",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 512,
            "description": "Get mode of request",
            "itemtype": "method",
            "name": "getMode",
            "return": {
                "description": "Mode",
                "type": "String"
            },
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 522,
            "description": "Set mode of request",
            "itemtype": "method",
            "name": "setMode",
            "params": [
                {
                    "name": "mode",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 532,
            "description": "Get data stream",
            "itemtype": "method",
            "name": "getDataStream",
            "return": {
                "description": "Data Stream",
                "type": "String"
            },
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 542,
            "description": "Set data stream",
            "itemtype": "method",
            "name": "setDataStream",
            "params": [
                {
                    "name": "val",
                    "description": "Data Stream",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 553,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 564,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 576,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 588,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 600,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 610,
            "description": "Get all query parameters",
            "itemtype": "method",
            "name": "getQueryParameters",
            "return": {
                "description": "Query Parameters",
                "type": "Array"
            },
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 620,
            "description": "Add query parameter",
            "itemtype": "method",
            "name": "addQueryParameter",
            "params": [
                {
                    "name": "queryParameter",
                    "description": "",
                    "type": "ServiceDescriptor.Request.QueryParameter"
                }
            ],
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 630,
            "description": "Get all header parameters",
            "itemtype": "method",
            "name": "getHeaderParameters",
            "return": {
                "description": "Header Parameters",
                "type": "Array"
            },
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 640,
            "description": "Add header parameter",
            "itemtype": "method",
            "name": "addHeaderParameter",
            "params": [
                {
                    "name": "headerParameters",
                    "description": "",
                    "type": "ServiceDescriptor.Request.HeaderParameter"
                }
            ],
            "class": "ServiceDescriptor.Request",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 685,
            "description": "Get name of query parameter",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "Name of Query Parameter",
                "type": "String"
            },
            "class": "ServiceDescriptor.Request.QueryParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 695,
            "description": "Set name of query parameter",
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "val",
                    "description": "Name of query parameter",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request.QueryParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 705,
            "description": "Get value of query parameter",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "Value of Query Parameter",
                "type": "String"
            },
            "class": "ServiceDescriptor.Request.QueryParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 715,
            "description": "Set value of query parameter",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "val",
                    "description": "Value of Query Parameter",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request.QueryParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 726,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "ServiceDescriptor.Request.QueryParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 737,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "ServiceDescriptor.Request.QueryParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 749,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "ServiceDescriptor.Request.QueryParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 761,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request.QueryParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 773,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request.QueryParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 818,
            "description": "Get name of header parameter",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "Name of Header Parameter",
                "type": "String"
            },
            "class": "ServiceDescriptor.Request.HeaderParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 828,
            "description": "Set name of header parameter",
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "val",
                    "description": "Name of Header Parameter",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request.HeaderParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 838,
            "description": "Get value of header parameter",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "Value of Header Parameter",
                "type": "String"
            },
            "class": "ServiceDescriptor.Request.HeaderParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 848,
            "description": "Set value of header parameter",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "val",
                    "description": "Value of Header Parameter",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request.HeaderParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 859,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "ServiceDescriptor.Request.HeaderParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 870,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "ServiceDescriptor.Request.HeaderParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 882,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "ServiceDescriptor.Request.HeaderParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 894,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request.HeaderParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js",
            "line": 906,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "ServiceDescriptor.Request.HeaderParameter",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "SyncDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "line": 86,
            "description": "Get name of sync descriptor",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "Name of sync descriptor",
                "type": "String"
            },
            "class": "SyncDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "line": 96,
            "description": "Set name of sync descriptor",
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "name",
                    "description": "Name of sync descriptor",
                    "type": "String"
                }
            ],
            "class": "SyncDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "line": 106,
            "description": "Get sync interval",
            "itemtype": "method",
            "name": "getSyncInterval",
            "return": {
                "description": "Sync Interval",
                "type": "String"
            },
            "class": "SyncDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "line": 116,
            "description": "Set sync interval",
            "itemtype": "method",
            "name": "setSyncInterval",
            "params": [
                {
                    "name": "syncInterval",
                    "description": "Sync Interval",
                    "type": "String"
                }
            ],
            "class": "SyncDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "line": 127,
            "description": "Get all Properties defined in descriptor.",
            "itemtype": "method",
            "name": "getProperties",
            "return": {
                "description": "All Property Values.",
                "type": "Array"
            },
            "class": "SyncDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "line": 138,
            "description": "Get Property based on name provided.",
            "itemtype": "method",
            "name": "getProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Property value.",
                "type": "String"
            },
            "class": "SyncDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "line": 150,
            "description": "Check whether Property exist or not.",
            "itemtype": "method",
            "name": "containProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true/false, TRUE if property exist, FALSE if property does not exist.",
                "type": "Boolean"
            },
            "class": "SyncDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "line": 162,
            "description": "Add Property in property pool.",
            "itemtype": "method",
            "name": "addProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value of Property.",
                    "type": "String"
                }
            ],
            "class": "SyncDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "line": 174,
            "description": "Remove Property from property pool.",
            "itemtype": "method",
            "name": "removeProperty",
            "params": [
                {
                    "name": "name",
                    "description": "Name of Property.",
                    "type": "String"
                }
            ],
            "class": "SyncDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "line": 184,
            "description": "Get all service descriptor names",
            "itemtype": "method",
            "name": "getServices",
            "return": {
                "description": "Name of Services",
                "type": "Array"
            },
            "class": "SyncDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js",
            "line": 194,
            "description": "Add service",
            "itemtype": "method",
            "name": "addService",
            "params": [
                {
                    "name": "service",
                    "description": "Name of Service",
                    "type": "String"
                }
            ],
            "class": "SyncDescriptor",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Message.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Message",
            "module": "Model"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Message.js",
            "line": 57,
            "description": "Get notification message",
            "itemtype": "method",
            "name": "getMessage",
            "return": {
                "description": "Notification Message",
                "type": "String"
            },
            "class": "Message",
            "module": "Notification"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Message.js",
            "line": 67,
            "description": "Set notification message",
            "itemtype": "method",
            "name": "setMessage",
            "params": [
                {
                    "name": "value",
                    "description": "Notification Message",
                    "type": "String"
                }
            ],
            "class": "Message",
            "module": "Notification"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/NotificationManager.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "NotificationManager",
            "module": "Notification"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/NotificationManager.js",
            "line": 58,
            "description": "It provides singleton instance of Notification Manager",
            "return": {
                "description": "NotificationManager singleton instance"
            },
            "class": "NotificationManager",
            "module": "Notification"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/NotificationManager.js",
            "line": 77,
            "description": "It executes the registration process of push notification",
            "itemtype": "method",
            "name": "doRegistration",
            "class": "NotificationManager",
            "module": "Notification"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/NotificationManager.js",
            "line": 112,
            "description": "It executes the registration process asynchronous of push notification",
            "itemtype": "method",
            "name": "doRegistrationAsync",
            "class": "NotificationManager",
            "module": "Notification"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/NotificationManager.js",
            "line": 121,
            "description": "It executes the unregistration process of push notification",
            "itemtype": "method",
            "name": "doUnregistration",
            "class": "NotificationManager",
            "module": "Notification"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/NotificationManager.js",
            "line": 157,
            "description": "It executes the unregistration process of asynchronous push notification",
            "itemtype": "method",
            "name": "doUnregistrationAsync",
            "class": "NotificationManager",
            "module": "Notification"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Registration.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Registration",
            "module": "Notification"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Registration.js",
            "line": 57,
            "description": "Get registration id",
            "itemtype": "method",
            "name": "getRegistrationId",
            "return": {
                "description": "Registration id",
                "type": "String"
            },
            "class": "Registration",
            "module": "Notification"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Registration.js",
            "line": 67,
            "description": "Set registration id",
            "itemtype": "method",
            "name": "setRegistrationId",
            "params": [
                {
                    "name": "val",
                    "description": "Registration Id",
                    "type": "String"
                }
            ],
            "class": "Registration",
            "module": "Notification"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/ReaderWriter/SIDatasHelper.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "SIDatasHelper",
            "module": "Notification"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/ReaderWriter/SIDatasHelper.js",
            "line": 62,
            "description": "Convert SI Datas to Models.",
            "itemtype": "method",
            "name": "toModels",
            "static": 1,
            "class": "SIDatasHelper",
            "module": "Parser"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/ReaderWriter/SIDatasHelper.js",
            "line": 86,
            "description": "Convert SI Data to Model",
            "itemtype": "method",
            "name": "toModel",
            "static": 1,
            "class": "SIDatasHelper",
            "module": "Parser"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/ReaderWriter/SIDatasHelper.js",
            "line": 175,
            "description": "Convert Model to SI Datas",
            "class": "SIDatasHelper",
            "module": "Parser"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/ReaderWriter/SIDatasHelper.js",
            "line": 189,
            "description": "Convert Model to SI Data",
            "class": "SIDatasHelper",
            "module": "Parser"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Resources",
            "module": "Parser"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 83,
            "description": "Get Application Descriptor object of application.",
            "itemtype": "method",
            "name": "getApplicationDescriptor",
            "return": {
                "description": "Application Descriptor.",
                "type": "ApplicationDescriptor"
            },
            "class": "Resources",
            "module": "Resource"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 129,
            "description": "Get Application Descriptor object asynchronous of application.\n\n    - Using Transaction\n\n        var callback = new Callback();\n        callback.onExecute = function(transaction) {\n\n            var getApplicationDescriptorCallback = new Callback();\n            getApplicationDescriptorCallback.onSuccess = function(applicationDescriptor) {\n\n            }\n\n            ResourceManager.getInstance().getApplicationDescriptorAsync(getApplicationDescriptorCallback, transaction);\n        }\n\n        callback.onSuccess = function() {\n\n        }\n\n        var databaseDescriptor = new Book().getDatabaseDescriptor();\n        Database.beginTransactionAsync(databaseDescriptor, callback);\n\n\n    - Using Callback\n\n        var callback = new Callback();\n        callback.onSuccess = function(applicationDescriptor) {\n\n        }\n\n\n        var resourceManager = ResourceManager.getInstance();\n        resourceManager.getApplicationDescriptorAsync(callback);",
            "itemtype": "method",
            "name": "getApplicationDescriptorAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Resources",
            "module": "Resource"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 174,
            "description": "Get Database Descriptor based on database descriptor name provided as per defined in Database Descriptor file.\n\t\t\t\t\nExample:\n\n    var resourceManager = ResourceManager.getInstance();\n    resourceManager.getDatabaseDescriptor('database_name');",
            "itemtype": "method",
            "name": "getDatabaseDescriptor",
            "params": [
                {
                    "name": "databaseDescriptorName",
                    "description": "Database Descriptor object based on database descriptor name provided."
                }
            ],
            "return": {
                "description": "Database Descriptor",
                "type": "DatabaseDescriptor"
            },
            "class": "Resources",
            "module": "Resource"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 222,
            "description": "Get Database Descriptor object asynchronous of application.\n\n    - Using Transaction\n\n        var callback = new Callback();\n        callback.onExecute = function(transaction) {\n\n            var getDatabaseDescriptorCallback = new Callback();\n            getDatabaseDescriptorCallback.onSuccess = function(databaseDescriptor) {\n\n            }\n\n            ResourceManager.getInstance().getDatabaseDescriptorAsync(getDatabaseDescriptorCallback, transaction);\n        }\n\n        callback.onSuccess = function() {\n\n        }\n\n        var databaseDescriptor = new Book().getDatabaseDescriptor();\n        Database.beginTransactionAsync(databaseDescriptor, callback);\n\n\n    - Using Callback\n\n        var callback = new Callback();\n        callback.onSuccess = function(applicationDescriptor) {\n\n        }\n\n\n        var resourceManager = ResourceManager.getInstance();\n        resourceManager.getDatabaseDescriptorAsync(callback);",
            "itemtype": "method",
            "name": "getDatabaseDescriptorAsync",
            "params": [
                {
                    "name": "databaseName",
                    "description": "Name of database",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Resources",
            "module": "Resource"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 268,
            "description": "Get Database Descriptor based on Hybrid model class name.\n\n            var resourceManager = ResourceManager.getInstance();\n            var databaseDescriptor = resourceManager.getDatabaseDescriptorBasedOnClassName('Book');",
            "itemtype": "method",
            "name": "getDatabaseDescriptorBasedOnClassName",
            "params": [
                {
                    "name": "className",
                    "description": "Name of class",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Database Descriptor",
                "type": "DatabaseDescriptor"
            },
            "class": "Resources",
            "module": "Resource"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 341,
            "description": "Get Database Descriptor based on Hybrid model class name.\n\n    - Using Transaction\n\n        var callback = new Callback();\n        callback.onExecute = function() {\n\n            var getDatabaseDescriptorCallback = new Callback();\n            getDatabaseDescriptorCallback.onSuccess = function(databaseDescriptor) {\n\n            }\n\n            var resourceManager = ResourceManager.getInstance();\n            resourceManager.getDatabaseDescriptorBasedOnClassNameAsync(getDatabaseDescriptorCallback, transaction);\n        }\n\n        callback.onSuccess = function() {\n\n        }\n\n        var databaseDescriptor = new Book().getDatabaseDescriptor();\n        Database.beginTransactionAsync(databaseDescriptor, callback);\n\n    - Using Callback\n\n        var callback = new Callback();\n        callback.onSuccess = function(databaseDescriptor) {\n\n        }\n\n        var resourceManager = ResourceManager.getInstance();\n        resourceManager.getDatabaseDescriptorBasedOnClassNameAsync(callback);",
            "itemtype": "method",
            "name": "getDatabaseDescriptorBasedOnClassNameAsync",
            "params": [
                {
                    "name": "databaseName",
                    "description": "Name of database",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Resources",
            "module": "Resource"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 385,
            "description": "Get Database Descriptor based on Hybrid model table name.\n\n            var resourceManager = ResourceManager.getInstance();\n            var databaseDescriptor = resourceManager.getDatabaseDescriptorBasedOnTableName('BOOK');",
            "itemtype": "method",
            "name": "getDatabaseDescriptorBasedOnTableName",
            "params": [
                {
                    "name": "className",
                    "description": "Name of class",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Database Descriptor",
                "type": "DatabaseDescriptor"
            },
            "class": "Resources",
            "module": "Resource"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 459,
            "description": "Get Database Descriptor asynchronous based on Hybrid model table name.\n\n            - Using Transaction\n\n                var callback = new Callback();\n                callback.onExecute = function () {\n\n                    var getDatabaseDescriptorCallback = new Callback();\n                    getDatabaseDescriptorCallback.onSuccess = function(databaseDescriptor) {\n\n                    }\n\n                    var resourceManager = ResourceManager.getInstance();\n                    resourceManager.getDatabaseDescriptorBasedOnTableNameAsync(getDatabaseDescriptorCallback, transaction);\n                }\n\n                callback.onSuccess = function() {\n\n                }\n\n                var databaseDescriptor = new Book().getDatabaseDescriptor();\n                Database.beginTransactionAsync(databaseDescriptor, callback);\n\n            - Using Callback\n\n                var callback = new Callback();\n                callback.onSuccess = function(databaseDescriptor) {\n\n                }\n\n\n                var resourceManager = ResourceManager.getInstance();\n                resourceManager.getDatabaseDescriptorBasedOnTableNameAsync",
            "itemtype": "method",
            "name": "getDatabaseDescriptorBasedOnTableNameAsync",
            "params": [
                {
                    "name": "className",
                    "description": "Name of class",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Resources",
            "module": "Resource"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 505,
            "description": "Get Entity Descriptor based on mapped class name provided.\n\n    var resourceManager = ResourceManager.getInstance();\n    var entityDescriptor = resourceManager.getEntityDescriptorBasedOnClassName('Book');",
            "itemtype": "method",
            "name": "getEntityDescriptorBasedOnClassName",
            "params": [
                {
                    "name": "className",
                    "description": "POJO class name.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Entity Descriptor object in respect to mapped class name.",
                "type": "EntityDescriptor"
            },
            "class": "Resources",
            "module": "Resource"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 577,
            "description": "Get Entity Descriptor asynchronous based on mapped class name provided.\n\n            - Using Transaction\n\n                var callback = new Callback();\n                callback.onExecute = function(transaction) {\n\n                    var getEntityDescriptorCallback = new Callback();\n                    getEntityDescriptorCallback.onSuccess = function(entityDescriptor) {\n\n                    }\n\n                    var resourceManager = ResourceManager.getInstance();\n                    resourceManager.getEntityDescriptorBasedOnClassNameAsync('Book', getEntityDescriptorCallback, transaction);\n                }\n\n                callback.onSuccess = function() {\n\n                }\n\n                var databaseDescriptor = new Book().getDatabaseDescriptor();\n                Database.beginTransactionAsync(databaseDescriptor, callback);\n\n            - Using Callback\n\n                var callback = new Callback();\n                callback.onSuccess = function(entityDescriptor) {\n\n                }\n\n\n                var resourceManager = ResourceManager.getInstance();\n                resourceManager.getEntityDescriptorBasedOnClassNameAsync('Book', callback);",
            "itemtype": "method",
            "name": "getEntityDescriptorBasedOnClassNameAsync",
            "params": [
                {
                    "name": "className",
                    "description": "Name of class",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Resources",
            "module": "Resource"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 623,
            "description": "Get Entity Descriptor based on table name provided.\n\n    var resourceManager = ResourceManager.getInstance();\n    var entityDescriptor = resourceManager.getEntityDescriptorBasedOnTableName('BOOK');",
            "itemtype": "method",
            "name": "getEntityDescriptorBasedOnTableName",
            "params": [
                {
                    "name": "tableName",
                    "description": "Name of table.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Entity Descriptor object in respect to table name.",
                "type": "EntityDescriptor"
            },
            "class": "Resources",
            "module": "Resource"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js",
            "line": 696,
            "description": "Get Entity Descriptor asynchronous based on table name provided.\n\n    - Using Transaction\n\n        var callback = new Callback();\n        callback.onExecute = function(transaction) {\n\n            var getEntityDescriptorCallback = new Callback();\n            getEntityDescriptorCallback.onSuccess = function(entityDescriptor) {\n\n            }\n\n\n            var resourceManager = ResourceManager.getInstance();\n            resourceManager.getEntityDescriptorBasedOnTableNameAsync('BOOK', getEntityDescriptorCallback, transaction);\n        }\n\n        callback.onSuccess = function() {\n\n        }\n\n        var databaseDescriptor = new Book().getDatabaseDescriptor();\n        Database.beginTransactionAsync('BOOK', callback);\n\n\n    - Using Callback\n\n        var callback = new Callback();\n        callback.onSuccess = function(entityDescriptor) {\n\n        }\n\n        var resourceManager = ResourceManager.getInstance();\n        resourceManager.getEntityDescriptorBasedOnTableNameAsync('BOOK', callback);",
            "itemtype": "method",
            "name": "getEntityDescriptorBasedOnTableNameAsync",
            "params": [
                {
                    "name": "tableName",
                    "description": "Name of table",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                },
                {
                    "name": "transaction",
                    "description": "Request Transaction",
                    "type": "Transaction"
                }
            ],
            "class": "Resources",
            "module": "Resource"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IResource.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "IResource",
            "module": "Resource"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IResource.js",
            "line": 71,
            "description": "Get all service request resources",
            "itemtype": "method",
            "name": "getResources",
            "return": {
                "description": "Service Request Resources"
            },
            "class": "IResource",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IResource.js",
            "line": 79,
            "description": "Get service request resource",
            "itemtype": "method",
            "name": "getResource",
            "return": {
                "description": "Service Request Resource"
            },
            "class": "IResource",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IResource.js",
            "line": 87,
            "description": "Add resources",
            "itemtype": "method",
            "name": "addResources",
            "params": [
                {
                    "name": "name",
                    "description": "Name of resource",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Value of resource",
                    "type": "String"
                }
            ],
            "class": "IResource",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IResource.js",
            "line": 96,
            "description": "Check whether it contains resource or not based on its name",
            "itemtype": "method",
            "name": "containResource",
            "params": [
                {
                    "name": "name",
                    "description": "Name of resource",
                    "type": "String"
                }
            ],
            "return": {
                "description": "(true/false) TRUE: If it contains resource | FALSE: If it does not contain resource",
                "type": "Boolean"
            },
            "class": "IResource",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "IService",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js",
            "line": 69,
            "description": "Get service request id",
            "itemtype": "method",
            "name": "getRequestId",
            "return": {
                "description": "Service Request Id",
                "type": "String"
            },
            "class": "IService",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js",
            "line": 77,
            "description": "Set service request id",
            "itemtype": "method",
            "name": "setRequestId",
            "params": [
                {
                    "name": "requestId",
                    "description": "Service Request Id",
                    "type": "String"
                }
            ],
            "class": "IService",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js",
            "line": 85,
            "description": "Get service name",
            "itemtype": "method",
            "name": "getService",
            "return": {
                "description": "Service Name",
                "type": "String"
            },
            "class": "IService",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js",
            "line": 93,
            "description": "Set service name",
            "itemtype": "method",
            "name": "setService",
            "params": [
                {
                    "name": "service",
                    "description": "Name of service",
                    "type": "String"
                }
            ],
            "class": "IService",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js",
            "line": 101,
            "description": "Get request name",
            "itemtype": "method",
            "name": "getRequest",
            "return": {
                "description": "Name of request",
                "type": "String"
            },
            "class": "IService",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js",
            "line": 109,
            "description": "Set request name",
            "itemtype": "method",
            "name": "setRequest",
            "params": [
                {
                    "name": "request",
                    "description": "Name of request",
                    "type": "String"
                }
            ],
            "class": "IService",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js",
            "line": 117,
            "description": "Get service descriptor",
            "itemtype": "method",
            "name": "getServiceDescriptor",
            "return": {
                "description": "Service Descriptor",
                "type": "ServiceDescriptor"
            },
            "class": "IService",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js",
            "line": 125,
            "description": "Set service descriptor",
            "itemtype": "method",
            "name": "setServiceDescriptor",
            "params": [
                {
                    "name": "serviceDescriptor",
                    "description": "Service Descriptor",
                    "type": "ServiceDescriptor"
                }
            ],
            "class": "IService",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js",
            "line": 133,
            "description": "It process the service request",
            "itemtype": "method",
            "name": "invoke",
            "class": "IService",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js",
            "line": 141,
            "description": "It process the service request asynchronous",
            "itemtype": "method",
            "name": "invokeAsync",
            "params": [
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                }
            ],
            "class": "IService",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js",
            "line": 150,
            "description": "It terminated the executing service request",
            "itemtype": "method",
            "name": "terminate",
            "class": "IService",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "IServiceEvents",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js",
            "line": 71,
            "description": "This is the first method to be called when a service is created. \n\n<p>\nOnStart is always overridden to perform any startup initializations that may be required by a Service such as:\n\n<p>\n<ui>\n\t<li> Initializing variables\n\t<li> Binding static data to service\n\t<li> Binding related screen to service\n</ui>\n<p>\nOnce OnStart has finished, Connect will call OnServiceQueue if Service is in ASYNC mode else OnServiceApiInvoke.\t\n\t\t * \n\t\t * @method onStart",
            "class": "IServiceEvents",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js",
            "line": 90,
            "description": "This method is called when the service is put in the queue for the execution.",
            "class": "IServiceEvents",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js",
            "line": 95,
            "description": "This method is called when there is no network. Services should override this method if they need to:\n\t\n<p>\n<ui>\n\t<li> Commit unsaved changes to persistent data\n\t<li> Destroy or clean up other objects consuming resources\n\t<li> Display any relevant alerts or dialogs\n</ui>\n\t\t * \n\t\t * @method onPause",
            "class": "IServiceEvents",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js",
            "line": 110,
            "description": "The Connect calls this method when the Service is ready to start executing. \n<p>\nServices should override this method to perform tasks such as:\t\t\n\t\n<p>\n<ui>\t\n\t<li> Display any relevant alerts or dialogs\n\t<li> Wire up external event handlers\n\t<li> Listening for GPS updates\n\t\t \t<ui>\n\t\t * \n\t\t * @method onResume",
            "class": "IServiceEvents",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js",
            "line": 127,
            "description": "This is the final method that is called on a Service instance before it�s destroyed and completely removed from memory.\n\t\t\t<p>\n\t\t\tThere will be no lifecycle methods called after the Activity has been destroyed.",
            "itemtype": "method",
            "name": "onFinish",
            "class": "IServiceEvents",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js",
            "line": 137,
            "description": "This method is called before Service calls Hybrid Service Request.",
            "itemtype": "method",
            "name": "onRequestInvoke",
            "params": [
                {
                    "name": "connectionRequest",
                    "description": "IConnectionRequest instance"
                }
            ],
            "class": "IServiceEvents",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js",
            "line": 146,
            "description": "This method is called after Hybrid Service Request is executed.",
            "itemtype": "method",
            "name": "onRequestFinish",
            "params": [
                {
                    "name": "connectionResponse",
                    "description": "IConnectionResponse instance"
                }
            ],
            "class": "IServiceEvents",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js",
            "line": 155,
            "description": "This method is called when there is any exception while executing the service. \n\t\t\t<p>\n\t\t\tOnce this is called the service will be terminated and release from the memory.",
            "itemtype": "method",
            "name": "onTerminate",
            "params": [
                {
                    "name": "serviceException",
                    "description": ""
                }
            ],
            "class": "IServiceEvents",
            "module": "Service",
            "submodule": "Design"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 76,
            "description": "Get request id",
            "itemtype": "method",
            "name": "getRequestId",
            "return": {
                "description": "Request Id"
            },
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 86,
            "description": "Set request id",
            "itemtype": "method",
            "name": "setRequestId",
            "params": [
                {
                    "name": "val",
                    "description": "Request Id",
                    "type": "String"
                }
            ],
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 96,
            "description": "Get service name",
            "itemtype": "method",
            "name": "getService",
            "return": {
                "description": "Name of service",
                "type": "String"
            },
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 106,
            "description": "Set service name",
            "itemtype": "method",
            "name": "setService",
            "params": [
                {
                    "name": "val",
                    "description": "Name of service",
                    "type": "String"
                }
            ],
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 116,
            "description": "Get service request name",
            "itemtype": "method",
            "name": "getRequest",
            "return": {
                "description": "Name of Service Request",
                "type": "String"
            },
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 126,
            "description": "Set",
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 133,
            "description": "Get service descriptor",
            "itemtype": "method",
            "name": "getServiceDescriptor",
            "return": {
                "description": "Service Descriptor",
                "type": "ServiceDescriptor"
            },
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 143,
            "description": "Set service descriptor",
            "itemtype": "method",
            "name": "setServiceDescriptor",
            "params": [
                {
                    "name": "val",
                    "description": "Service Descriptor",
                    "type": "ServiceDescriptor"
                }
            ],
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 153,
            "description": "It invokes the respective service request",
            "itemtype": "method",
            "name": "invoke",
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 171,
            "description": "It invokes the respective service request asynchronous",
            "itemtype": "method",
            "name": "invokeAsync",
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 185,
            "description": "Get all resources",
            "itemtype": "method",
            "name": "getResources",
            "return": {
                "description": "Resources",
                "type": "Array"
            },
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 195,
            "description": "Get resource based on name",
            "itemtype": "method",
            "name": "getResource",
            "params": [
                {
                    "name": "val",
                    "description": "Name of resource",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Resource",
                "type": "String"
            },
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 206,
            "description": "Add resource",
            "itemtype": "method",
            "name": "addResource",
            "params": [
                {
                    "name": "name",
                    "description": "Name of resource",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Value of resource",
                    "type": "String"
                }
            ],
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js",
            "line": 218,
            "description": "Check whether it contain resource or not",
            "itemtype": "method",
            "name": "containResource",
            "params": [
                {
                    "name": "val",
                    "description": "Name of resource",
                    "type": "String"
                }
            ],
            "return": {
                "description": "(true/false) TRUE: If resource exists | FALSE: If resource does not exists",
                "type": "Boolean"
            },
            "class": "Service",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/ServiceEventHandler.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ServiceEventHandler",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/ServiceEventHandler.js",
            "line": 68,
            "description": "Handle service event triggered by Siminov.",
            "itemtype": "method",
            "name": "triggerEvent",
            "params": [
                {
                    "name": "data",
                    "description": "Hybrid Data From Native",
                    "type": "String"
                }
            ],
            "class": "ServiceEventHandler",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/ServiceHandler.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "ServiceHandler",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/ServiceHandler.js",
            "line": 101,
            "description": "It handles the service request",
            "itemtype": "method",
            "name": "handler",
            "params": [
                {
                    "name": "iService",
                    "description": "Service instance",
                    "type": "Service"
                }
            ],
            "class": "ServiceHandler",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncHandler.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "SyncHandler",
            "module": "Service"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncHandler.js",
            "line": 103,
            "description": "It handles and processes the sync request",
            "itemtype": "method",
            "name": "handle",
            "params": [
                {
                    "name": "syncRequest",
                    "description": "Sync Request",
                    "type": "ISyncRequest"
                }
            ],
            "class": "SyncHandler",
            "module": "Sync"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncHandler.js",
            "line": 189,
            "description": "It handles and processes the sync request asynchronous",
            "itemtype": "method",
            "name": "handleAsync",
            "params": [
                {
                    "name": "syncRequest",
                    "description": "Sync Request",
                    "type": "ISyncRequest"
                },
                {
                    "name": "callback",
                    "description": "Request Callback",
                    "type": "Callback"
                }
            ],
            "class": "SyncHandler",
            "module": "Sync"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncRequest.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "SyncRequest",
            "module": "Sync"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncRequest.js",
            "line": 74,
            "description": "Get name of sync request",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "Name of sync request",
                "type": "String"
            },
            "class": "SyncRequest",
            "module": "Sync"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncRequest.js",
            "line": 84,
            "description": "Set the name of sync request",
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "val",
                    "description": "Name of sync request",
                    "type": "String"
                }
            ],
            "class": "SyncRequest",
            "module": "Sync"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncRequest.js",
            "line": 94,
            "description": "Get all resources",
            "itemtype": "method",
            "name": "getResources",
            "return": {
                "description": "Resources",
                "type": "Array"
            },
            "class": "SyncRequest",
            "module": "Sync"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncRequest.js",
            "line": 104,
            "description": "Get resource based on its name",
            "itemtype": "method",
            "name": "getResource",
            "params": [
                {
                    "name": "val",
                    "description": "Name of the resource",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Resource",
                "type": "String"
            },
            "class": "SyncRequest",
            "module": "Sync"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncRequest.js",
            "line": 115,
            "description": "Add resource",
            "itemtype": "method",
            "name": "addResource",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the resource",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Value of the resource",
                    "type": "String"
                }
            ],
            "class": "SyncRequest",
            "module": "Sync"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncRequest.js",
            "line": 126,
            "description": "Check whether it contains resource or not",
            "itemtype": "method",
            "name": "containResource",
            "params": [
                {
                    "name": "val",
                    "description": "Name of the resource",
                    "type": "String"
                }
            ],
            "return": {
                "description": "(true/false) TRUE: If resource exists | FALSE: If resource does not exists",
                "type": "Boolean"
            },
            "class": "SyncRequest",
            "module": "Sync"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Utils/Utils.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Utils",
            "module": "Sync"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Utils/Utils.js",
            "line": 58,
            "description": "Generates unique number",
            "itemtype": "method",
            "name": "uniqueNumber",
            "return": {
                "description": "Unique Number"
            },
            "class": "Utils",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Callback.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Callback.js",
            "line": 42,
            "description": "Used to handle asynchronous request callbacks\nIt exposes event function such as onSuccess, onFailure, onExecute",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Callback.js",
            "line": 49,
            "description": "It is invoked when the request is successful completed",
            "itemtype": "method",
            "name": "onSuccess",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Callback.js",
            "line": 57,
            "description": "It is invoked when the request is failed",
            "itemtype": "method",
            "name": "onFailure",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Callback.js",
            "line": 65,
            "description": "It is invoked when transaction is executed",
            "itemtype": "method",
            "name": "onExecute",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 55,
            "description": "Application Descriptor Name",
            "itemtype": "property",
            "name": "APPLICATION_DESCRIPTOR_NAME",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 66,
            "description": "Application Descriptor Description",
            "itemtype": "property",
            "name": "APPLICATION_DESCRIPTOR_DESCRIPTION",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 77,
            "description": "Application Descriptor Version",
            "itemtype": "property",
            "name": "APPLICATION_DESCRIPTOR_VERSION",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 89,
            "description": "Application Descriptor Deploy",
            "itemtype": "property",
            "name": "APPLICATION_DESCRIPTOR_DEPLOY",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 105,
            "description": "Database Descriptor Database Name",
            "itemtype": "property",
            "name": "DATABASE_DESCRIPTOR_DATABASE_NAME",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 116,
            "description": "Database Descriptor Description",
            "itemtype": "property",
            "name": "DATABASE_DESCRIPTOR_DESCRIPTION",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 127,
            "description": "Database Descriptor Type",
            "itemtype": "property",
            "name": "DATABASE_DESCRIPTOR_TYPE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 138,
            "description": "Database Descriptor Is Locking Required",
            "itemtype": "property",
            "name": "DATABASE_DESCRIPTOR_IS_LOCKING_REQUIRED",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 149,
            "description": "Database Descriptor External Storage",
            "itemtype": "property",
            "name": "DATABASE_DESCRIPTOR_EXTERNAL_STORAGE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 165,
            "description": "Library Descriptor Name",
            "itemtype": "property",
            "name": "LIBRARY_DESCRIPTOR_NAME",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 176,
            "description": "Library Descriptor Description",
            "itemtype": "property",
            "name": "LIBRARY_DESCRIPTOR_DESCRIPTION",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 191,
            "description": "Entity Descriptor Table Name",
            "itemtype": "property",
            "name": "ENTITY_DESCRIPTOR_TABLE_NAME",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 202,
            "description": "Entity Descriptor Class Name",
            "itemtype": "property",
            "name": "ENTITY_DESCRIPTOR_ATTRIBUTE_CLASS_NAME",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 213,
            "description": "Entity Descriptor Attribute Variable Name",
            "itemtype": "property",
            "name": "ENTITY_DESCRIPTOR_ATTRIBUTE_VARIABLE_NAME",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 224,
            "description": "Entity Descriptor Attribute Column Name",
            "itemtype": "property",
            "name": "ENTITY_DESCRIPTOR_ATTRIBUTE_COLUMN_NAME",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 236,
            "description": "Entity Descriptor Attribute Primary Key",
            "itemtype": "property",
            "name": "ENTITY_DESCRIPTOR_ATTRIBUTE_PRIMARY_KEY",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 247,
            "description": "Entity Descriptor Attribute Unique",
            "itemtype": "property",
            "name": "ENTITY_DESCRIPTOR_ATTRIBUTE_UNIQUE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 258,
            "description": "Entity Descriptor Attribute Not Null",
            "itemtype": "property",
            "name": "ENTITY_DESCRIPTOR_ATTRIBUTE_NOT_NULL",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 269,
            "description": "Entity Descriptor Attribute Default Value",
            "itemtype": "property",
            "name": "ENTITY_DESCRIPTOR_ATTRIBUTE_DEFAULT_VALUE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 280,
            "description": "Entity Descriptor Attribute Check",
            "itemtype": "property",
            "name": "ENTITY_DESCRIPTOR_ATTRIBUTE_CHECK",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 291,
            "description": "Entity Descriptor Attribute Type",
            "itemtype": "property",
            "name": "ENTITY_DESCRIPTOR_ATTRIBUTE_TYPE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 303,
            "description": "Entity Descriptor Relationship Attribute Load",
            "itemtype": "property",
            "name": "ENTITY_DESCRIPTOR_RELATIONSHIP_ATTRIBUTE_LOAD",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 319,
            "description": "Adapter Descriptor Name",
            "itemtype": "property",
            "name": "ADAPTER_DESCRIPTOR_NAME",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 330,
            "description": "Adapter Descriptor Description",
            "itemtype": "property",
            "name": "ADAPTER_DESCRIPTOR_DESCRIPTION",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 341,
            "description": "Adapter Descriptor Type",
            "itemtype": "property",
            "name": "ADAPTER_DESCRIPTOR_TYPE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 352,
            "description": "Adapter Descriptor Map To",
            "itemtype": "property",
            "name": "ADAPTER_DESCRIPTOR_MAP_TO",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 363,
            "description": "Adapter Descriptor Cache",
            "itemtype": "property",
            "name": "ADAPTER_DESCRIPTOR_CACHE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 376,
            "description": "Adapter Descriptor Handler Name",
            "itemtype": "property",
            "name": "ADAPTER_DESCRIPTOR_HANDLER_NAME",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 387,
            "description": "Adapter Descriptor Handler Map To",
            "itemtype": "property",
            "name": "ADAPTER_DESCRIPTOR_HANDLER_MAP_TO",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 398,
            "description": "Adapter Descriptor Handler Description",
            "itemtype": "property",
            "name": "ADAPTER_DESCRIPTOR_HANDLER_DESCRIPTION",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 410,
            "description": "Adapter Descriptor Parameter Type",
            "itemtype": "property",
            "name": "ADAPTER_DESCRIPTOR_PARAMETER_TYPE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 421,
            "description": "Adapter Descriptor Parameter Description",
            "itemtype": "property",
            "name": "ADAPTER_DESCRIPTOR_PARAMETER_DESCRIPTION",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 433,
            "description": "Adapter Descriptor Return Type",
            "itemtype": "property",
            "name": "ADAPTER_DESCRIPTOR_RETURN_TYPE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 444,
            "description": "Adapter Descriptor Return Description",
            "itemtype": "property",
            "name": "ADAPTER_DESCRIPTOR_RETURN_DESCRIPTION",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 458,
            "description": "Service Descriptor Name",
            "itemtype": "property",
            "name": "SERVICE_DESCRIPTOR_NAME",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 469,
            "description": "Service Descriptor Description",
            "itemtype": "property",
            "name": "SERVICE_DESCRIPTOR_DESCRIPTION",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 480,
            "description": "Service Descriptor Protocol",
            "itemtype": "property",
            "name": "SERVICE_DESCRIPTOR_PROTOCOL",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 491,
            "description": "Service Descriptor Instance",
            "itemtype": "property",
            "name": "SERVICE_DESCRIPTOR_INSTANCE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 502,
            "description": "Service Descriptor Port",
            "itemtype": "property",
            "name": "SERVICE_DESCRIPTOR_PORT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 513,
            "description": "Service Descriptor Context",
            "itemtype": "property",
            "name": "SERVICE_DESCRIPTOR_CONTEXT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 525,
            "description": "Service Descriptor Request Name",
            "itemtype": "property",
            "name": "SERVICE_DESCRIPTOR_REQUEST_NAME",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 536,
            "description": "Service Descriptor Request Type",
            "itemtype": "property",
            "name": "SERVICE_DESCRIPTOR_REQUEST_TYPE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 547,
            "description": "Service Descriptor Request API",
            "itemtype": "property",
            "name": "SERVICE_DESCRIPTOR_REQUEST_API",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 558,
            "description": "Service Descriptor Request Mode",
            "itemtype": "property",
            "name": "SERVICE_DESCRIPTOR_REQUEST_MODE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 569,
            "description": "Service Descriptor Request Data Stream",
            "itemtype": "property",
            "name": "SERVICE_DESCRIPTOR_REQUEST_DATA_STREAM",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 584,
            "description": "Sync Descriptor Name",
            "itemtype": "property",
            "name": "SYNC_DESCRIPTOR_NAME",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 595,
            "description": "Sync Descriptor Refresh Interval",
            "itemtype": "property",
            "name": "SYNC_DESCRIPTOR_REFRESH_INTERVAL",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 612,
            "description": "Event Handler Triggered Event",
            "itemtype": "property",
            "name": "EVENT_HANDLER_TRIGGERED_EVENT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 624,
            "description": "Event Handler ISiminov Event First Time Siminov Initialized",
            "itemtype": "property",
            "name": "EVENT_HANDLER_ISIMINOV_EVENT_FIRST_TIME_SIMINOV_INITIALIZED",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 635,
            "description": "Event Handler ISiminov Event Siminov Initialized",
            "itemtype": "property",
            "name": "EVENT_HANDLER_ISIMINOV_EVENT_SIMINOV_INITIALIZED",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 646,
            "description": "Event Handler ISiminov Event Siminov Stopped",
            "itemtype": "property",
            "name": "EVENT_HANDLER_ISIMINOV_EVENT_SIMINOV_STOPPED",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 658,
            "description": "Event Handler IDatabase Event Database Created",
            "itemtype": "property",
            "name": "EVENT_HANDLER_IDATABASE_EVENT_DATABASE_CREATED",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 669,
            "description": "Event Handler IDatabase Event Database Dropped",
            "itemtype": "property",
            "name": "EVENT_HANDLER_IDATABASE_EVENT_DATABASE_DROPPED",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 680,
            "description": "Event Handler IDatabase Event Table Created",
            "itemtype": "property",
            "name": "EVENT_HANDLER_IDATABASE_EVENT_TABLE_CREATED",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 691,
            "description": "Event Handler IDatabase Event Table Dropped",
            "itemtype": "property",
            "name": "EVENT_HANDLER_IDATABASE_EVENT_TABLE_DROPPED",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 702,
            "description": "Event Handler IDatabase Event Index Created",
            "itemtype": "property",
            "name": "EVENT_HANDLER_IDATABASE_EVENT_INDEX_CREATED",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 713,
            "description": "Event Handler IDatabase Event Index Dropped",
            "itemtype": "property",
            "name": "EVENT_HANDLER_IDATABASE_EVENT_INDEX_DROPPED",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 725,
            "description": "Event Handler INotification Event On Registration",
            "itemtype": "property",
            "name": "EVENT_HANDLER_INOTIFICATION_EVENT_ON_REGISTRATION",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 736,
            "description": "Event Handler INotification Event On Unregistration",
            "itemtype": "property",
            "name": "EVENT_HANDLER_INOTIFICATION_EVENT_ON_UNREGISTRATION",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 747,
            "description": "Event Handler INotification Event On Notification",
            "itemtype": "property",
            "name": "EVENT_HANDLER_INOTIFICATION_EVENT_ON_NOTIFICATION",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 758,
            "description": "Event Handler INotification Event On Error",
            "itemtype": "property",
            "name": "EVENT_HANDLER_INOTIFICATION_EVENT_ON_ERROR",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 770,
            "description": "Event Handler ISync Event On Sync Started",
            "itemtype": "property",
            "name": "EVENT_HANDLER_ISYNC_EVENT_ON_SYNC_STARTED",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 781,
            "description": "Event Handler ISync Event On Sync Queued",
            "itemtype": "property",
            "name": "EVENT_HANDLER_ISYNC_EVENT_ON_SYNC_QUEUED",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 792,
            "description": "Event Handler ISync Event On Sync Removed",
            "itemtype": "property",
            "name": "EVENT_HANDLER_ISYNC_EVENT_ON_SYNC_REMOVED",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 803,
            "description": "Event Handler ISync Event On Sync Terminated",
            "itemtype": "property",
            "name": "EVENT_HANDLER_ISYNC_EVENT_ON_SYNC_TERMINATED",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 815,
            "description": "Event Handler Events",
            "itemtype": "property",
            "name": "EVENT_HANDLER_EVENTS",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 826,
            "description": "Event Handler Event Parameters",
            "itemtype": "property",
            "name": "EVENT_HANDLER_EVENT_PARAMETERS",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 843,
            "description": "Siminov Resources Adapter",
            "itemtype": "property",
            "name": "SIMINOV_RESOURCES_ADAPTER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 854,
            "description": "Resource Get Application Descriptor Handler",
            "itemtype": "property",
            "name": "RESOURCE_GET_APPLICATION_DESCRIPTOR_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 865,
            "description": "Resource Get Database Descriptor Based On Name Handler",
            "itemtype": "property",
            "name": "RESOURCE_GET_DATABASE_DESCRIPTOR_BASED_ON_NAME_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 876,
            "description": "Resource Get Database Descriptor Based On Class Name Handler",
            "itemtype": "property",
            "name": "RESOURCE_GET_DATABASE_DESCRIPTOR_BASED_ON_CLASS_NAME_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 887,
            "description": "Resource Get Database Descriptor Based On Table Name Handler",
            "itemtype": "property",
            "name": "RESOURCE_GET_DATABASE_DESCRIPTOR_BASED_ON_TABLE_NAME_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 898,
            "description": "Resource Get Entity Descriptir Based On Class Name Handler",
            "itemtype": "property",
            "name": "RESOURCE_GET_ENTITY_DESCRIPTOR_BASED_ON_CLASS_NAME_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 909,
            "description": "Resource Get Entity Descriptor Based On Table Name Handler",
            "itemtype": "property",
            "name": "RESOURCE_GET_ENTITY_DESCRIPTOR_BASED_ON_TABLE_NAME_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 926,
            "description": "Siminov Database Adapter",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_ADAPTER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 938,
            "description": "Siminov Database Save Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_SAVE_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 949,
            "description": "Siminov Database Update Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_UPDATE_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 960,
            "description": "Siminov Database Save Or Update Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_SAVE_OR_UPDATE_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 971,
            "description": "Siminov Database Delete Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_DELETE_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 982,
            "description": "Siminov Database Select Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_SELECT_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 994,
            "description": "Siminov Database Select Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_SELECT_MANUAL_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1006,
            "description": "Siminov Database Count Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_COUNT_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1017,
            "description": "Siminov Database Average Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_AVERAGE_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1028,
            "description": "Siminov Database Max Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_MAX_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1039,
            "description": "Siminov Database Min Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_MIN_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1050,
            "description": "Siminov Database Sum Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_SUM_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1061,
            "description": "Siminov Database Total Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_TOTAL_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1072,
            "description": "Siminov Database Group Concat Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_GROUP_CONCAT_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1084,
            "description": "Siminov Database Get Table Name Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_GET_TABLE_NAME_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1095,
            "description": "Siminov Database Get Column Names Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_GET_COLUMN_NAMES_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1106,
            "description": "Siminov Database Get Column Types Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_GET_COLUMN_TYPES_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1117,
            "description": "Siminov Database Get Primary Keys Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_GET_PRIMARY_KEYS_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1128,
            "description": "Siminov Database Get Mandatory Fields Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_GET_MANDATORY_FIELDS_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1139,
            "description": "Siminov Database Get Unique Fields Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_GET_UNIQUE_FIELDS_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1150,
            "description": "Siminov Database Get Foreign Keys Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_GET_FOREIGN_KEYS_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1163,
            "description": "Siminov Database Begin Transaction Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_BEGIN_TRANSACTION_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1177,
            "description": "Siminov Database Commit Transaction Handler",
            "itemtype": "property",
            "name": "SIMINOV_DATABASE_COMMIT_TRANSACTION_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1194,
            "description": "Siminov Adapter",
            "itemtype": "property",
            "name": "SIMINOV_ADAPTER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1206,
            "description": "Siminov Adapter Initialize Siminov Handler",
            "itemtype": "property",
            "name": "SIMINOV_ADAPTER_INITIALIZE_SIMINOV_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1218,
            "description": "Siminov Adapter Shutdown Siminov Handler",
            "itemtype": "property",
            "name": "SIMINOV_ADAPTER_SHUTDOWN_SIMINOV_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1234,
            "description": "Siminov Hybrid Datas",
            "itemtype": "property",
            "name": "SIMINOV_HYBRID_DATAS",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1245,
            "description": "Siminov Hybrid Data Datas",
            "itemtype": "property",
            "name": "SIMINOV_HYBRID_DATA_DATAS",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1256,
            "description": "Siminov Hybrid Data Type",
            "itemtype": "property",
            "name": "SIMINOV_HYBRID_DATA_TYPE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1267,
            "description": "Siminov Hybrid Data Value",
            "itemtype": "property",
            "name": "SIMINOV_HYBRID_DATA_VALUE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1278,
            "description": "Siminov Hybrid Data Value",
            "itemtype": "property",
            "name": "SIMINOV_HYBRID_DATA_VALUE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1289,
            "description": "Siminov Hybrid Data Value Text",
            "itemtype": "property",
            "name": "SIMINOV_HYBRID_DATA_VALUE_TEXT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1300,
            "description": "Siminov Hybrid Data Value Value",
            "itemtype": "property",
            "name": "SIMINOV_HYBRID_DATA_VALUE_VALUE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1314,
            "description": "Service Adapter",
            "itemtype": "property",
            "name": "SERVICE_ADAPTER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1325,
            "description": "Service Adapter Invoke Handler",
            "itemtype": "property",
            "name": "SERVICE_ADAPTER_INVOKE_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1336,
            "description": "Service Adapter Invoke Handler Service",
            "itemtype": "property",
            "name": "SERVICE_ADAPTER_INVOKE_HANDLER_SERVICE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1347,
            "description": "Service Adapter invoke handler Request Id",
            "itemtype": "property",
            "name": "SERVICE_ADAPTER_INVOKE_HANDLER_REQUEST_ID",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1358,
            "description": "Service Adapter Invoke Handler Service Name",
            "itemtype": "property",
            "name": "SERVICE_ADAPTER_INVOKE_HANDLER_SERVICE_NAME",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1369,
            "description": "Service Adapter Invoke Handler Service API",
            "itemtype": "property",
            "name": "SERVICE_ADAPTER_INVOKE_HANDLER_SERVICE_API",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1380,
            "description": "Service Adapter Invoke Handler Service Resources",
            "itemtype": "property",
            "name": "SERVICE_ADAPTER_INVOKE_HANDLER_SERVICE_RESOURCES",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1391,
            "description": "IService Request Id",
            "itemtype": "property",
            "name": "ISERVICE_REQUEST_ID",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1402,
            "description": "IService API Handler",
            "itemtype": "property",
            "name": "ISERVICE_API_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1413,
            "description": "IService Triggered Event",
            "itemtype": "property",
            "name": "ISERVICE_TRIGGERED_EVENT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1424,
            "description": "IService Connection Request",
            "itemtype": "property",
            "name": "ISERVICE_CONNECTION_REQUEST",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1435,
            "description": "IService Connection Response",
            "itemtype": "property",
            "name": "ISERVICE_CONNECTION_RESPONSE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1446,
            "description": "IService On Start Event",
            "itemtype": "property",
            "name": "ISERVICE_ON_START_EVENT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1457,
            "description": "IService On Queue Event",
            "itemtype": "property",
            "name": "ISERVICE_ON_QUEUE_EVENT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1468,
            "description": "IService On Pause Event",
            "itemtype": "property",
            "name": "ISERVICE_ON_PAUSE_EVENT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1479,
            "description": "IService On Resume Event",
            "itemtype": "property",
            "name": "ISERVICE_ON_RESUME_EVENT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1490,
            "description": "IService On Finish Event",
            "itemtype": "property",
            "name": "ISERVICE_ON_FINISH_EVENT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1501,
            "description": "IService On Request Invoke Event",
            "itemtype": "property",
            "name": "ISERVICE_ON_REQUEST_INVOKE_EVENT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1512,
            "description": "IService On Request Finish Event",
            "itemtype": "property",
            "name": "ISERVICE_ON_REQUEST_FINISH_EVENT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1523,
            "description": "IService On Terminate Event",
            "itemtype": "property",
            "name": "ISERVICE_ON_TERMINATE_EVENT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1534,
            "description": "IService Resources",
            "itemtype": "property",
            "name": "ISERVICE_RESOURCES",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1545,
            "description": "IService Resource",
            "itemtype": "property",
            "name": "ISERVICE_RESOURCE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1556,
            "description": "IService Add Resource",
            "itemtype": "property",
            "name": "ISERVICE_ADD_RESOURCE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1570,
            "description": "Notification Adapter",
            "itemtype": "property",
            "name": "NOTIFICATION_ADAPTER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1581,
            "description": "Notification Adater Do Registration Handler",
            "itemtype": "property",
            "name": "NOTIFICATION_ADAPTER_DO_REGISTRATION_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1592,
            "description": "Notification Adapter Do Unregistration handler",
            "itemtype": "property",
            "name": "NOTIFICATION_ADPATER_DO_UNREGISTRATION_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1606,
            "description": "Sync Adapter",
            "itemtype": "property",
            "name": "SYNC_ADAPTER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1617,
            "description": "Sync Adapter Handler Handler",
            "itemtype": "property",
            "name": "SYNC_ADAPTER_HANDLE_HANDLER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1628,
            "description": "Sync Adapter Handler Handler Sync Request",
            "itemtype": "property",
            "name": "SYNC_ADAPTER_HANDLE_HANDLER_SYNC_REQUEST",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1639,
            "description": "Sync Adapter Handler Handler Sync Request Id",
            "itemtype": "property",
            "name": "SYNC_ADAPTER_HANDLE_HANDLER_SYNC_REQUEST_ID",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1650,
            "description": "Sync Adapter Handler Handler Sync Request Name",
            "itemtype": "property",
            "name": "SYNC_ADAPTER_HANDLE_HANDLER_SYNC_REQUEST_NAME",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1661,
            "description": "Sync Adapter Handler Handler Sync Request Resources",
            "itemtype": "property",
            "name": "SYNC_ADAPTER_HANDLE_HANDLER_SYNC_REQUEST_RESOURCES",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1673,
            "description": "HTTP Get Method",
            "itemtype": "property",
            "name": "HTTP_GET_METHOD",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1684,
            "description": "HTTP Post Method",
            "itemtype": "property",
            "name": "HTTP_POST_METHOD",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1695,
            "description": "HTTP Request API Query Parameter",
            "itemtype": "property",
            "name": "HTTP_REQUEST_API_QUERY_PARAMETER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1706,
            "description": "HTTP Request Data Query Parameter",
            "itemtype": "property",
            "name": "HTTP_REQUEST_DATA_QUERY_PARAMETER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1717,
            "description": "HTTP Siminov Protocol",
            "itemtype": "property",
            "name": "HTTP_SIMINOV_PROTOCOL",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1728,
            "description": "Request Unique ID",
            "itemtype": "property",
            "name": "REQUEST_UNIQUE_ID",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1739,
            "description": "HTTP Request ID",
            "itemtype": "property",
            "name": "HTTP_REQUEST_ID",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js",
            "line": 1750,
            "description": "HTTP Request Mode",
            "itemtype": "property",
            "name": "HTTP_REQUEST_MODE",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "class": "Constants",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Import.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Siminov",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Siminov-build.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Siminov",
            "module": "Utils"
        },
        {
            "file": "/private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Siminov.js",
            "line": 1,
            "description": "[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "class": "Siminov",
            "module": "Utils"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js:1"
        },
        {
            "message": "Missing item type\nAndroid Native Bridge",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js:259"
        },
        {
            "message": "Missing item type\nTitanium Native Bridge",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js:301"
        },
        {
            "message": "Missing item type\niOS and Windows Sync Native Bridge",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js:327"
        },
        {
            "message": "Missing item type\niOS and Windows Async Native Bridge",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js:341"
        },
        {
            "message": "Missing item type\nRemove Request From Queue",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Adapter/Adapter.js:387"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Array.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/Dictionary.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/String.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Collection/StringBuilder.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionRequest.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Connection/ConnectionResponse.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverage.js:73"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IAverageClause.js:69"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js:71"
        },
        {
            "message": "Missing item type\nUsed to specify DISTINCT condition.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICount.js:77"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ICountClause.js:70"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDelete.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDelete.js:73"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IDeleteClause.js:69"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcat.js:73"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IGroupConcatClause.js:68"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMax.js:71"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMaxClause.js:69"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMin.js:74"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/IMinClause.js:70"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelect.js:69"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISelectClause.js:67"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISum.js:72"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ISumClause.js:70"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotal.js:70"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js:1"
        },
        {
            "message": "Missing item type\nName of Interface",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Design/ITotalClause.js:69"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Clause.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Database.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Select.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Database/Transaction.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/EventHandler.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/IDatabaseEvents.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/INotificationEvents.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISiminovEvents.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Events/ISyncEvents.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/DatabaseException.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/DeploymentException.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/NotificationException.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/ServiceException.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovException.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SiminovExceptionHandler.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Exception/SyncException.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Function/Function.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Log/Log.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js:1"
        },
        {
            "message": "Missing item type\nGet Name of Adapter.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js:136"
        },
        {
            "message": "Missing item type\nSet Name of Adapter.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js:144"
        },
        {
            "message": "Missing item type\nGet Description of Adapter.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js:152"
        },
        {
            "message": "Missing item type\nSet Description of Adapter.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js:160"
        },
        {
            "message": "Missing item type\nGet Type of Adapter.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js:168"
        },
        {
            "message": "Missing item type\nSet Type of Adapter.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js:176"
        },
        {
            "message": "Missing item type\nGet Map To Name.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js:184"
        },
        {
            "message": "Missing item type\nSet Map To Name.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js:192"
        },
        {
            "message": "Missing item type\nCheck whether cache is enabled or disabled.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js:200"
        },
        {
            "message": "Missing item type\nSet Cache value.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js:208"
        },
        {
            "message": "Missing item type\nExposes methods to GET and SET Return information as per define in AdapterDescriptor.xml file or in standalone adapter xml file in application.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/AdapterDescriptor.js:531"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ApplicationDescriptor.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/DatabaseDescriptor.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/EntityDescriptor.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/HybridSiminovDatas.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/LibraryDescriptor.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/NotificationDescriptor.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/ServiceDescriptor.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Model/SyncDescriptor.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Message.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/NotificationManager.js:1"
        },
        {
            "message": "Missing item type\nIt provides singleton instance of Notification Manager",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/NotificationManager.js:58"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Notification/Registration.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/ReaderWriter/SIDatasHelper.js:1"
        },
        {
            "message": "Missing item type\nConvert Model to SI Datas",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/ReaderWriter/SIDatasHelper.js:175"
        },
        {
            "message": "Missing item type\nConvert Model to SI Data",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/ReaderWriter/SIDatasHelper.js:189"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Resource/ResourceManager.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IResource.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IService.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js:1"
        },
        {
            "message": "Missing item type\nThis is the first method to be called when a service is created. \n\n<p>\nOnStart is always overridden to perform any startup initializations that may be required by a Service such as:\n\n<p>\n<ui>\n\t<li> Initializing variables\n\t<li> Binding static data to service\n\t<li> Binding related screen to service\n</ui>\n<p>\nOnce OnStart has finished, Connect will call OnServiceQueue if Service is in ASYNC mode else OnServiceApiInvoke.\t\n\t\t * \n\t\t * @method onStart",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js:71"
        },
        {
            "message": "Missing item type\nThis method is called when the service is put in the queue for the execution.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js:90"
        },
        {
            "message": "Missing item type\nThis method is called when there is no network. Services should override this method if they need to:\n\t\n<p>\n<ui>\n\t<li> Commit unsaved changes to persistent data\n\t<li> Destroy or clean up other objects consuming resources\n\t<li> Display any relevant alerts or dialogs\n</ui>\n\t\t * \n\t\t * @method onPause",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js:95"
        },
        {
            "message": "Missing item type\nThe Connect calls this method when the Service is ready to start executing. \n<p>\nServices should override this method to perform tasks such as:\t\t\n\t\n<p>\n<ui>\t\n\t<li> Display any relevant alerts or dialogs\n\t<li> Wire up external event handlers\n\t<li> Listening for GPS updates\n\t\t \t<ui>\n\t\t * \n\t\t * @method onResume",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Design/IServiceEvents.js:110"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js:1"
        },
        {
            "message": "Missing item type\nSet",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/Service.js:126"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/ServiceEventHandler.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Service/ServiceHandler.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncHandler.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Sync/SyncRequest.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Utils/Utils.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Callback.js:1"
        },
        {
            "message": "Missing item type\nUsed to handle asynchronous request callbacks\nIt exposes event function such as onSuccess, onFailure, onExecute",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Callback.js:42"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Constants.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Import.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Siminov-build.js:1"
        },
        {
            "message": "Missing item type\n[SIMINOV FRAMEWORK - HYBRID]\nCopyright [2014-2016] [Siminov Software Solution LLP|support@siminov.com]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "line": " /private/var/user/Documents/App/Hybrid/JavaScript/Siminov/Siminov.js:1"
        }
    ]
}